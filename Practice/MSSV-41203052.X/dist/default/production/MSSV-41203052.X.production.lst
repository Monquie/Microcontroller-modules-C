

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 03 14:27:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F8722 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	smallconst
    89  001000                     __psmallconst:
    90                           	opt callstack 0
    91  001000  00                 	db	0
    92  001001                     _dhbkstr:
    93                           	opt callstack 0
    94  001001  0F                 	db	15
    95  001002  0F                 	db	15
    96  001003  0E                 	db	14
    97  001004  1F                 	db	31
    98  001005  0E                 	db	14
    99  001006  0F                 	db	15
   100  001007  0F                 	db	15
   101  001008  00                 	db	0
   102  001009  1E                 	db	30
   103  00100A  1F                 	db	31
   104  00100B  07                 	db	7
   105  00100C  07                 	db	7
   106  00100D  07                 	db	7
   107  00100E  1F                 	db	31
   108  00100F  1E                 	db	30
   109  001010  00                 	db	0
   110  001011  1C                 	db	28
   111  001012  1C                 	db	28
   112  001013  1C                 	db	28
   113  001014  1F                 	db	31
   114  001015  1F                 	db	31
   115  001016  1C                 	db	28
   116  001017  1C                 	db	28
   117  001018  00                 	db	0
   118  001019  07                 	db	7
   119  00101A  07                 	db	7
   120  00101B  07                 	db	7
   121  00101C  1F                 	db	31
   122  00101D  1F                 	db	31
   123  00101E  07                 	db	7
   124  00101F  07                 	db	7
   125  001020  00                 	db	0
   126  001021  1F                 	db	31
   127  001022  1C                 	db	28
   128  001023  1C                 	db	28
   129  001024  1F                 	db	31
   130  001025  1C                 	db	28
   131  001026  1F                 	db	31
   132  001027  1F                 	db	31
   133  001028  00                 	db	0
   134  001029  18                 	db	24
   135  00102A  1C                 	db	28
   136  00102B  1C                 	db	28
   137  00102C  1E                 	db	30
   138  00102D  07                 	db	7
   139  00102E  1F                 	db	31
   140  00102F  1E                 	db	30
   141  001030  00                 	db	0
   142  001031  1C                 	db	28
   143  001032  1D                 	db	29
   144  001033  1F                 	db	31
   145  001034  1F                 	db	31
   146  001035  1E                 	db	30
   147  001036  1C                 	db	28
   148  001037  1C                 	db	28
   149  001038  00                 	db	0
   150  001039  1C                 	db	28
   151  00103A  18                 	db	24
   152  00103B  10                 	db	16
   153  00103C  18                 	db	24
   154  00103D  1C                 	db	28
   155  00103E  0E                 	db	14
   156  00103F  07                 	db	7
   157  001040  00                 	db	0
   158  001041                     __end_of_dhbkstr:
   159                           	opt callstack 0
   160  0000                     _TMR0	set	4054
   161  0000                     _T0CON	set	4053
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _SSP1BUF	set	4041
   164  0000                     _SSP1CON1	set	4038
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADRESL	set	4035
   167  0000                     _ADRESH	set	4036
   168  0000                     _INTCONbits	set	4082
   169  0000                     _PIE1bits	set	3997
   170  0000                     _PIR1bits	set	3998
   171  0000                     _IPR1bits	set	3999
   172  0000                     _RCONbits	set	4048
   173  0000                     _ADCON2	set	4032
   174  0000                     _ADCON1	set	4033
   175  0000                     _ADCON0	set	4034
   176  0000                     _TRISFbits	set	3991
   177  0000                     _TRISAbits	set	3986
   178  0000                     _TMR0IE	set	32661
   179  0000                     _TMR0ON	set	32431
   180  0000                     _TMR0IF	set	32658
   181  0000                     _LATF6	set	31862
   182  0000                     _TRISF6	set	31934
   183  0000                     _TRISA2	set	31890
   184  0000                     _LATA2	set	31818
   185  0000                     _SSP1IF	set	31987
   186  0000                     _CKE1	set	32318
   187  0000                     _TRISC3	set	31907
   188  0000                     _TRISC5	set	31909
   189  001041                     STR_1:
   190  001041  41                 	db	65	;'A'
   191  001042  44                 	db	68	;'D'
   192  001043  20                 	db	32
   193  001044  43                 	db	67	;'C'
   194  001045  4F                 	db	79	;'O'
   195  001046  4E                 	db	78	;'N'
   196  001047  56                 	db	86	;'V'
   197  001048  45                 	db	69	;'E'
   198  001049  52                 	db	82	;'R'
   199  00104A  53                 	db	83	;'S'
   200  00104B  49                 	db	73	;'I'
   201  00104C  4F                 	db	79	;'O'
   202  00104D  4E                 	db	78	;'N'
   203  00104E  00                 	db	0
   204  00104F                     STR_2:
   205  00104F  25                 	db	37
   206  001050  64                 	db	100	;'d'
   207  001051  00                 	db	0
   208                           
   209                           ; #config settings
   210  001052  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  001B16                     __pcinit:
   214                           	opt callstack 0
   215  001B16                     start_initialization:
   216                           	opt callstack 0
   217  001B16                     __initialization:
   218                           	opt callstack 0
   219                           
   220                           ; Clear objects allocated to BANK0 (41 bytes)
   221  001B16  EE00  F060         	lfsr	0,__pbssBANK0
   222  001B1A  0E29               	movlw	41
   223  001B1C                     clear_0:
   224  001B1C  6AEE               	clrf	postinc0,c
   225  001B1E  06E8               	decf	wreg,f,c
   226  001B20  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (1 bytes)
   229  001B22  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   230  001B24                     end_of_initialization:
   231                           	opt callstack 0
   232  001B24                     __end_of__initialization:
   233                           	opt callstack 0
   234  001B24  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235  001B26  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  001B28  0100               	movlb	0
   237  001B2A  EFDC  F00D         	goto	_main	;jump to C main() function
   238                           
   239                           	psect	bssCOMRAM
   240  00005E                     __pbssCOMRAM:
   241                           	opt callstack 0
   242  00005E                     _dem3s:
   243                           	opt callstack 0
   244  00005E                     	ds	1
   245                           
   246                           	psect	bssBANK0
   247  000060                     __pbssBANK0:
   248                           	opt callstack 0
   249  000060                     _nout:
   250                           	opt callstack 0
   251  000060                     	ds	2
   252  000062                     _width:
   253                           	opt callstack 0
   254  000062                     	ds	2
   255  000064                     _prec:
   256                           	opt callstack 0
   257  000064                     	ds	2
   258  000066                     _flags:
   259                           	opt callstack 0
   260  000066                     	ds	2
   261  000068                     _adres:
   262                           	opt callstack 0
   263  000068                     	ds	1
   264  000069                     _dbuf:
   265                           	opt callstack 0
   266  000069                     	ds	32
   267                           
   268                           	psect	cstackBANK0
   269  000089                     __pcstackBANK0:
   270                           	opt callstack 0
   271  000089                     lcd_gotoxy@col:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x0
   275  000089                     	ds	1
   276  00008A                     vfprintf@cfmt:
   277                           	opt callstack 0
   278                           
   279                           ; 2 bytes @ 0x1
   280  00008A                     	ds	2
   281  00008C                     ?_printf:
   282                           	opt callstack 0
   283  00008C                     printf@fmt:
   284                           	opt callstack 0
   285                           
   286                           ; 2 bytes @ 0x3
   287  00008C                     	ds	6
   288  000092                     printf@ap:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0x9
   292  000092                     	ds	2
   293  000094                     ??_Adc_isr:
   294                           
   295                           ; 1 bytes @ 0xB
   296  000094                     	ds	13
   297  0000A1                     tre_ms@p10ms:
   298                           	opt callstack 0
   299  0000A1                     lcd_download@data:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x18
   303  0000A1                     	ds	2
   304  0000A3                     ??_lcd_download:
   305                           
   306                           ; 1 bytes @ 0x1A
   307  0000A3                     	ds	2
   308  0000A5                     lcd_download@addr:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x1C
   312  0000A5                     	ds	1
   313  0000A6                     lcd_download@j:
   314                           	opt callstack 0
   315                           
   316                           ; 1 bytes @ 0x1D
   317  0000A6                     	ds	1
   318  0000A7                     lcd_DHBK@i:
   319                           	opt callstack 0
   320                           
   321                           ; 1 bytes @ 0x1E
   322  0000A7                     	ds	1
   323  0000A8                     
   324                           ; 1 bytes @ 0x1F
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	opt callstack 0
   329  000001                     ?_strlen:
   330                           	opt callstack 0
   331  000001                     ?___aodiv:
   332                           	opt callstack 0
   333  000001                     ?___aomod:
   334                           	opt callstack 0
   335  000001                     SPI_send@c:
   336                           	opt callstack 0
   337  000001                     strlen@s:
   338                           	opt callstack 0
   339  000001                     ___aodiv@dividend:
   340                           	opt callstack 0
   341  000001                     ___aomod@dividend:
   342                           	opt callstack 0
   343                           
   344                           ; 8 bytes @ 0x0
   345  000001                     	ds	1
   346  000002                     Write_PortB@d:
   347                           	opt callstack 0
   348  000002                     Write_PortA@mask:
   349                           	opt callstack 0
   350                           
   351                           ; 1 bytes @ 0x1
   352  000002                     	ds	1
   353  000003                     i_write@d:
   354                           	opt callstack 0
   355  000003                     d_write@d:
   356                           	opt callstack 0
   357  000003                     strlen@a:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  000003                     	ds	1
   362  000004                     ??_lcd_cls:
   363  000004                     lcd_gotoxy@row:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x3
   367  000004                     	ds	1
   368  000005                     ??_lcd_putc:
   369                           
   370                           ; 1 bytes @ 0x4
   371  000005                     	ds	2
   372  000007                     lcd_putc@c:
   373                           	opt callstack 0
   374                           
   375                           ; 1 bytes @ 0x6
   376  000007                     	ds	1
   377  000008                     putch@c:
   378                           	opt callstack 0
   379                           
   380                           ; 1 bytes @ 0x7
   381  000008                     	ds	1
   382  000009                     fputc@c:
   383                           	opt callstack 0
   384  000009                     ___aodiv@divisor:
   385                           	opt callstack 0
   386  000009                     ___aomod@divisor:
   387                           	opt callstack 0
   388                           
   389                           ; 8 bytes @ 0x8
   390  000009                     	ds	2
   391  00000B                     fputc@fp:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0xA
   395  00000B                     	ds	2
   396  00000D                     ??_fputc:
   397                           
   398                           ; 1 bytes @ 0xC
   399  00000D                     	ds	4
   400  000011                     ___aodiv@counter:
   401                           	opt callstack 0
   402  000011                     ___aomod@counter:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x10
   406  000011                     	ds	1
   407  000012                     ___aodiv@sign:
   408                           	opt callstack 0
   409  000012                     ___aomod@sign:
   410                           	opt callstack 0
   411  000012                     fputs@s:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x11
   415  000012                     	ds	1
   416  000013                     ?_abs:
   417                           	opt callstack 0
   418  000013                     abs@a:
   419                           	opt callstack 0
   420  000013                     ___aodiv@quotient:
   421                           	opt callstack 0
   422                           
   423                           ; 8 bytes @ 0x12
   424  000013                     	ds	1
   425  000014                     fputs@fp:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x13
   429  000014                     	ds	1
   430  000015                     ??_abs:
   431                           
   432                           ; 1 bytes @ 0x14
   433  000015                     	ds	1
   434  000016                     fputs@c:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x15
   438  000016                     	ds	1
   439  000017                     fputs@i:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x16
   443  000017                     	ds	2
   444  000019                     ?_pad:
   445                           	opt callstack 0
   446  000019                     pad@fp:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x18
   450  000019                     	ds	2
   451  00001B                     pad@buf:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x1A
   455  00001B                     	ds	2
   456  00001D                     pad@p:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x1C
   460  00001D                     	ds	2
   461  00001F                     ??_pad:
   462                           
   463                           ; 1 bytes @ 0x1E
   464  00001F                     	ds	1
   465  000020                     pad@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x1F
   469  000020                     	ds	2
   470  000022                     pad@w:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x21
   474  000022                     	ds	2
   475  000024                     ?_dtoa:
   476                           	opt callstack 0
   477  000024                     dtoa@fp:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x23
   481  000024                     	ds	2
   482  000026                     dtoa@d:
   483                           	opt callstack 0
   484                           
   485                           ; 8 bytes @ 0x25
   486  000026                     	ds	8
   487  00002E                     ??_dtoa:
   488                           
   489                           ; 1 bytes @ 0x2D
   490  00002E                     	ds	8
   491  000036                     _dtoa$739:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x35
   495  000036                     	ds	2
   496  000038                     dtoa@p:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x37
   500  000038                     	ds	2
   501  00003A                     dtoa@w:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x39
   505  00003A                     	ds	2
   506  00003C                     dtoa@s:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x3B
   510  00003C                     	ds	2
   511  00003E                     dtoa@n:
   512                           	opt callstack 0
   513                           
   514                           ; 8 bytes @ 0x3D
   515  00003E                     	ds	8
   516  000046                     dtoa@i:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x45
   520  000046                     	ds	2
   521  000048                     ?_vfpfcnvrt:
   522                           	opt callstack 0
   523  000048                     vfpfcnvrt@fp:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x47
   527  000048                     	ds	2
   528  00004A                     vfpfcnvrt@fmt:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x49
   532  00004A                     	ds	2
   533  00004C                     vfpfcnvrt@ap:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x4B
   537  00004C                     	ds	2
   538  00004E                     ??_vfpfcnvrt:
   539                           
   540                           ; 1 bytes @ 0x4D
   541  00004E                     	ds	2
   542  000050                     vfpfcnvrt@ll:
   543                           	opt callstack 0
   544                           
   545                           ; 8 bytes @ 0x4F
   546  000050                     	ds	8
   547  000058                     ?_vfprintf:
   548                           	opt callstack 0
   549  000058                     vfprintf@fp:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x57
   553  000058                     	ds	2
   554  00005A                     vfprintf@fmt:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x59
   558  00005A                     	ds	2
   559  00005C                     vfprintf@ap:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x5B
   563  00005C                     	ds	2
   564  00005E                     
   565                           ; 1 bytes @ 0x5D
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 62 in file "ADC.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels required when called:   25
   591 ;; This function calls:
   592 ;;		_Adc_init
   593 ;;		_lcd_init
   594 ;;		_timer0_init
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text0
   601  001BB8                     __ptext0:
   602                           	opt callstack 0
   603  001BB8                     _main:
   604                           	opt callstack 6
   605                           
   606                           ;ADC.c: 64:     lcd_init();
   607                           
   608                           ;incstack = 0
   609  001BB8  EC9B  F00B         	call	_lcd_init	;wreg free
   610                           
   611                           ;ADC.c: 65:     timer0_init();
   612  001BBC  ECBA  F00D         	call	_timer0_init	;wreg free
   613                           
   614                           ;ADC.c: 66:     Adc_init();
   615  001BC0  EC16  F00D         	call	_Adc_init	;wreg free
   616  001BC4                     l59:
   617  001BC4  D7FF               	goto	l59
   618  001BC6                     __end_of_main:
   619                           	opt callstack 0
   620                           
   621 ;; *************** function _timer0_init *****************
   622 ;; Defined at:
   623 ;;		line 5 in file "../MSSV-41203052.X/Timer.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:   18
   644 ;; This function calls:
   645 ;;		_timer0_reset
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text1
   652  001B74                     __ptext1:
   653                           	opt callstack 0
   654  001B74                     _timer0_init:
   655                           	opt callstack 12
   656                           
   657                           ;../MSSV-41203052.X/Timer.c: 7:     RCONbits.IPEN =1;
   658                           
   659                           ;incstack = 0
   660  001B74  8ED0               	bsf	4048,7,c	;volatile
   661                           
   662                           ;../MSSV-41203052.X/Timer.c: 8:     INTCON2bits.TMR0IP = 1;
   663  001B76  84F1               	bsf	4081,2,c	;volatile
   664                           
   665                           ;../MSSV-41203052.X/Timer.c: 9:     INTCONbits.TMR0IE = 1;
   666  001B78  8AF2               	bsf	4082,5,c	;volatile
   667                           
   668                           ;../MSSV-41203052.X/Timer.c: 10:     INTCONbits.GIEH = 1;
   669  001B7A  8EF2               	bsf	4082,7,c	;volatile
   670                           
   671                           ;../MSSV-41203052.X/Timer.c: 11:     INTCONbits.GIEL = 1;
   672  001B7C  8CF2               	bsf	4082,6,c	;volatile
   673                           
   674                           ;../MSSV-41203052.X/Timer.c: 12:     T0CON =0;
   675  001B7E  0E00               	movlw	0
   676  001B80  6ED5               	movwf	4053,c	;volatile
   677                           
   678                           ;../MSSV-41203052.X/Timer.c: 13:     timer0_reset();
   679  001B82  ECC4  F00D         	call	_timer0_reset	;wreg free
   680  001B86  0012               	return		;funcret
   681  001B88                     __end_of_timer0_init:
   682                           	opt callstack 0
   683                           
   684 ;; *************** function _timer0_reset *****************
   685 ;; Defined at:
   686 ;;		line 15 in file "../MSSV-41203052.X/Timer.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:   17
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_timer0_init
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text2
   715  001B88                     __ptext2:
   716                           	opt callstack 0
   717  001B88                     _timer0_reset:
   718                           	opt callstack 12
   719                           
   720                           ;../MSSV-41203052.X/Timer.c: 17:     TMR0IF = 0;
   721                           
   722                           ;incstack = 0
   723  001B88  94F2               	bcf	4082,2,c	;volatile
   724                           
   725                           ;../MSSV-41203052.X/Timer.c: 18:     TMR0ON = 0;
   726  001B8A  9ED5               	bcf	4053,7,c	;volatile
   727                           
   728                           ;../MSSV-41203052.X/Timer.c: 19:     TMR0 = -12500;
   729  001B8C  0ECF               	movlw	207
   730  001B8E  6ED7               	movwf	4055,c	;volatile
   731  001B90  0E2C               	movlw	44
   732  001B92  6ED6               	movwf	4054,c	;volatile
   733                           
   734                           ;../MSSV-41203052.X/Timer.c: 20:     TMR0ON = 1;
   735  001B94  8ED5               	bsf	4053,7,c	;volatile
   736  001B96  0012               	return		;funcret
   737  001B98                     __end_of_timer0_reset:
   738                           	opt callstack 0
   739                           
   740 ;; *************** function _lcd_init *****************
   741 ;; Defined at:
   742 ;;		line 110 in file "../MSSV-41203052.X/LCD.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:   24
   763 ;; This function calls:
   764 ;;		_SPI_init
   765 ;;		_SPIportA_init
   766 ;;		_SPIportB_init
   767 ;;		_i_write
   768 ;;		_lcd_DHBK
   769 ;;		_lcd_cls
   770 ;;		_tre_ms
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text3
   777  001736                     __ptext3:
   778                           	opt callstack 0
   779  001736                     _lcd_init:
   780                           	opt callstack 6
   781                           
   782                           ;incstack = 0
   783  001736  9492               	bcf	3986,2,c	;volatile
   784  001738  9C97               	bcf	3991,6,c	;volatile
   785  00173A  8489               	bsf	3977,2,c	;volatile
   786  00173C  9C8E               	bcf	3982,6,c	;volatile
   787  00173E  D000               	nop2		;2 cycle nop
   788  001740  D000               	nop2		;2 cycle nop
   789  001742  8C8E               	bsf	3982,6,c	;volatile
   790  001744  ECE3  F00D         	call	_SPI_init	;wreg free
   791  001748  ECA3  F00D         	call	_SPIportA_init	;wreg free
   792  00174C  EC97  F00D         	call	_SPIportB_init	;wreg free
   793  001750  0E00               	movlw	0
   794  001752  0100               	movlb	0	; () banked
   795  001754  6FA2               	movwf	(tre_ms@p10ms+1)& (0+255),b
   796  001756  0E3C               	movlw	60
   797  001758  6FA1               	movwf	tre_ms@p10ms& (0+255),b
   798  00175A  EC47  F00D         	call	_tre_ms	;wreg free
   799  00175E  0E30               	movlw	48
   800  001760  EC27  F00D         	call	_i_write
   801  001764  0E00               	movlw	0
   802  001766  0100               	movlb	0	; () banked
   803  001768  6FA2               	movwf	(tre_ms@p10ms+1)& (0+255),b
   804  00176A  0E29               	movlw	41
   805  00176C  6FA1               	movwf	tre_ms@p10ms& (0+255),b
   806  00176E  EC47  F00D         	call	_tre_ms	;wreg free
   807  001772  0E30               	movlw	48
   808  001774  EC27  F00D         	call	_i_write
   809  001778  0E34               	movlw	52
   810  00177A                     u1127:
   811  00177A  2EE8               	decfsz	wreg,f,c
   812  00177C  D7FE               	bra	u1127
   813  00177E  D000               	nop2	
   814  001780  0E30               	movlw	48
   815  001782  EC27  F00D         	call	_i_write
   816  001786  0E38               	movlw	56
   817  001788  EC27  F00D         	call	_i_write
   818  00178C  0E0C               	movlw	12
   819  00178E  EC27  F00D         	call	_i_write
   820  001792  0E06               	movlw	6
   821  001794  EC27  F00D         	call	_i_write
   822  001798  ECAF  F00D         	call	_lcd_cls	;wreg free
   823  00179C  EC34  F00C         	call	_lcd_DHBK	;wreg free
   824  0017A0  0012               	return		;funcret
   825  0017A2                     __end_of_lcd_init:
   826                           	opt callstack 0
   827                           
   828 ;; *************** function _tre_ms *****************
   829 ;; Defined at:
   830 ;;		line 23 in file "../MSSV-41203052.X/LCD.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  p10ms           2   24[BANK0 ] unsigned int 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:   17
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_lcd_init
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text4
   859  001A8E                     __ptext4:
   860                           	opt callstack 0
   861  001A8E                     _tre_ms:
   862                           	opt callstack 12
   863                           
   864                           ;../MSSV-41203052.X/LCD.c: 23: void tre_ms(unsigned int p10ms);../MSSV-41203052.X/LCD.c:
      +                           24: { for(;p10ms>0;p10ms--) _delay(250);}
   865                           
   866                           ;incstack = 0
   867  001A8E  0100               	movlb	0	; () banked
   868  001A90  D008               	goto	L1
   869  001A92                     l1845:
   870                           
   871                           ; BSR set to: 0
   872  001A92  0E53               	movlw	83
   873  001A94                     u1137:
   874  001A94  2EE8               	decfsz	wreg,f,c
   875  001A96  D7FE               	bra	u1137
   876  001A98  F000               	nop	
   877  001A9A  0100               	movlb	0	; () banked
   878  001A9C  07A1               	decf	tre_ms@p10ms& (0+255),f,b
   879  001A9E  A0D8               	btfss	status,0,c
   880  001AA0  07A2               	decf	(tre_ms@p10ms+1)& (0+255),f,b
   881  001AA2                     L1:
   882  001AA2  51A1               	movf	tre_ms@p10ms& (0+255),w,b
   883  001AA4  11A2               	iorwf	(tre_ms@p10ms+1)& (0+255),w,b
   884  001AA6  B4D8               	btfsc	status,2,c
   885  001AA8  0012               	return	
   886  001AAA  D7F3               	goto	l1845
   887  001AAC                     __end_of_tre_ms:
   888                           	opt callstack 0
   889                           
   890 ;; *************** function _lcd_DHBK *****************
   891 ;; Defined at:
   892 ;;		line 149 in file "../MSSV-41203052.X/LCD.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  i               1   30[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        1 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:   23
   913 ;; This function calls:
   914 ;;		_lcd_download
   915 ;;		_lcd_gotoxy
   916 ;;		_putch
   917 ;; This function is called by:
   918 ;;		_lcd_init
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text5
   923  001868                     __ptext5:
   924                           	opt callstack 0
   925  001868                     _lcd_DHBK:
   926                           	opt callstack 6
   927                           
   928                           ; BSR set to: 0
   929                           ;incstack = 0
   930  001868  0E00               	movlw	0
   931  00186A  0100               	movlb	0	; () banked
   932  00186C  6FA7               	movwf	lcd_DHBK@i& (0+255),b
   933  00186E                     l1875:
   934                           
   935                           ; BSR set to: 0
   936  00186E  51A7               	movf	lcd_DHBK@i& (0+255),w,b
   937  001870  0D08               	mullw	8
   938  001872  0E01               	movlw	low _dhbkstr
   939  001874  24F3               	addwf	prodl,w,c
   940  001876  6FA1               	movwf	lcd_download@data& (0+255),b
   941  001878  0E10               	movlw	high _dhbkstr
   942  00187A  20F4               	addwfc	prodh,w,c
   943  00187C  6FA2               	movwf	(lcd_download@data+1)& (0+255),b
   944  00187E  51A7               	movf	lcd_DHBK@i& (0+255),w,b
   945  001880  EC58  F00C         	call	_lcd_download
   946  001884  0100               	movlb	0	; () banked
   947  001886  2BA7               	incf	lcd_DHBK@i& (0+255),f,b
   948                           
   949                           ; BSR set to: 0
   950  001888  0E07               	movlw	7
   951  00188A  65A7               	cpfsgt	lcd_DHBK@i& (0+255),b
   952  00188C  D7F0               	goto	l1875
   953                           
   954                           ; BSR set to: 0
   955  00188E  0E08               	movlw	8
   956  001890  6F89               	movwf	lcd_gotoxy@col& (0+255),b
   957  001892  0E01               	movlw	1
   958  001894  EC64  F00D         	call	_lcd_gotoxy
   959  001898  0E00               	movlw	0
   960  00189A  0100               	movlb	0	; () banked
   961  00189C  6FA7               	movwf	lcd_DHBK@i& (0+255),b
   962  00189E                     l1889:
   963                           
   964                           ; BSR set to: 0
   965  00189E  51A7               	movf	lcd_DHBK@i& (0+255),w,b
   966  0018A0  ECF0  F00D         	call	_putch
   967  0018A4  0100               	movlb	0	; () banked
   968  0018A6  2BA7               	incf	lcd_DHBK@i& (0+255),f,b
   969                           
   970                           ; BSR set to: 0
   971  0018A8  0E07               	movlw	7
   972  0018AA  65A7               	cpfsgt	lcd_DHBK@i& (0+255),b
   973  0018AC  D7F8               	goto	l1889
   974  0018AE  0012               	return	
   975  0018B0                     __end_of_lcd_DHBK:
   976                           	opt callstack 0
   977                           
   978 ;; *************** function _lcd_download *****************
   979 ;; Defined at:
   980 ;;		line 101 in file "../MSSV-41203052.X/LCD.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  addr            1    wreg     unsigned char 
   983 ;;  data            2   24[BANK0 ] PTR const unsigned char 
   984 ;;		 -> dhbkstr(64), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  addr            1   28[BANK0 ] unsigned char 
   987 ;;  j               1   29[BANK0 ] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        6 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:   20
  1004 ;; This function calls:
  1005 ;;		_d_write
  1006 ;;		_i_write
  1007 ;; This function is called by:
  1008 ;;		_lcd_DHBK
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text6
  1013  0018B0                     __ptext6:
  1014                           	opt callstack 0
  1015  0018B0                     _lcd_download:
  1016                           	opt callstack 8
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;incstack = 0
  1020                           ;lcd_download@addr stored from wreg
  1021  0018B0  0100               	movlb	0	; () banked
  1022  0018B2  6FA5               	movwf	lcd_download@addr& (0+255),b
  1023  0018B4  0100               	movlb	0	; () banked
  1024  0018B6  51A5               	movf	lcd_download@addr& (0+255),w,b
  1025  0018B8  0D08               	mullw	8
  1026  0018BA  50F3               	movf	prodl,w,c
  1027  0018BC  0B3F               	andlw	63
  1028  0018BE  0940               	iorlw	64
  1029  0018C0  EC27  F00D         	call	_i_write
  1030  0018C4  0E00               	movlw	0
  1031  0018C6  0100               	movlb	0	; () banked
  1032  0018C8  6FA6               	movwf	lcd_download@j& (0+255),b
  1033  0018CA                     l1821:
  1034                           
  1035                           ; BSR set to: 0
  1036  0018CA  51A6               	movf	lcd_download@j& (0+255),w,b
  1037  0018CC  25A1               	addwf	lcd_download@data& (0+255),w,b
  1038  0018CE  6FA3               	movwf	??_lcd_download& (0+255),b
  1039  0018D0  0E00               	movlw	0
  1040  0018D2  21A2               	addwfc	(lcd_download@data+1)& (0+255),w,b
  1041  0018D4  6FA4               	movwf	(??_lcd_download+1)& (0+255),b
  1042  0018D6  C0A3  FFF6         	movff	??_lcd_download,tblptrl
  1043  0018DA  C0A4  FFF7         	movff	??_lcd_download+1,tblptrh
  1044  0018DE                     	if	0	;tblptru may be non-zero
  1045  0018DE                     	endif
  1046  0018DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1047  0018DE  0E00               	movlw	low (__mediumconst shr (0+16))
  1048  0018E0  6EF8               	movwf	tblptru,c
  1049  0018E2                     	endif
  1050  0018E2  0008               	tblrd		*
  1051  0018E4  50F5               	movf	tablat,w,c
  1052  0018E6  EC37  F00D         	call	_d_write
  1053  0018EA  0100               	movlb	0	; () banked
  1054  0018EC  2BA6               	incf	lcd_download@j& (0+255),f,b
  1055                           
  1056                           ; BSR set to: 0
  1057  0018EE  0E07               	movlw	7
  1058  0018F0  65A6               	cpfsgt	lcd_download@j& (0+255),b
  1059  0018F2  D7EB               	goto	l1821
  1060  0018F4  0012               	return	
  1061  0018F6                     __end_of_lcd_download:
  1062                           	opt callstack 0
  1063                           
  1064 ;; *************** function _SPIportB_init *****************
  1065 ;; Defined at:
  1066 ;;		line 51 in file "../MSSV-41203052.X/LCD.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:   18
  1087 ;; This function calls:
  1088 ;;		_SPI_send
  1089 ;; This function is called by:
  1090 ;;		_lcd_init
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text7
  1095  001B2E                     __ptext7:
  1096                           	opt callstack 0
  1097  001B2E                     _SPIportB_init:
  1098                           	opt callstack 11
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;incstack = 0
  1102  001B2E  9489               	bcf	3977,2,c	;volatile
  1103  001B30  0E40               	movlw	64
  1104  001B32  ECCC  F00D         	call	_SPI_send
  1105  001B36  0E01               	movlw	1
  1106  001B38  ECCC  F00D         	call	_SPI_send
  1107  001B3C  0E00               	movlw	0
  1108  001B3E  ECCC  F00D         	call	_SPI_send
  1109  001B42  8489               	bsf	3977,2,c	;volatile
  1110  001B44  0012               	return		;funcret
  1111  001B46                     __end_of_SPIportB_init:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _SPIportA_init *****************
  1115 ;; Defined at:
  1116 ;;		line 43 in file "../MSSV-41203052.X/LCD.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:   18
  1137 ;; This function calls:
  1138 ;;		_SPI_send
  1139 ;; This function is called by:
  1140 ;;		_lcd_init
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text8
  1145  001B46                     __ptext8:
  1146                           	opt callstack 0
  1147  001B46                     _SPIportA_init:
  1148                           	opt callstack 11
  1149                           
  1150                           ;incstack = 0
  1151  001B46  9489               	bcf	3977,2,c	;volatile
  1152  001B48  0E40               	movlw	64
  1153  001B4A  ECCC  F00D         	call	_SPI_send
  1154  001B4E  0E00               	movlw	0
  1155  001B50  ECCC  F00D         	call	_SPI_send
  1156  001B54  0E00               	movlw	0
  1157  001B56  ECCC  F00D         	call	_SPI_send
  1158  001B5A  8489               	bsf	3977,2,c	;volatile
  1159  001B5C  0012               	return		;funcret
  1160  001B5E                     __end_of_SPIportA_init:
  1161                           	opt callstack 0
  1162                           
  1163 ;; *************** function _SPI_init *****************
  1164 ;; Defined at:
  1165 ;;		line 30 in file "../MSSV-41203052.X/LCD.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:   17
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_lcd_init
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text9
  1194  001BC6                     __ptext9:
  1195                           	opt callstack 0
  1196  001BC6                     _SPI_init:
  1197                           	opt callstack 12
  1198                           
  1199                           ;incstack = 0
  1200  001BC6  9A94               	bcf	3988,5,c	;volatile
  1201  001BC8  9694               	bcf	3988,3,c	;volatile
  1202  001BCA  0E20               	movlw	32
  1203  001BCC  6EC6               	movwf	4038,c	;volatile
  1204  001BCE  8CC7               	bsf	4039,6,c	;volatile
  1205  001BD0  969E               	bcf	3998,3,c	;volatile
  1206  001BD2  0012               	return		;funcret
  1207  001BD4                     __end_of_SPI_init:
  1208                           	opt callstack 0
  1209                           
  1210 ;; *************** function _Adc_init *****************
  1211 ;; Defined at:
  1212 ;;		line 21 in file "ADC.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:   17
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text10
  1241  001A2C                     __ptext10:
  1242                           	opt callstack 0
  1243  001A2C                     _Adc_init:
  1244                           	opt callstack 13
  1245                           
  1246                           ;ADC.c: 23:     TRISAbits.RA0 = 1;
  1247                           
  1248                           ;incstack = 0
  1249  001A2C  8092               	bsf	3986,0,c	;volatile
  1250                           
  1251                           ;ADC.c: 24:     TRISFbits.RF0 = 1;
  1252  001A2E  8097               	bsf	3991,0,c	;volatile
  1253                           
  1254                           ;ADC.c: 25:     ADCON0 = 0b00010101;
  1255  001A30  0E15               	movlw	21
  1256  001A32  6EC2               	movwf	4034,c	;volatile
  1257                           
  1258                           ;ADC.c: 26:     ADCON1 = 0x05;
  1259  001A34  0E05               	movlw	5
  1260  001A36  6EC1               	movwf	4033,c	;volatile
  1261                           
  1262                           ;ADC.c: 27:     ADCON2 = 0b00000100;
  1263  001A38  0E04               	movlw	4
  1264  001A3A  6EC0               	movwf	4032,c	;volatile
  1265                           
  1266                           ;ADC.c: 28:     dem3s = 300;
  1267  001A3C  0E2C               	movlw	44
  1268  001A3E  6E5E               	movwf	_dem3s,c
  1269                           
  1270                           ;ADC.c: 30:     RCONbits.IPEN = 1;
  1271  001A40  8ED0               	bsf	4048,7,c	;volatile
  1272                           
  1273                           ;ADC.c: 31:     IPR1bits.ADIP = 0;
  1274  001A42  9C9F               	bcf	3999,6,c	;volatile
  1275                           
  1276                           ;ADC.c: 32:     PIR1bits.ADIF = 0;
  1277  001A44  9C9E               	bcf	3998,6,c	;volatile
  1278                           
  1279                           ;ADC.c: 33:     PIE1bits.ADIE = 1;
  1280  001A46  8C9D               	bsf	3997,6,c	;volatile
  1281                           
  1282                           ;ADC.c: 34:     INTCONbits.GIEH = 1;
  1283  001A48  8EF2               	bsf	4082,7,c	;volatile
  1284                           
  1285                           ;ADC.c: 35:     INTCONbits.GIEL = 1;
  1286  001A4A  8CF2               	bsf	4082,6,c	;volatile
  1287  001A4C  0012               	return		;funcret
  1288  001A4E                     __end_of_Adc_init:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _Adc_isr *****************
  1292 ;; Defined at:
  1293 ;;		line 44 in file "ADC.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;Total ram usage:       13 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:   16
  1314 ;; This function calls:
  1315 ;;		_Adc_process
  1316 ;; This function is called by:
  1317 ;;		Interrupt level 1
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	intcodelo
  1322  000018                     __pintcodelo:
  1323                           	opt callstack 0
  1324  000018                     _Adc_isr:
  1325                           	opt callstack 6
  1326                           
  1327                           ;incstack = 0
  1328  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1329  00001A  CFD8 F094          	movff	status,??_Adc_isr
  1330  00001E  CFE8 F095          	movff	wreg,??_Adc_isr+1
  1331  000022  CFE0 F096          	movff	bsr,??_Adc_isr+2
  1332  000026  CFE1 F097          	movff	fsr1l,??_Adc_isr+3
  1333  00002A  CFE2 F098          	movff	fsr1h,??_Adc_isr+4
  1334  00002E  CFD9 F099          	movff	fsr2l,??_Adc_isr+5
  1335  000032  CFDA F09A          	movff	fsr2h,??_Adc_isr+6
  1336  000036  CFF3 F09B          	movff	prodl,??_Adc_isr+7
  1337  00003A  CFF4 F09C          	movff	prodh,??_Adc_isr+8
  1338  00003E  CFF6 F09D          	movff	tblptrl,??_Adc_isr+9
  1339  000042  CFF7 F09E          	movff	tblptrh,??_Adc_isr+10
  1340  000046  CFF8 F09F          	movff	tblptru,??_Adc_isr+11
  1341  00004A  CFF5 F0A0          	movff	tablat,??_Adc_isr+12
  1342                           
  1343                           ;ADC.c: 46:     if((PIE1bits.ADIE)&&(PIR1bits.ADIF))
  1344  00004E  BC9D               	btfsc	3997,6,c	;volatile
  1345  000050  AC9E               	btfss	3998,6,c	;volatile
  1346  000052  D009               	goto	i1l50
  1347                           
  1348                           ;ADC.c: 47:     {;ADC.c: 48:         PIR1bits.ADIF = 0;
  1349  000054  9C9E               	bcf	3998,6,c	;volatile
  1350                           
  1351                           ;ADC.c: 49:         adres = ADRESH*4 + ADRESL;
  1352  000056  50C4               	movf	4036,w,c	;volatile
  1353  000058  0D04               	mullw	4
  1354  00005A  50F3               	movf	prodl,w,c
  1355  00005C  24C3               	addwf	4035,w,c	;volatile
  1356  00005E  0100               	movlb	0	; () banked
  1357  000060  6F68               	movwf	_adres& (0+255),b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;ADC.c: 50:         Adc_process();
  1361  000062  EC9A  F00C         	call	_Adc_process	;wreg free
  1362  000066                     i1l50:
  1363  000066  C0A0  FFF5         	movff	??_Adc_isr+12,tablat
  1364  00006A  C09F  FFF8         	movff	??_Adc_isr+11,tblptru
  1365  00006E  C09E  FFF7         	movff	??_Adc_isr+10,tblptrh
  1366  000072  C09D  FFF6         	movff	??_Adc_isr+9,tblptrl
  1367  000076  C09C  FFF4         	movff	??_Adc_isr+8,prodh
  1368  00007A  C09B  FFF3         	movff	??_Adc_isr+7,prodl
  1369  00007E  C09A  FFDA         	movff	??_Adc_isr+6,fsr2h
  1370  000082  C099  FFD9         	movff	??_Adc_isr+5,fsr2l
  1371  000086  C098  FFE2         	movff	??_Adc_isr+4,fsr1h
  1372  00008A  C097  FFE1         	movff	??_Adc_isr+3,fsr1l
  1373  00008E  C096  FFE0         	movff	??_Adc_isr+2,bsr
  1374  000092  C095  FFE8         	movff	??_Adc_isr+1,wreg
  1375  000096  C094  FFD8         	movff	??_Adc_isr,status
  1376  00009A  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1377  00009C  0010               	retfie	
  1378  00009E                     __end_of_Adc_isr:
  1379                           	opt callstack 0
  1380                           
  1381 ;; *************** function _Adc_process *****************
  1382 ;; Defined at:
  1383 ;;		line 37 in file "ADC.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:   15
  1404 ;; This function calls:
  1405 ;;		_lcd_gotoxy
  1406 ;;		_printf
  1407 ;; This function is called by:
  1408 ;;		_Adc_isr
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text12
  1413  001934                     __ptext12:
  1414                           	opt callstack 0
  1415  001934                     _Adc_process:
  1416                           	opt callstack 6
  1417                           
  1418                           ;ADC.c: 39:     lcd_gotoxy(0,0);
  1419                           
  1420                           ;incstack = 0
  1421  001934  0E00               	movlw	0
  1422  001936  0100               	movlb	0	; () banked
  1423  001938  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  1424  00193A  0E00               	movlw	0
  1425  00193C  EC64  F00D         	call	_lcd_gotoxy
  1426                           
  1427                           ;ADC.c: 40:     printf("AD CONVERSION");
  1428  001940  0E41               	movlw	low STR_1
  1429  001942  0100               	movlb	0	; () banked
  1430  001944  6F8C               	movwf	printf@fmt& (0+255),b
  1431  001946  0E10               	movlw	high STR_1
  1432  001948  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1433  00194A  EC02  F00D         	call	_printf	;wreg free
  1434                           
  1435                           ;ADC.c: 41:     lcd_gotoxy(1,0);
  1436  00194E  0E00               	movlw	0
  1437  001950  0100               	movlb	0	; () banked
  1438  001952  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  1439  001954  0E01               	movlw	1
  1440  001956  EC64  F00D         	call	_lcd_gotoxy
  1441                           
  1442                           ;ADC.c: 42:     printf("%d",adres);
  1443  00195A  0E4F               	movlw	low STR_2
  1444  00195C  0100               	movlb	0	; () banked
  1445  00195E  6F8C               	movwf	printf@fmt& (0+255),b
  1446  001960  0E10               	movlw	high STR_2
  1447  001962  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1448  001964  C068  F08E         	movff	_adres,?_printf+2
  1449  001968  6B8F               	clrf	(?_printf+3)& (0+255),b
  1450  00196A  EC02  F00D         	call	_printf	;wreg free
  1451  00196E  0012               	return		;funcret
  1452  001970                     __end_of_Adc_process:
  1453                           	opt callstack 0
  1454                           
  1455 ;; *************** function _printf *****************
  1456 ;; Defined at:
  1457 ;;		line 5 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  fmt             2    3[BANK0 ] PTR const unsigned char 
  1460 ;;		 -> STR_2(3), STR_1(14), 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  ap              2    9[BANK0 ] PTR void [1]
  1463 ;;		 -> ?_printf(2), 
  1464 ;;  ret             2    0        int 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  2    3[BANK0 ] int 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;Total ram usage:        8 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:   14
  1481 ;; This function calls:
  1482 ;;		_vfprintf
  1483 ;; This function is called by:
  1484 ;;		_Adc_process
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text13
  1489  001A04                     __ptext13:
  1490                           	opt callstack 0
  1491  001A04                     _printf:
  1492                           	opt callstack 6
  1493                           
  1494                           ;incstack = 0
  1495  001A04  0E8E               	movlw	low (?_printf+2)
  1496  001A06  0100               	movlb	0	; () banked
  1497  001A08  6F92               	movwf	printf@ap& (0+255),b
  1498  001A0A  0E00               	movlw	high (?_printf+2)
  1499  001A0C  6F93               	movwf	(printf@ap+1)& (0+255),b
  1500                           
  1501                           ; BSR set to: 0
  1502  001A0E  0E00               	movlw	0
  1503  001A10  6E58               	movwf	vfprintf@fp,c
  1504  001A12  0E00               	movlw	0
  1505  001A14  6E59               	movwf	vfprintf@fp+1,c
  1506  001A16  C08C  F05A         	movff	printf@fmt,vfprintf@fmt
  1507  001A1A  C08D  F05B         	movff	printf@fmt+1,vfprintf@fmt+1
  1508  001A1E  0E92               	movlw	low printf@ap
  1509  001A20  6E5C               	movwf	vfprintf@ap,c
  1510  001A22  0E00               	movlw	high printf@ap
  1511  001A24  6E5D               	movwf	vfprintf@ap+1,c
  1512  001A26  EC07  F00C         	call	_vfprintf	;wreg free
  1513  001A2A  0012               	return		;funcret
  1514  001A2C                     __end_of_printf:
  1515                           	opt callstack 0
  1516                           
  1517 ;; *************** function _vfprintf *****************
  1518 ;; Defined at:
  1519 ;;		line 1368 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  1522 ;;		 -> NULL(0), 
  1523 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1524 ;;		 -> STR_2(3), STR_1(14), 
  1525 ;;  ap              2   91[COMRAM] PTR PTR void 
  1526 ;;		 -> printf@ap(2), 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  cfmt            2    1[BANK0 ] PTR unsigned char 
  1529 ;;		 -> STR_2(3), STR_1(14), 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  2   87[COMRAM] int 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        8 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:   13
  1546 ;; This function calls:
  1547 ;;		_vfpfcnvrt
  1548 ;; This function is called by:
  1549 ;;		_printf
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text14
  1554  00180E                     __ptext14:
  1555                           	opt callstack 0
  1556  00180E                     _vfprintf:
  1557                           	opt callstack 6
  1558                           
  1559                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *
      +                          fp, const char *fmt, va_list ap);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 1369: {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1371:     c
      +                          har *cfmt;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt 
      +                          = (char *)fmt;
  1560                           
  1561                           ;incstack = 0
  1562  00180E  C05A  F08A         	movff	vfprintf@fmt,vfprintf@cfmt
  1563  001812  C05B  F08B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1564                           
  1565                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  1566  001816  0E00               	movlw	0
  1567  001818  0100               	movlb	0	; () banked
  1568  00181A  6F61               	movwf	(_nout+1)& (0+255),b
  1569  00181C  0E00               	movlw	0
  1570  00181E  6F60               	movwf	_nout& (0+255),b
  1571                           
  1572                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1573  001820  D013               	goto	i1l1833
  1574  001822                     i1l1831:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:         nout += vfp
      +                          fcnvrt(fp, &cfmt, ap);
  1578  001822  C058  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1579  001826  C059  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1580  00182A  0E8A               	movlw	low vfprintf@cfmt
  1581  00182C  6E4A               	movwf	vfpfcnvrt@fmt,c
  1582  00182E  0E00               	movlw	high vfprintf@cfmt
  1583  001830  6E4B               	movwf	vfpfcnvrt@fmt+1,c
  1584  001832  C05C  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1585  001836  C05D  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1586  00183A  EC4D  F009         	call	_vfpfcnvrt	;wreg free
  1587  00183E  5048               	movf	?_vfpfcnvrt,w,c
  1588  001840  0100               	movlb	0	; () banked
  1589  001842  2760               	addwf	_nout& (0+255),f,b
  1590  001844  5049               	movf	?_vfpfcnvrt+1,w,c
  1591  001846  2361               	addwfc	(_nout+1)& (0+255),f,b
  1592  001848                     i1l1833:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1596  001848  C08A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1597  00184C  C08B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1598  001850                     	if	0	;tblptru may be non-zero
  1599  001850                     	endif
  1600  001850                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1601  001850  0E00               	movlw	low (__mediumconst shr (0+16))
  1602  001852  6EF8               	movwf	tblptru,c
  1603  001854                     	endif
  1604  001854  0008               	tblrd		*
  1605  001856  50F5               	movf	tablat,w,c
  1606  001858  0900               	iorlw	0
  1607  00185A  A4D8               	btfss	status,2,c
  1608  00185C  D7E2               	goto	i1l1831
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  1612  00185E  C060  F058         	movff	_nout,?_vfprintf
  1613  001862  C061  F059         	movff	_nout+1,?_vfprintf+1
  1614                           
  1615                           ; BSR set to: 0
  1616  001866  0012               	return		;funcret
  1617  001868                     __end_of_vfprintf:
  1618                           	opt callstack 0
  1619                           
  1620 ;; *************** function _vfpfcnvrt *****************
  1621 ;; Defined at:
  1622 ;;		line 670 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1625 ;;		 -> NULL(0), 
  1626 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1627 ;;		 -> vfprintf@cfmt(2), 
  1628 ;;  ap              2   75[COMRAM] PTR PTR void 
  1629 ;;		 -> printf@ap(2), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ll              8   79[COMRAM] long long 
  1632 ;;  llu             8    0        unsigned long long 
  1633 ;;  f               4    0        unsigned long long 
  1634 ;;  vp              3    0        PTR void 
  1635 ;;  ct              3    0        unsigned char [3]
  1636 ;;  cp              3    0        PTR unsigned char 
  1637 ;;  i               2    0        int 
  1638 ;;  done            2    0        int 
  1639 ;;  c               1    0        unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2   71[COMRAM] int 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:       16 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:   12
  1656 ;; This function calls:
  1657 ;;		_dtoa
  1658 ;;		_fputc
  1659 ;; This function is called by:
  1660 ;;		_vfprintf
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text15
  1665  00129A                     __ptext15:
  1666                           	opt callstack 0
  1667  00129A                     _vfpfcnvrt:
  1668                           	opt callstack 6
  1669                           
  1670                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt
      +                          (FILE *fp, char *fmt[], va_list ap);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 671: {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 672:     
      +                          char c, *cp, ct[3];;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:  
      +                             int done, i;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     l
      +                          ong long ll;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 675:     unsi
      +                          gned long long llu;
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;incstack = 0
  1674  00129A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1675  00129E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1676  0012A2  CFDE FFF6          	movff	postinc2,tblptrl
  1677  0012A6  CFDD FFF7          	movff	postdec2,tblptrh
  1678  0012AA                     	if	0	;tblptru may be non-zero
  1679  0012AA                     	endif
  1680  0012AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1681  0012AA  0E00               	movlw	low (__mediumconst shr (0+16))
  1682  0012AC  6EF8               	movwf	tblptru,c
  1683  0012AE                     	endif
  1684  0012AE  0008               	tblrd		*
  1685  0012B0  50F5               	movf	tablat,w,c
  1686  0012B2  0A25               	xorlw	37
  1687  0012B4  A4D8               	btfss	status,2,c
  1688  0012B6  D0A0               	goto	i1l1805
  1689                           
  1690                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  1691  0012B8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1692  0012BC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1693  0012C0  2ADE               	incf	postinc2,f,c
  1694  0012C2  0E00               	movlw	0
  1695  0012C4  22DD               	addwfc	postdec2,f,c
  1696                           
  1697                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:         flags = widt
      +                          h = 0;
  1698  0012C6  0E00               	movlw	0
  1699  0012C8  0100               	movlb	0	; () banked
  1700  0012CA  6F63               	movwf	(_width+1)& (0+255),b
  1701  0012CC  0E00               	movlw	0
  1702  0012CE  6F62               	movwf	_width& (0+255),b
  1703  0012D0  C062  F066         	movff	_width,_flags
  1704  0012D4  C063  F067         	movff	_width+1,_flags+1
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  1708  0012D8  6964               	setf	_prec& (0+255),b
  1709  0012DA  6965               	setf	(_prec+1)& (0+255),b
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0]
      +                           == 'd') || (*fmt[0] == 'i')) {
  1713  0012DC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1714  0012E0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1715  0012E4  CFDE FFF6          	movff	postinc2,tblptrl
  1716  0012E8  CFDD FFF7          	movff	postdec2,tblptrh
  1717  0012EC                     	if	0	;tblptru may be non-zero
  1718  0012EC                     	endif
  1719  0012EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1720  0012EC  0E00               	movlw	low (__mediumconst shr (0+16))
  1721  0012EE  6EF8               	movwf	tblptru,c
  1722  0012F0                     	endif
  1723  0012F0  0008               	tblrd		*
  1724  0012F2  50F5               	movf	tablat,w,c
  1725  0012F4  0A64               	xorlw	100
  1726  0012F6  B4D8               	btfsc	status,2,c
  1727  0012F8  D00F               	goto	i1u100_20
  1728                           
  1729                           ; BSR set to: 0
  1730  0012FA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731  0012FE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732  001302  CFDE FFF6          	movff	postinc2,tblptrl
  1733  001306  CFDD FFF7          	movff	postdec2,tblptrh
  1734  00130A                     	if	0	;tblptru may be non-zero
  1735  00130A                     	endif
  1736  00130A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1737  00130A  0E00               	movlw	low (__mediumconst shr (0+16))
  1738  00130C  6EF8               	movwf	tblptru,c
  1739  00130E                     	endif
  1740  00130E  0008               	tblrd		*
  1741  001310  50F5               	movf	tablat,w,c
  1742  001312  0A69               	xorlw	105
  1743  001314  A4D8               	btfss	status,2,c
  1744  001316  D03F               	goto	i1l1789
  1745  001318                     i1u100_20:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  1749  001318  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750  00131C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751  001320  2ADE               	incf	postinc2,f,c
  1752  001322  0E00               	movlw	0
  1753  001324  22DD               	addwfc	postdec2,f,c
  1754                           
  1755                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:             ll = (lo
      +                          ng long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1756  001326  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1757  00132A  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1758  00132E  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1759  001332  0E02               	movlw	2
  1760  001334  26DE               	addwf	postinc2,f,c
  1761  001336  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1762  00133A  0E00               	movlw	0
  1763  00133C  22DD               	addwfc	postdec2,f,c
  1764  00133E  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1765  001342  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1766  001346  CFDE F050          	movff	postinc2,vfpfcnvrt@ll
  1767  00134A  CFDD F051          	movff	postdec2,vfpfcnvrt@ll+1
  1768  00134E  0E00               	movlw	0
  1769  001350  BE51               	btfsc	vfpfcnvrt@ll+1,7,c
  1770  001352  0EFF               	movlw	-1
  1771  001354  6E52               	movwf	vfpfcnvrt@ll+2,c
  1772  001356  6E53               	movwf	vfpfcnvrt@ll+3,c
  1773  001358  6E54               	movwf	vfpfcnvrt@ll+4,c
  1774  00135A  6E55               	movwf	vfpfcnvrt@ll+5,c
  1775  00135C  6E56               	movwf	vfpfcnvrt@ll+6,c
  1776  00135E  6E57               	movwf	vfpfcnvrt@ll+7,c
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:             return d
      +                          toa(fp, ll);
  1780  001360  C048  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  1781  001364  C049  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1782  001368  C050  F026         	movff	vfpfcnvrt@ll,dtoa@d
  1783  00136C  C051  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1784  001370  C052  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1785  001374  C053  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1786  001378  C054  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1787  00137C  C055  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1788  001380  C056  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1789  001384  C057  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1790  001388  EC2A  F008         	call	_dtoa	;wreg free
  1791  00138C  C024  F048         	movff	?_dtoa,?_vfpfcnvrt
  1792  001390  C025  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1793  001394  0012               	return	
  1794  001396                     i1l1789:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[
      +                          0] == '%') {
  1798  001396  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  00139A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  00139E  CFDE FFF6          	movff	postinc2,tblptrl
  1801  0013A2  CFDD FFF7          	movff	postdec2,tblptrh
  1802  0013A6                     	if	0	;tblptru may be non-zero
  1803  0013A6                     	endif
  1804  0013A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1805  0013A6  0E00               	movlw	low (__mediumconst shr (0+16))
  1806  0013A8  6EF8               	movwf	tblptru,c
  1807  0013AA                     	endif
  1808  0013AA  0008               	tblrd		*
  1809  0013AC  50F5               	movf	tablat,w,c
  1810  0013AE  0A25               	xorlw	37
  1811  0013B0  A4D8               	btfss	status,2,c
  1812  0013B2  D016               	goto	i1l1799
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  1816  0013B4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1817  0013B8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1818  0013BC  2ADE               	incf	postinc2,f,c
  1819  0013BE  0E00               	movlw	0
  1820  0013C0  22DD               	addwfc	postdec2,f,c
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:             fputc((
      +                          int)'%', fp);
  1824  0013C2  0E00               	movlw	0
  1825  0013C4  6E0A               	movwf	fputc@c+1,c
  1826  0013C6  0E25               	movlw	37
  1827  0013C8  6E09               	movwf	fputc@c,c
  1828  0013CA  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1829  0013CE  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1830  0013D2  ECD1  F00B         	call	_fputc	;wreg free
  1831  0013D6                     i1l1795:
  1832                           
  1833                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:             return 
      +                          1;
  1834  0013D6  0E00               	movlw	0
  1835  0013D8  6E49               	movwf	?_vfpfcnvrt+1,c
  1836  0013DA  0E01               	movlw	1
  1837  0013DC  6E48               	movwf	?_vfpfcnvrt,c
  1838  0013DE  0012               	return	
  1839  0013E0                     i1l1799:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  1843  0013E0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844  0013E4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845  0013E8  2ADE               	incf	postinc2,f,c
  1846  0013EA  0E00               	movlw	0
  1847  0013EC  22DD               	addwfc	postdec2,f,c
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  1851  0013EE  0E00               	movlw	0
  1852  0013F0  6E49               	movwf	?_vfpfcnvrt+1,c
  1853  0013F2  0E00               	movlw	0
  1854  0013F4  6E48               	movwf	?_vfpfcnvrt,c
  1855  0013F6  0012               	return	
  1856  0013F8                     i1l1805:
  1857                           
  1858                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fm
      +                          t)[0], fp);
  1859  0013F8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1860  0013FC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1861  001400  CFDE FFF6          	movff	postinc2,tblptrl
  1862  001404  CFDD FFF7          	movff	postdec2,tblptrh
  1863  001408                     	if	0	;tblptru may be non-zero
  1864  001408                     	endif
  1865  001408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1866  001408  0E00               	movlw	low (__mediumconst shr (0+16))
  1867  00140A  6EF8               	movwf	tblptru,c
  1868  00140C                     	endif
  1869  00140C  0008               	tblrd		*
  1870  00140E  50F5               	movf	tablat,w,c
  1871  001410  6E09               	movwf	fputc@c,c
  1872  001412  6A0A               	clrf	fputc@c+1,c
  1873  001414  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1874  001418  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1875  00141C  ECD1  F00B         	call	_fputc	;wreg free
  1876                           
  1877                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1878  001420  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1879  001424  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1880  001428  2ADE               	incf	postinc2,f,c
  1881  00142A  0E00               	movlw	0
  1882  00142C  22DD               	addwfc	postdec2,f,c
  1883  00142E  D7D3               	goto	i1l1795
  1884  001430                     __end_of_vfpfcnvrt:
  1885                           	opt callstack 0
  1886                           
  1887 ;; *************** function _dtoa *****************
  1888 ;; Defined at:
  1889 ;;		line 274 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1892 ;;		 -> NULL(0), 
  1893 ;;  d               8   37[COMRAM] long long 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  n               8   61[COMRAM] long long 
  1896 ;;  i               2   69[COMRAM] int 
  1897 ;;  s               2   59[COMRAM] int 
  1898 ;;  w               2   57[COMRAM] int 
  1899 ;;  p               2   55[COMRAM] int 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2   35[COMRAM] int 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:       36 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:   11
  1916 ;; This function calls:
  1917 ;;		___aodiv
  1918 ;;		___aomod
  1919 ;;		_abs
  1920 ;;		_pad
  1921 ;; This function is called by:
  1922 ;;		_vfpfcnvrt
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text16
  1927  001054                     __ptext16:
  1928                           	opt callstack 0
  1929  001054                     _dtoa:
  1930                           	opt callstack 6
  1931                           
  1932                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE
      +                           *fp, long long d);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 275: {;
      +                          D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;;D
      +                          :\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 277:     long long n;;D:\Se
      +                          tup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1933                           
  1934                           ;incstack = 0
  1935  001054  C026  F03E         	movff	dtoa@d,dtoa@n
  1936  001058  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  1937  00105C  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  1938  001060  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  1939  001064  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  1940  001068  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  1941  00106C  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  1942  001070  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  1943                           
  1944                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 
      +                          0;
  1945  001074  AE45               	btfss	dtoa@n+7,7,c
  1946  001076  D002               	goto	i1u83_20
  1947  001078  0E01               	movlw	1
  1948  00107A  D001               	goto	i1u84_20
  1949  00107C                     i1u83_20:
  1950  00107C  0E00               	movlw	0
  1951  00107E                     i1u84_20:
  1952  00107E  6E3C               	movwf	dtoa@s,c
  1953  001080  6A3D               	clrf	dtoa@s+1,c
  1954                           
  1955                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1956  001082  503C               	movf	dtoa@s,w,c
  1957  001084  103D               	iorwf	dtoa@s+1,w,c
  1958  001086  B4D8               	btfsc	status,2,c
  1959  001088  D010               	goto	i1l1715
  1960                           
  1961                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  1962  00108A  1E45               	comf	dtoa@n+7,f,c
  1963  00108C  1E44               	comf	dtoa@n+6,f,c
  1964  00108E  1E43               	comf	dtoa@n+5,f,c
  1965  001090  1E42               	comf	dtoa@n+4,f,c
  1966  001092  1E41               	comf	dtoa@n+3,f,c
  1967  001094  1E40               	comf	dtoa@n+2,f,c
  1968  001096  1E3F               	comf	dtoa@n+1,f,c
  1969  001098  6C3E               	negf	dtoa@n,c
  1970  00109A  0E00               	movlw	0
  1971  00109C  223F               	addwfc	dtoa@n+1,f,c
  1972  00109E  2240               	addwfc	dtoa@n+2,f,c
  1973  0010A0  2241               	addwfc	dtoa@n+3,f,c
  1974  0010A2  2242               	addwfc	dtoa@n+4,f,c
  1975  0010A4  2243               	addwfc	dtoa@n+5,f,c
  1976  0010A6  2244               	addwfc	dtoa@n+6,f,c
  1977  0010A8  2245               	addwfc	dtoa@n+7,f,c
  1978  0010AA                     i1l1715:
  1979                           
  1980                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0))
      +                           {
  1981  0010AA  0100               	movlb	0	; () banked
  1982  0010AC  AF65               	btfss	(_prec+1)& (0+255),7,b
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1
      +                           << 1);
  1986  0010AE  9366               	bcf	_flags& (0+255),1,b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ?
      +                           prec : 1;
  1990  0010B0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1991  0010B2  D005               	goto	i1u87_20
  1992  0010B4  5165               	movf	(_prec+1)& (0+255),w,b
  1993  0010B6  E108               	bnz	i1l237
  1994  0010B8  0564               	decf	_prec& (0+255),w,b
  1995  0010BA  B0D8               	btfsc	status,0,c
  1996  0010BC  D005               	goto	i1l237
  1997  0010BE                     i1u87_20:
  1998                           
  1999                           ; BSR set to: 0
  2000  0010BE  0E00               	movlw	0
  2001  0010C0  6E39               	movwf	dtoa@p+1,c
  2002  0010C2  0E01               	movlw	1
  2003  0010C4  6E38               	movwf	dtoa@p,c
  2004  0010C6  D004               	goto	i1l239
  2005  0010C8                     i1l237:
  2006                           
  2007                           ; BSR set to: 0
  2008  0010C8  C064  F038         	movff	_prec,dtoa@p
  2009  0010CC  C065  F039         	movff	_prec+1,dtoa@p+1
  2010  0010D0                     i1l239:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w = width;
  2014  0010D0  C062  F03A         	movff	_width,dtoa@w
  2015  0010D4  C063  F03B         	movff	_width+1,dtoa@w+1
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags 
      +                          & (1 << 2))) {
  2019  0010D8  503C               	movf	dtoa@s,w,c
  2020  0010DA  103D               	iorwf	dtoa@s+1,w,c
  2021  0010DC  A4D8               	btfss	status,2,c
  2022  0010DE  D002               	goto	i1u89_20
  2023                           
  2024                           ; BSR set to: 0
  2025  0010E0  A566               	btfss	_flags& (0+255),2,b
  2026  0010E2  D003               	goto	i1l1729
  2027  0010E4                     i1u89_20:
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:         --w;
  2031  0010E4  063A               	decf	dtoa@w,f,c
  2032  0010E6  A0D8               	btfss	status,0,c
  2033  0010E8  063B               	decf	dtoa@w+1,f,c
  2034  0010EA                     i1l1729:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf)
      +                           - 1;
  2038  0010EA  0E00               	movlw	0
  2039  0010EC  6E47               	movwf	dtoa@i+1,c
  2040  0010EE  0E1F               	movlw	31
  2041  0010F0  6E46               	movwf	dtoa@i,c
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  2045  0010F2  0E00               	movlw	0
  2046  0010F4  6F88               	movwf	(_dbuf+31)& (0+255),b
  2047                           
  2048                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) 
      +                          && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2049  0010F6  D07C               	goto	i1l1743
  2050  0010F8                     i1l1733:
  2051                           
  2052                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:         --i;
  2053  0010F8  0646               	decf	dtoa@i,f,c
  2054  0010FA  A0D8               	btfss	status,0,c
  2055  0010FC  0647               	decf	dtoa@i+1,f,c
  2056                           
  2057                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0
      +                          ' + abs(n % 10);
  2058  0010FE  0E69               	movlw	low _dbuf
  2059  001100  2446               	addwf	dtoa@i,w,c
  2060  001102  6ED9               	movwf	fsr2l,c
  2061  001104  0E00               	movlw	high _dbuf
  2062  001106  2047               	addwfc	dtoa@i+1,w,c
  2063  001108  6EDA               	movwf	fsr2h,c
  2064  00110A  C03E  F001         	movff	dtoa@n,___aomod@dividend
  2065  00110E  C03F  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2066  001112  C040  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2067  001116  C041  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2068  00111A  C042  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2069  00111E  C043  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2070  001122  C044  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2071  001126  C045  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2072  00112A  0E0A               	movlw	10
  2073  00112C  6E09               	movwf	___aomod@divisor,c
  2074  00112E  0E00               	movlw	0
  2075  001130  6E0A               	movwf	___aomod@divisor+1,c
  2076  001132  0E00               	movlw	0
  2077  001134  6E0B               	movwf	___aomod@divisor+2,c
  2078  001136  0E00               	movlw	0
  2079  001138  6E0C               	movwf	___aomod@divisor+3,c
  2080  00113A  0E00               	movlw	0
  2081  00113C  6E0D               	movwf	___aomod@divisor+4,c
  2082  00113E  0E00               	movlw	0
  2083  001140  6E0E               	movwf	___aomod@divisor+5,c
  2084  001142  0E00               	movlw	0
  2085  001144  6E0F               	movwf	___aomod@divisor+6,c
  2086  001146  0E00               	movlw	0
  2087  001148  6E10               	movwf	___aomod@divisor+7,c
  2088  00114A  ECBC  F00A         	call	___aomod	;wreg free
  2089  00114E  C001  F02E         	movff	?___aomod,??_dtoa
  2090  001152  C002  F02F         	movff	?___aomod+1,??_dtoa+1
  2091  001156  C003  F030         	movff	?___aomod+2,??_dtoa+2
  2092  00115A  C004  F031         	movff	?___aomod+3,??_dtoa+3
  2093  00115E  C005  F032         	movff	?___aomod+4,??_dtoa+4
  2094  001162  C006  F033         	movff	?___aomod+5,??_dtoa+5
  2095  001166  C007  F034         	movff	?___aomod+6,??_dtoa+6
  2096  00116A  C008  F035         	movff	?___aomod+7,??_dtoa+7
  2097  00116E  C02E  F013         	movff	??_dtoa,abs@a
  2098  001172  C030  F014         	movff	??_dtoa+2,abs@a+1
  2099  001176  ECD4  F00C         	call	_abs	;wreg free
  2100  00117A  5013               	movf	?_abs,w,c
  2101  00117C  0F30               	addlw	48
  2102  00117E  6EDF               	movwf	indf2,c
  2103                           
  2104                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:         --p;
  2105  001180  0638               	decf	dtoa@p,f,c
  2106  001182  A0D8               	btfss	status,0,c
  2107  001184  0639               	decf	dtoa@p+1,f,c
  2108                           
  2109                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:         --w;
  2110  001186  063A               	decf	dtoa@w,f,c
  2111  001188  A0D8               	btfss	status,0,c
  2112  00118A  063B               	decf	dtoa@w+1,f,c
  2113                           
  2114                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  2115  00118C  C03E  F001         	movff	dtoa@n,___aodiv@dividend
  2116  001190  C03F  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2117  001194  C040  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2118  001198  C041  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2119  00119C  C042  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2120  0011A0  C043  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2121  0011A4  C044  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2122  0011A8  C045  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2123  0011AC  0E0A               	movlw	10
  2124  0011AE  6E09               	movwf	___aodiv@divisor,c
  2125  0011B0  0E00               	movlw	0
  2126  0011B2  6E0A               	movwf	___aodiv@divisor+1,c
  2127  0011B4  0E00               	movlw	0
  2128  0011B6  6E0B               	movwf	___aodiv@divisor+2,c
  2129  0011B8  0E00               	movlw	0
  2130  0011BA  6E0C               	movwf	___aodiv@divisor+3,c
  2131  0011BC  0E00               	movlw	0
  2132  0011BE  6E0D               	movwf	___aodiv@divisor+4,c
  2133  0011C0  0E00               	movlw	0
  2134  0011C2  6E0E               	movwf	___aodiv@divisor+5,c
  2135  0011C4  0E00               	movlw	0
  2136  0011C6  6E0F               	movwf	___aodiv@divisor+6,c
  2137  0011C8  0E00               	movlw	0
  2138  0011CA  6E10               	movwf	___aodiv@divisor+7,c
  2139  0011CC  EC18  F00A         	call	___aodiv	;wreg free
  2140  0011D0  C001  F03E         	movff	?___aodiv,dtoa@n
  2141  0011D4  C002  F03F         	movff	?___aodiv+1,dtoa@n+1
  2142  0011D8  C003  F040         	movff	?___aodiv+2,dtoa@n+2
  2143  0011DC  C004  F041         	movff	?___aodiv+3,dtoa@n+3
  2144  0011E0  C005  F042         	movff	?___aodiv+4,dtoa@n+4
  2145  0011E4  C006  F043         	movff	?___aodiv+5,dtoa@n+5
  2146  0011E8  C007  F044         	movff	?___aodiv+6,dtoa@n+6
  2147  0011EC  C008  F045         	movff	?___aodiv+7,dtoa@n+7
  2148  0011F0                     i1l1743:
  2149                           
  2150                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) 
      +                          && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2151  0011F0  BE47               	btfsc	dtoa@i+1,7,c
  2152  0011F2  D020               	goto	i1u94_20
  2153  0011F4  5047               	movf	dtoa@i+1,w,c
  2154  0011F6  E103               	bnz	i1u90_20
  2155  0011F8  0446               	decf	dtoa@i,w,c
  2156  0011FA  A0D8               	btfss	status,0,c
  2157  0011FC  D01B               	goto	i1u94_20
  2158  0011FE                     i1u90_20:
  2159  0011FE  503E               	movf	dtoa@n,w,c
  2160  001200  103F               	iorwf	dtoa@n+1,w,c
  2161  001202  1040               	iorwf	dtoa@n+2,w,c
  2162  001204  1041               	iorwf	dtoa@n+3,w,c
  2163  001206  1042               	iorwf	dtoa@n+4,w,c
  2164  001208  1043               	iorwf	dtoa@n+5,w,c
  2165  00120A  1044               	iorwf	dtoa@n+6,w,c
  2166  00120C  1045               	iorwf	dtoa@n+7,w,c
  2167  00120E  A4D8               	btfss	status,2,c
  2168  001210  D773               	goto	i1l1733
  2169  001212  BE39               	btfsc	dtoa@p+1,7,c
  2170  001214  D005               	goto	i1u92_20
  2171  001216  5039               	movf	dtoa@p+1,w,c
  2172  001218  E102               	bnz	i1u92_21
  2173  00121A  0438               	decf	dtoa@p,w,c
  2174  00121C  B0D8               	btfsc	status,0,c
  2175  00121E                     i1u92_21:
  2176  00121E  D76C               	goto	i1l1733
  2177  001220                     i1u92_20:
  2178  001220  BE3B               	btfsc	dtoa@w+1,7,c
  2179  001222  D008               	goto	i1u94_20
  2180  001224  503B               	movf	dtoa@w+1,w,c
  2181  001226  E103               	bnz	i1u93_20
  2182  001228  043A               	decf	dtoa@w,w,c
  2183  00122A  A0D8               	btfss	status,0,c
  2184  00122C  D003               	goto	i1u94_20
  2185  00122E                     i1u93_20:
  2186  00122E  0100               	movlb	0	; () banked
  2187  001230  B366               	btfsc	_flags& (0+255),1,b
  2188  001232  D762               	goto	i1l1733
  2189  001234                     i1u94_20:
  2190                           
  2191                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags 
      +                          & (1 << 2))) {
  2192  001234  503C               	movf	dtoa@s,w,c
  2193  001236  103D               	iorwf	dtoa@s+1,w,c
  2194  001238  A4D8               	btfss	status,2,c
  2195  00123A  D003               	goto	i1u96_20
  2196  00123C  0100               	movlb	0	; () banked
  2197  00123E  A566               	btfss	_flags& (0+255),2,b
  2198  001240  D017               	goto	i1l1767
  2199  001242                     i1u96_20:
  2200                           
  2201                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:         --i;
  2202  001242  0646               	decf	dtoa@i,f,c
  2203  001244  A0D8               	btfss	status,0,c
  2204  001246  0647               	decf	dtoa@i+1,f,c
  2205                           
  2206                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s 
      +                          ? '-' : '+';
  2207  001248  503C               	movf	dtoa@s,w,c
  2208  00124A  103D               	iorwf	dtoa@s+1,w,c
  2209  00124C  A4D8               	btfss	status,2,c
  2210  00124E  D004               	goto	i1l1763
  2211  001250  0E00               	movlw	0
  2212  001252  6E37               	movwf	_dtoa$739+1,c
  2213  001254  0E2B               	movlw	43
  2214  001256  D003               	goto	L2
  2215  001258                     i1l1763:
  2216  001258  0E00               	movlw	0
  2217  00125A  6E37               	movwf	_dtoa$739+1,c
  2218  00125C  0E2D               	movlw	45
  2219  00125E                     L2:
  2220  00125E  6E36               	movwf	_dtoa$739,c
  2221  001260  0E69               	movlw	low _dbuf
  2222  001262  2446               	addwf	dtoa@i,w,c
  2223  001264  6ED9               	movwf	fsr2l,c
  2224  001266  0E00               	movlw	high _dbuf
  2225  001268  2047               	addwfc	dtoa@i+1,w,c
  2226  00126A  6EDA               	movwf	fsr2h,c
  2227  00126C  C036  FFDF         	movff	_dtoa$739,indf2
  2228  001270                     i1l1767:
  2229                           
  2230                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &
      +                          dbuf[i], w);
  2231  001270  C024  F019         	movff	dtoa@fp,pad@fp
  2232  001274  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  2233  001278  0E69               	movlw	low _dbuf
  2234  00127A  2446               	addwf	dtoa@i,w,c
  2235  00127C  6E1B               	movwf	pad@buf,c
  2236  00127E  0E00               	movlw	high _dbuf
  2237  001280  2047               	addwfc	dtoa@i+1,w,c
  2238  001282  6E1C               	movwf	pad@buf+1,c
  2239  001284  C03A  F01D         	movff	dtoa@w,pad@p
  2240  001288  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  2241  00128C  EC4E  F00B         	call	_pad	;wreg free
  2242  001290  C019  F024         	movff	?_pad,?_dtoa
  2243  001294  C01A  F025         	movff	?_pad+1,?_dtoa+1
  2244  001298  0012               	return		;funcret
  2245  00129A                     __end_of_dtoa:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _pad *****************
  2249 ;; Defined at:
  2250 ;;		line 72 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2253 ;;		 -> NULL(0), 
  2254 ;;  buf             2   26[COMRAM] PTR unsigned char 
  2255 ;;		 -> dbuf(32), 
  2256 ;;  p               2   28[COMRAM] int 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  w               2   33[COMRAM] int 
  2259 ;;  i               2   31[COMRAM] int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2   24[COMRAM] int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;Total ram usage:       11 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:   10
  2276 ;; This function calls:
  2277 ;;		_fputc
  2278 ;;		_fputs
  2279 ;;		_strlen
  2280 ;; This function is called by:
  2281 ;;		_dtoa
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text17
  2286  00169C                     __ptext17:
  2287                           	opt callstack 0
  2288  00169C                     _pad:
  2289                           	opt callstack 6
  2290                           
  2291                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *
      +                          fp, char *buf, int p);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 73: 
      +                          {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:     int i, w;;D:\Set
      +                          up\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2292                           
  2293                           ;incstack = 0
  2294  00169C  0100               	movlb	0	; () banked
  2295  00169E  A166               	btfss	_flags& (0+255),0,b
  2296  0016A0  D00A               	goto	i1l1607
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:         fputs((const 
      +                          char *)buf, fp);
  2300  0016A2  C01B  F012         	movff	pad@buf,fputs@s
  2301  0016A6  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2302  0016AA  C019  F014         	movff	pad@fp,fputs@fp
  2303  0016AE  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2304  0016B2  ECB8  F00C         	call	_fputs	;wreg free
  2305  0016B6                     i1l1607:
  2306                           
  2307                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 :
      +                           p;
  2308  0016B6  BE1E               	btfsc	pad@p+1,7,c
  2309  0016B8  D005               	goto	i1l1611
  2310  0016BA  C01D  F022         	movff	pad@p,pad@w
  2311  0016BE  C01E  F023         	movff	pad@p+1,pad@w+1
  2312  0016C2  D004               	goto	i1l226
  2313  0016C4                     i1l1611:
  2314  0016C4  0E00               	movlw	0
  2315  0016C6  6E23               	movwf	pad@w+1,c
  2316  0016C8  0E00               	movlw	0
  2317  0016CA  6E22               	movwf	pad@w,c
  2318  0016CC                     i1l226:
  2319                           
  2320                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2321  0016CC  0E00               	movlw	0
  2322  0016CE  6E21               	movwf	pad@i+1,c
  2323  0016D0  0E00               	movlw	0
  2324  0016D2  6E20               	movwf	pad@i,c
  2325                           
  2326                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2327  0016D4  D00C               	goto	i1l1617
  2328  0016D6                     i1l1613:
  2329                           
  2330                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp
      +                          );
  2331  0016D6  0E00               	movlw	0
  2332  0016D8  6E0A               	movwf	fputc@c+1,c
  2333  0016DA  0E20               	movlw	32
  2334  0016DC  6E09               	movwf	fputc@c,c
  2335  0016DE  C019  F00B         	movff	pad@fp,fputc@fp
  2336  0016E2  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  2337  0016E6  ECD1  F00B         	call	_fputc	;wreg free
  2338                           
  2339                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2340  0016EA  4A20               	infsnz	pad@i,f,c
  2341  0016EC  2A21               	incf	pad@i+1,f,c
  2342  0016EE                     i1l1617:
  2343                           
  2344                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2345  0016EE  5022               	movf	pad@w,w,c
  2346  0016F0  5C20               	subwf	pad@i,w,c
  2347  0016F2  5021               	movf	pad@i+1,w,c
  2348  0016F4  0A80               	xorlw	128
  2349  0016F6  6E1F               	movwf	??_pad& (0+255),c
  2350  0016F8  5023               	movf	pad@w+1,w,c
  2351  0016FA  0A80               	xorlw	128
  2352  0016FC  581F               	subwfb	??_pad& (0+255),w,c
  2353  0016FE  A0D8               	btfss	status,0,c
  2354  001700  D7EA               	goto	i1l1613
  2355                           
  2356                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 
      +                          << 0))) {
  2357  001702  0100               	movlb	0	; () banked
  2358  001704  B166               	btfsc	_flags& (0+255),0,b
  2359  001706  D00A               	goto	i1l1621
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:         fputs((const 
      +                          char *)buf, fp);
  2363  001708  C01B  F012         	movff	pad@buf,fputs@s
  2364  00170C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2365  001710  C019  F014         	movff	pad@fp,fputs@fp
  2366  001714  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2367  001718  ECB8  F00C         	call	_fputs	;wreg free
  2368  00171C                     i1l1621:
  2369                           
  2370                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf
      +                          ) + w;
  2371  00171C  C01B  F001         	movff	pad@buf,strlen@s
  2372  001720  C01C  F002         	movff	pad@buf+1,strlen@s+1
  2373  001724  ECED  F00C         	call	_strlen	;wreg free
  2374  001728  5022               	movf	pad@w,w,c
  2375  00172A  2401               	addwf	?_strlen,w,c
  2376  00172C  6E19               	movwf	?_pad,c
  2377  00172E  5023               	movf	pad@w+1,w,c
  2378  001730  2002               	addwfc	?_strlen+1,w,c
  2379  001732  6E1A               	movwf	?_pad+1,c
  2380  001734  0012               	return		;funcret
  2381  001736                     __end_of_pad:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _strlen *****************
  2385 ;; Defined at:
  2386 ;;		line 12 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2389 ;;		 -> dbuf(32), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2392 ;;		 -> dbuf(32), 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[COMRAM] unsigned int 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;Total ram usage:        4 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    2
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_pad
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text18
  2417  0019DA                     __ptext18:
  2418                           	opt callstack 0
  2419  0019DA                     _strlen:
  2420                           	opt callstack 13
  2421                           
  2422                           ;incstack = 0
  2423  0019DA  C001  F003         	movff	strlen@s,strlen@a
  2424  0019DE  C002  F004         	movff	strlen@s+1,strlen@a+1
  2425  0019E2  D002               	goto	i1l1597
  2426  0019E4                     i1l1595:
  2427  0019E4  4A01               	infsnz	strlen@s,f,c
  2428  0019E6  2A02               	incf	strlen@s+1,f,c
  2429  0019E8                     i1l1597:
  2430  0019E8  C001  FFD9         	movff	strlen@s,fsr2l
  2431  0019EC  C002  FFDA         	movff	strlen@s+1,fsr2h
  2432  0019F0  50DF               	movf	indf2,w,c
  2433  0019F2  A4D8               	btfss	status,2,c
  2434  0019F4  D7F7               	goto	i1l1595
  2435  0019F6  5003               	movf	strlen@a,w,c
  2436  0019F8  5C01               	subwf	strlen@s,w,c
  2437  0019FA  6E01               	movwf	?_strlen,c
  2438  0019FC  5004               	movf	strlen@a+1,w,c
  2439  0019FE  5802               	subwfb	strlen@s+1,w,c
  2440  001A00  6E02               	movwf	?_strlen+1,c
  2441  001A02  0012               	return		;funcret
  2442  001A04                     __end_of_strlen:
  2443                           	opt callstack 0
  2444                           
  2445 ;; *************** function _fputs *****************
  2446 ;; Defined at:
  2447 ;;		line 8 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2450 ;;		 -> dbuf(32), 
  2451 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2452 ;;		 -> NULL(0), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  i               2   22[COMRAM] int 
  2455 ;;  c               1   21[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2   17[COMRAM] int 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        7 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    9
  2472 ;; This function calls:
  2473 ;;		_fputc
  2474 ;; This function is called by:
  2475 ;;		_pad
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text19
  2480  001970                     __ptext19:
  2481                           	opt callstack 0
  2482  001970                     _fputs:
  2483                           	opt callstack 6
  2484                           
  2485                           ;incstack = 0
  2486  001970  0E00               	movlw	0
  2487  001972  6E18               	movwf	fputs@i+1,c
  2488  001974  0E00               	movlw	0
  2489  001976  6E17               	movwf	fputs@i,c
  2490  001978  D00B               	goto	i1l1591
  2491  00197A                     i1l1587:
  2492  00197A  C016  F009         	movff	fputs@c,fputc@c
  2493  00197E  6A0A               	clrf	fputc@c+1,c
  2494  001980  C014  F00B         	movff	fputs@fp,fputc@fp
  2495  001984  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2496  001988  ECD1  F00B         	call	_fputc	;wreg free
  2497  00198C  4A17               	infsnz	fputs@i,f,c
  2498  00198E  2A18               	incf	fputs@i+1,f,c
  2499  001990                     i1l1591:
  2500  001990  5017               	movf	fputs@i,w,c
  2501  001992  2412               	addwf	fputs@s,w,c
  2502  001994  6ED9               	movwf	fsr2l,c
  2503  001996  5018               	movf	fputs@i+1,w,c
  2504  001998  2013               	addwfc	fputs@s+1,w,c
  2505  00199A  6EDA               	movwf	fsr2h,c
  2506  00199C  50DF               	movf	indf2,w,c
  2507  00199E  6E16               	movwf	fputs@c,c
  2508  0019A0  5016               	movf	fputs@c,w,c
  2509  0019A2  B4D8               	btfsc	status,2,c
  2510  0019A4  0012               	return	
  2511  0019A6  D7E9               	goto	i1l1587
  2512  0019A8                     __end_of_fputs:
  2513                           	opt callstack 0
  2514                           
  2515 ;; *************** function _fputc *****************
  2516 ;; Defined at:
  2517 ;;		line 8 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  c               2    8[COMRAM] int 
  2520 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2521 ;;		 -> NULL(0), 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2    8[COMRAM] int 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        9 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    8
  2540 ;; This function calls:
  2541 ;;		_putch
  2542 ;; This function is called by:
  2543 ;;		_pad
  2544 ;;		_vfpfcnvrt
  2545 ;;		_fputs
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text20
  2550  0017A2                     __ptext20:
  2551                           	opt callstack 0
  2552  0017A2                     _fputc:
  2553                           	opt callstack 9
  2554                           
  2555                           ;incstack = 0
  2556  0017A2  500B               	movf	fputc@fp,w,c
  2557  0017A4  100C               	iorwf	fputc@fp+1,w,c
  2558  0017A6  B4D8               	btfsc	status,2,c
  2559  0017A8  D004               	goto	i1u60_20
  2560  0017AA  500B               	movf	fputc@fp,w,c
  2561  0017AC  100C               	iorwf	fputc@fp+1,w,c
  2562  0017AE  A4D8               	btfss	status,2,c
  2563  0017B0  D004               	goto	i1l1577
  2564  0017B2                     i1u60_20:
  2565  0017B2  5009               	movf	fputc@c,w,c
  2566  0017B4  ECF0  F00D         	call	_putch
  2567  0017B8  0012               	return	
  2568  0017BA                     i1l1577:
  2569  0017BA  EE20 F004          	lfsr	2,4
  2570  0017BE  500B               	movf	fputc@fp,w,c
  2571  0017C0  26D9               	addwf	fsr2l,f,c
  2572  0017C2  500C               	movf	fputc@fp+1,w,c
  2573  0017C4  22DA               	addwfc	fsr2h,f,c
  2574  0017C6  50DE               	movf	postinc2,w,c
  2575  0017C8  10DE               	iorwf	postinc2,w,c
  2576  0017CA  B4D8               	btfsc	status,2,c
  2577  0017CC  D016               	goto	i1u62_20
  2578  0017CE  EE20 F004          	lfsr	2,4
  2579  0017D2  500B               	movf	fputc@fp,w,c
  2580  0017D4  26D9               	addwf	fsr2l,f,c
  2581  0017D6  500C               	movf	fputc@fp+1,w,c
  2582  0017D8  22DA               	addwfc	fsr2h,f,c
  2583  0017DA  EE10 F002          	lfsr	1,2
  2584  0017DE  500B               	movf	fputc@fp,w,c
  2585  0017E0  26E1               	addwf	fsr1l,f,c
  2586  0017E2  500C               	movf	fputc@fp+1,w,c
  2587  0017E4  22E2               	addwfc	fsr1h,f,c
  2588  0017E6  50DE               	movf	postinc2,w,c
  2589  0017E8  5CE6               	subwf	postinc1,w,c
  2590  0017EA  50E6               	movf	postinc1,w,c
  2591  0017EC  0A80               	xorlw	128
  2592  0017EE  6E11               	movwf	(??_fputc+4)& (0+255),c
  2593  0017F0  50DE               	movf	postinc2,w,c
  2594  0017F2  0A80               	xorlw	128
  2595  0017F4  5811               	subwfb	(??_fputc+4)& (0+255),w,c
  2596  0017F6  B0D8               	btfsc	status,0,c
  2597  0017F8  0012               	return	
  2598  0017FA                     i1u62_20:
  2599  0017FA  EE20 F002          	lfsr	2,2
  2600  0017FE  500B               	movf	fputc@fp,w,c
  2601  001800  26D9               	addwf	fsr2l,f,c
  2602  001802  500C               	movf	fputc@fp+1,w,c
  2603  001804  22DA               	addwfc	fsr2h,f,c
  2604  001806  2ADE               	incf	postinc2,f,c
  2605  001808  0E00               	movlw	0
  2606  00180A  22DD               	addwfc	postdec2,f,c
  2607  00180C  0012               	return		;funcret
  2608  00180E                     __end_of_fputc:
  2609                           	opt callstack 0
  2610                           
  2611 ;; *************** function _putch *****************
  2612 ;; Defined at:
  2613 ;;		line 146 in file "../MSSV-41203052.X/LCD.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  c               1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  c               1    7[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:   22
  2634 ;; This function calls:
  2635 ;;		_lcd_putc
  2636 ;; This function is called by:
  2637 ;;		_lcd_DHBK
  2638 ;;		_fputc
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text21
  2643  001BE0                     __ptext21:
  2644                           	opt callstack 0
  2645  001BE0                     _putch:
  2646                           	opt callstack 0
  2647                           
  2648                           ;incstack = 0
  2649 ;; hardware stack exceeded
  2650                           ;putch@c stored from wreg
  2651  001BE0  6E08               	movwf	putch@c,c
  2652  001BE2  5008               	movf	putch@c,w,c
  2653  001BE4  EC7B  F00C         	call	_lcd_putc
  2654  001BE8  0012               	return		;funcret
  2655  001BEA                     __end_of_putch:
  2656                           	opt callstack 0
  2657                           
  2658 ;; *************** function _lcd_putc *****************
  2659 ;; Defined at:
  2660 ;;		line 132 in file "../MSSV-41203052.X/LCD.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  c               1    wreg     unsigned char 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  c               1    6[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:   21
  2681 ;; This function calls:
  2682 ;;		_d_write
  2683 ;;		_lcd_cls
  2684 ;;		_lcd_gotoxy
  2685 ;; This function is called by:
  2686 ;;		_putch
  2687 ;;		_lcd_puts
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text22
  2692  0018F6                     __ptext22:
  2693                           	opt callstack 0
  2694  0018F6                     _lcd_putc:
  2695                           	opt callstack 0
  2696                           
  2697                           ;incstack = 0
  2698 ;; hardware stack exceeded
  2699                           ;lcd_putc@c stored from wreg
  2700  0018F6  6E07               	movwf	lcd_putc@c,c
  2701  0018F8  D00E               	goto	i1l1563
  2702  0018FA                     i1l1557:
  2703  0018FA  ECAF  F00D         	call	_lcd_cls	;wreg free
  2704  0018FE  0012               	return	
  2705  001900                     i1l1559:
  2706  001900  0E00               	movlw	0
  2707  001902  0100               	movlb	0	; () banked
  2708  001904  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  2709  001906  0E01               	movlw	1
  2710  001908  EC64  F00D         	call	_lcd_gotoxy
  2711  00190C  0012               	return	
  2712  00190E                     i1l1561:
  2713  00190E  5007               	movf	lcd_putc@c,w,c
  2714  001910  EC37  F00D         	call	_d_write
  2715  001914  0012               	return	
  2716  001916                     i1l1563:
  2717  001916  5007               	movf	lcd_putc@c,w,c
  2718  001918  6E05               	movwf	??_lcd_putc& (0+255),c
  2719  00191A  6A06               	clrf	(??_lcd_putc+1)& (0+255),c
  2720                           
  2721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2722                           ; Switch size 1, requested type "simple"
  2723                           ; Number of cases is 1, Range of values is 0 to 0
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte            4     3 (average)
  2727                           ;	Chosen strategy is simple_byte
  2728  00191C  5006               	movf	??_lcd_putc+1,w,c
  2729  00191E  0A00               	xorlw	0	; case 0
  2730  001920  A4D8               	btfss	status,2,c
  2731  001922  D7F5               	goto	i1l1561
  2732                           
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 2, Range of values is 10 to 12
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            7     4 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  001924  5005               	movf	??_lcd_putc,w,c
  2740  001926  0A0A               	xorlw	10	; case 10
  2741  001928  B4D8               	btfsc	status,2,c
  2742  00192A  D7EA               	goto	i1l1559
  2743  00192C  0A06               	xorlw	6	; case 12
  2744  00192E  B4D8               	btfsc	status,2,c
  2745  001930  D7E4               	goto	i1l1557
  2746  001932  D7ED               	goto	i1l1561
  2747  001934                     __end_of_lcd_putc:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _lcd_gotoxy *****************
  2751 ;; Defined at:
  2752 ;;		line 96 in file "../MSSV-41203052.X/LCD.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  row             1    wreg     unsigned char 
  2755 ;;  col             1    0[BANK0 ] unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  row             1    3[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;Total ram usage:        0 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:   20
  2774 ;; This function calls:
  2775 ;;		_i_write
  2776 ;; This function is called by:
  2777 ;;		_Adc_process
  2778 ;;		_lcd_putc
  2779 ;;		_lcd_DHBK
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text23
  2784  001AC8                     __ptext23:
  2785                           	opt callstack 0
  2786  001AC8                     _lcd_gotoxy:
  2787                           	opt callstack 0
  2788                           
  2789                           ;incstack = 0
  2790 ;; hardware stack exceeded
  2791                           ;lcd_gotoxy@row stored from wreg
  2792  001AC8  6E04               	movwf	lcd_gotoxy@row,c
  2793  001ACA  5004               	movf	lcd_gotoxy@row,w,c
  2794  001ACC  B4D8               	btfsc	status,2,c
  2795  001ACE  D003               	goto	i1l1545
  2796  001AD0  0E40               	movlw	64
  2797  001AD2  0100               	movlb	0	; () banked
  2798  001AD4  2789               	addwf	lcd_gotoxy@col& (0+255),f,b
  2799  001AD6                     i1l1545:
  2800  001AD6  0100               	movlb	0	; () banked
  2801  001AD8  5189               	movf	lcd_gotoxy@col& (0+255),w,b
  2802  001ADA  0980               	iorlw	128
  2803  001ADC  EC27  F00D         	call	_i_write
  2804  001AE0  0012               	return		;funcret
  2805  001AE2                     __end_of_lcd_gotoxy:
  2806                           	opt callstack 0
  2807                           
  2808 ;; *************** function _lcd_cls *****************
  2809 ;; Defined at:
  2810 ;;		line 108 in file "../MSSV-41203052.X/LCD.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:   20
  2831 ;; This function calls:
  2832 ;;		_i_write
  2833 ;; This function is called by:
  2834 ;;		_lcd_init
  2835 ;;		_lcd_putc
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text24
  2840  001B5E                     __ptext24:
  2841                           	opt callstack 0
  2842  001B5E                     _lcd_cls:
  2843                           	opt callstack 0
  2844                           
  2845                           ;incstack = 0
  2846 ;; hardware stack exceeded
  2847  001B5E  0E01               	movlw	1
  2848  001B60  EC27  F00D         	call	_i_write
  2849  001B64  0E05               	movlw	5
  2850  001B66  6E04               	movwf	??_lcd_cls& (0+255),c
  2851  001B68  0ED0               	movlw	208
  2852  001B6A                     i1u114_27:
  2853  001B6A  2EE8               	decfsz	wreg,f,c
  2854  001B6C  D7FE               	bra	i1u114_27
  2855  001B6E  2E04               	decfsz	??_lcd_cls& (0+255),f,c
  2856  001B70  D7FC               	bra	i1u114_27
  2857  001B72  0012               	return		;funcret
  2858  001B74                     __end_of_lcd_cls:
  2859                           	opt callstack 0
  2860                           
  2861 ;; *************** function _i_write *****************
  2862 ;; Defined at:
  2863 ;;		line 78 in file "../MSSV-41203052.X/LCD.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  d               1    wreg     unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  d               1    2[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:   19
  2884 ;; This function calls:
  2885 ;;		_LCDBusy
  2886 ;;		_Write_PortA
  2887 ;;		_Write_PortB
  2888 ;; This function is called by:
  2889 ;;		_lcd_gotoxy
  2890 ;;		_lcd_download
  2891 ;;		_lcd_cls
  2892 ;;		_lcd_init
  2893 ;;		_lcd_put_byte
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text25
  2898  001A4E                     __ptext25:
  2899                           	opt callstack 0
  2900  001A4E                     _i_write:
  2901                           	opt callstack 0
  2902                           
  2903                           ;incstack = 0
  2904 ;; hardware stack exceeded
  2905                           ;i_write@d stored from wreg
  2906  001A4E  6E03               	movwf	i_write@d,c
  2907  001A50  0E00               	movlw	0
  2908  001A52  EC7E  F00D         	call	_Write_PortA
  2909  001A56  5003               	movf	i_write@d,w,c
  2910  001A58  EC71  F00D         	call	_Write_PortB
  2911  001A5C  0E40               	movlw	64
  2912  001A5E  EC7E  F00D         	call	_Write_PortA
  2913  001A62  0E00               	movlw	0
  2914  001A64  EC7E  F00D         	call	_Write_PortA
  2915  001A68  ECF5  F00D         	call	_LCDBusy	;wreg free
  2916  001A6C  0012               	return		;funcret
  2917  001A6E                     __end_of_i_write:
  2918                           	opt callstack 0
  2919                           
  2920 ;; *************** function _d_write *****************
  2921 ;; Defined at:
  2922 ;;		line 86 in file "../MSSV-41203052.X/LCD.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  d               1    wreg     unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  d               1    2[COMRAM] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:   19
  2943 ;; This function calls:
  2944 ;;		_LCDBusy
  2945 ;;		_Write_PortA
  2946 ;;		_Write_PortB
  2947 ;; This function is called by:
  2948 ;;		_lcd_download
  2949 ;;		_lcd_putc
  2950 ;;		_lcd_put_byte
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text26
  2955  001A6E                     __ptext26:
  2956                           	opt callstack 0
  2957  001A6E                     _d_write:
  2958                           	opt callstack 0
  2959                           
  2960                           ;incstack = 0
  2961 ;; hardware stack exceeded
  2962                           ;d_write@d stored from wreg
  2963  001A6E  6E03               	movwf	d_write@d,c
  2964  001A70  0E80               	movlw	128
  2965  001A72  EC7E  F00D         	call	_Write_PortA
  2966  001A76  5003               	movf	d_write@d,w,c
  2967  001A78  EC71  F00D         	call	_Write_PortB
  2968  001A7C  0EC0               	movlw	192
  2969  001A7E  EC7E  F00D         	call	_Write_PortA
  2970  001A82  0E00               	movlw	0
  2971  001A84  EC7E  F00D         	call	_Write_PortA
  2972  001A88  ECF5  F00D         	call	_LCDBusy	;wreg free
  2973  001A8C  0012               	return		;funcret
  2974  001A8E                     __end_of_d_write:
  2975                           	opt callstack 0
  2976                           
  2977 ;; *************** function _Write_PortB *****************
  2978 ;; Defined at:
  2979 ;;		line 60 in file "../MSSV-41203052.X/LCD.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  d               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  d               1    1[COMRAM] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:   18
  3000 ;; This function calls:
  3001 ;;		_SPI_send
  3002 ;; This function is called by:
  3003 ;;		_i_write
  3004 ;;		_d_write
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text27
  3009  001AE2                     __ptext27:
  3010                           	opt callstack 0
  3011  001AE2                     _Write_PortB:
  3012                           	opt callstack 0
  3013                           
  3014                           ;incstack = 0
  3015 ;; hardware stack exceeded
  3016                           ;Write_PortB@d stored from wreg
  3017  001AE2  6E02               	movwf	Write_PortB@d,c
  3018  001AE4  9489               	bcf	3977,2,c	;volatile
  3019  001AE6  0E40               	movlw	64
  3020  001AE8  ECCC  F00D         	call	_SPI_send
  3021  001AEC  0E13               	movlw	19
  3022  001AEE  ECCC  F00D         	call	_SPI_send
  3023  001AF2  5002               	movf	Write_PortB@d,w,c
  3024  001AF4  ECCC  F00D         	call	_SPI_send
  3025  001AF8  8489               	bsf	3977,2,c	;volatile
  3026  001AFA  0012               	return		;funcret
  3027  001AFC                     __end_of_Write_PortB:
  3028                           	opt callstack 0
  3029                           
  3030 ;; *************** function _Write_PortA *****************
  3031 ;; Defined at:
  3032 ;;		line 69 in file "../MSSV-41203052.X/LCD.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  mask            1    wreg     unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  mask            1    1[COMRAM] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:   18
  3053 ;; This function calls:
  3054 ;;		_SPI_send
  3055 ;; This function is called by:
  3056 ;;		_i_write
  3057 ;;		_d_write
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text28
  3062  001AFC                     __ptext28:
  3063                           	opt callstack 0
  3064  001AFC                     _Write_PortA:
  3065                           	opt callstack 0
  3066                           
  3067                           ;incstack = 0
  3068 ;; hardware stack exceeded
  3069                           ;Write_PortA@mask stored from wreg
  3070  001AFC  6E02               	movwf	Write_PortA@mask,c
  3071  001AFE  9489               	bcf	3977,2,c	;volatile
  3072  001B00  0E40               	movlw	64
  3073  001B02  ECCC  F00D         	call	_SPI_send
  3074  001B06  0E12               	movlw	18
  3075  001B08  ECCC  F00D         	call	_SPI_send
  3076  001B0C  5002               	movf	Write_PortA@mask,w,c
  3077  001B0E  ECCC  F00D         	call	_SPI_send
  3078  001B12  8489               	bsf	3977,2,c	;volatile
  3079  001B14  0012               	return		;funcret
  3080  001B16                     __end_of_Write_PortA:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _SPI_send *****************
  3084 ;; Defined at:
  3085 ;;		line 37 in file "../MSSV-41203052.X/LCD.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  c               1    wreg     unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  c               1    0[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:   17
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_SPIportA_init
  3110 ;;		_SPIportB_init
  3111 ;;		_Write_PortB
  3112 ;;		_Write_PortA
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text29
  3117  001B98                     __ptext29:
  3118                           	opt callstack 0
  3119  001B98                     _SPI_send:
  3120                           	opt callstack 0
  3121                           
  3122                           ;incstack = 0
  3123 ;; hardware stack exceeded
  3124                           ;SPI_send@c stored from wreg
  3125  001B98  6E01               	movwf	SPI_send@c,c
  3126  001B9A  C001  FFC9         	movff	SPI_send@c,4041	;volatile
  3127  001B9E                     i1l102:
  3128  001B9E  A69E               	btfss	3998,3,c	;volatile
  3129  001BA0  D7FE               	goto	i1l102
  3130  001BA2  969E               	bcf	3998,3,c	;volatile
  3131  001BA4  50C9               	movf	4041,w,c	;volatile
  3132  001BA6  0012               	return		;funcret
  3133  001BA8                     __end_of_SPI_send:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _LCDBusy *****************
  3137 ;; Defined at:
  3138 ;;		line 28 in file "../MSSV-41203052.X/LCD.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:   17
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_i_write
  3163 ;;		_d_write
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text30
  3168  001BEA                     __ptext30:
  3169                           	opt callstack 0
  3170  001BEA                     _LCDBusy:
  3171                           	opt callstack 0
  3172                           
  3173                           ;incstack = 0
  3174 ;; hardware stack exceeded
  3175  001BEA  0E1F               	movlw	31
  3176  001BEC                     i1u115_27:
  3177  001BEC  2EE8               	decfsz	wreg,f,c
  3178  001BEE  D7FE               	bra	i1u115_27
  3179  001BF0  D000               	nop2	
  3180  001BF2  0012               	return		;funcret
  3181  001BF4                     __end_of_LCDBusy:
  3182                           	opt callstack 0
  3183                           
  3184 ;; *************** function _abs *****************
  3185 ;; Defined at:
  3186 ;;		line 1 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  a               2   18[COMRAM] int 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2   18[COMRAM] int 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;Total ram usage:        4 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    2
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_dtoa
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text31
  3215  0019A8                     __ptext31:
  3216                           	opt callstack 0
  3217  0019A8                     _abs:
  3218                           	opt callstack 14
  3219                           
  3220                           ;incstack = 0
  3221  0019A8  BE14               	btfsc	abs@a+1,7,c
  3222  0019AA  D005               	goto	i1u69_20
  3223  0019AC  5014               	movf	abs@a+1,w,c
  3224  0019AE  E110               	bnz	i1l949
  3225  0019B0  0413               	decf	abs@a,w,c
  3226  0019B2  B0D8               	btfsc	status,0,c
  3227  0019B4  D00D               	goto	i1l949
  3228  0019B6                     i1u69_20:
  3229  0019B6  C013  F015         	movff	abs@a,??_abs
  3230  0019BA  C014  F016         	movff	abs@a+1,??_abs+1
  3231  0019BE  1E15               	comf	??_abs,f,c
  3232  0019C0  1E16               	comf	??_abs+1,f,c
  3233  0019C2  4A15               	infsnz	??_abs,f,c
  3234  0019C4  2A16               	incf	??_abs+1,f,c
  3235  0019C6  C015  F013         	movff	??_abs,?_abs
  3236  0019CA  C016  F014         	movff	??_abs+1,?_abs+1
  3237  0019CE  0012               	return	
  3238  0019D0                     i1l949:
  3239  0019D0  C013  F013         	movff	abs@a,?_abs
  3240  0019D4  C014  F014         	movff	abs@a+1,?_abs+1
  3241  0019D8  0012               	return		;funcret
  3242  0019DA                     __end_of_abs:
  3243                           	opt callstack 0
  3244                           
  3245 ;; *************** function ___aomod *****************
  3246 ;; Defined at:
  3247 ;;		line 9 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  dividend        8    0[COMRAM] long long 
  3250 ;;  divisor         8    8[COMRAM] long long 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  sign            1   17[COMRAM] unsigned char 
  3253 ;;  counter         1   16[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  8    0[COMRAM] long long 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3263 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;Total ram usage:       18 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    2
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_dtoa
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text32
  3278  001578                     __ptext32:
  3279                           	opt callstack 0
  3280  001578                     ___aomod:
  3281                           	opt callstack 14
  3282                           
  3283                           ;incstack = 0
  3284  001578  0E00               	movlw	0
  3285  00157A  6E12               	movwf	___aomod@sign,c
  3286  00157C  AE08               	btfss	___aomod@dividend+7,7,c
  3287  00157E  D012               	goto	i1l1681
  3288  001580  1E08               	comf	___aomod@dividend+7,f,c
  3289  001582  1E07               	comf	___aomod@dividend+6,f,c
  3290  001584  1E06               	comf	___aomod@dividend+5,f,c
  3291  001586  1E05               	comf	___aomod@dividend+4,f,c
  3292  001588  1E04               	comf	___aomod@dividend+3,f,c
  3293  00158A  1E03               	comf	___aomod@dividend+2,f,c
  3294  00158C  1E02               	comf	___aomod@dividend+1,f,c
  3295  00158E  6C01               	negf	___aomod@dividend,c
  3296  001590  0E00               	movlw	0
  3297  001592  2202               	addwfc	___aomod@dividend+1,f,c
  3298  001594  2203               	addwfc	___aomod@dividend+2,f,c
  3299  001596  2204               	addwfc	___aomod@dividend+3,f,c
  3300  001598  2205               	addwfc	___aomod@dividend+4,f,c
  3301  00159A  2206               	addwfc	___aomod@dividend+5,f,c
  3302  00159C  2207               	addwfc	___aomod@dividend+6,f,c
  3303  00159E  2208               	addwfc	___aomod@dividend+7,f,c
  3304  0015A0  0E01               	movlw	1
  3305  0015A2  6E12               	movwf	___aomod@sign,c
  3306  0015A4                     i1l1681:
  3307  0015A4  AE10               	btfss	___aomod@divisor+7,7,c
  3308  0015A6  D010               	goto	i1l1685
  3309  0015A8  1E10               	comf	___aomod@divisor+7,f,c
  3310  0015AA  1E0F               	comf	___aomod@divisor+6,f,c
  3311  0015AC  1E0E               	comf	___aomod@divisor+5,f,c
  3312  0015AE  1E0D               	comf	___aomod@divisor+4,f,c
  3313  0015B0  1E0C               	comf	___aomod@divisor+3,f,c
  3314  0015B2  1E0B               	comf	___aomod@divisor+2,f,c
  3315  0015B4  1E0A               	comf	___aomod@divisor+1,f,c
  3316  0015B6  6C09               	negf	___aomod@divisor,c
  3317  0015B8  0E00               	movlw	0
  3318  0015BA  220A               	addwfc	___aomod@divisor+1,f,c
  3319  0015BC  220B               	addwfc	___aomod@divisor+2,f,c
  3320  0015BE  220C               	addwfc	___aomod@divisor+3,f,c
  3321  0015C0  220D               	addwfc	___aomod@divisor+4,f,c
  3322  0015C2  220E               	addwfc	___aomod@divisor+5,f,c
  3323  0015C4  220F               	addwfc	___aomod@divisor+6,f,c
  3324  0015C6  2210               	addwfc	___aomod@divisor+7,f,c
  3325  0015C8                     i1l1685:
  3326  0015C8  5009               	movf	___aomod@divisor,w,c
  3327  0015CA  100A               	iorwf	___aomod@divisor+1,w,c
  3328  0015CC  100B               	iorwf	___aomod@divisor+2,w,c
  3329  0015CE  100C               	iorwf	___aomod@divisor+3,w,c
  3330  0015D0  100D               	iorwf	___aomod@divisor+4,w,c
  3331  0015D2  100E               	iorwf	___aomod@divisor+5,w,c
  3332  0015D4  100F               	iorwf	___aomod@divisor+6,w,c
  3333  0015D6  1010               	iorwf	___aomod@divisor+7,w,c
  3334  0015D8  B4D8               	btfsc	status,2,c
  3335  0015DA  D03C               	goto	i1l1701
  3336  0015DC  0E01               	movlw	1
  3337  0015DE  6E11               	movwf	___aomod@counter,c
  3338  0015E0  D00A               	goto	i1l1691
  3339  0015E2                     i1l1689:
  3340  0015E2  90D8               	bcf	status,0,c
  3341  0015E4  3609               	rlcf	___aomod@divisor,f,c
  3342  0015E6  360A               	rlcf	___aomod@divisor+1,f,c
  3343  0015E8  360B               	rlcf	___aomod@divisor+2,f,c
  3344  0015EA  360C               	rlcf	___aomod@divisor+3,f,c
  3345  0015EC  360D               	rlcf	___aomod@divisor+4,f,c
  3346  0015EE  360E               	rlcf	___aomod@divisor+5,f,c
  3347  0015F0  360F               	rlcf	___aomod@divisor+6,f,c
  3348  0015F2  3610               	rlcf	___aomod@divisor+7,f,c
  3349  0015F4  2A11               	incf	___aomod@counter,f,c
  3350  0015F6                     i1l1691:
  3351  0015F6  AE10               	btfss	___aomod@divisor+7,7,c
  3352  0015F8  D7F4               	goto	i1l1689
  3353  0015FA                     i1u80_20:
  3354  0015FA  5009               	movf	___aomod@divisor,w,c
  3355  0015FC  5C01               	subwf	___aomod@dividend,w,c
  3356  0015FE  500A               	movf	___aomod@divisor+1,w,c
  3357  001600  5802               	subwfb	___aomod@dividend+1,w,c
  3358  001602  500B               	movf	___aomod@divisor+2,w,c
  3359  001604  5803               	subwfb	___aomod@dividend+2,w,c
  3360  001606  500C               	movf	___aomod@divisor+3,w,c
  3361  001608  5804               	subwfb	___aomod@dividend+3,w,c
  3362  00160A  500D               	movf	___aomod@divisor+4,w,c
  3363  00160C  5805               	subwfb	___aomod@dividend+4,w,c
  3364  00160E  500E               	movf	___aomod@divisor+5,w,c
  3365  001610  5806               	subwfb	___aomod@dividend+5,w,c
  3366  001612  500F               	movf	___aomod@divisor+6,w,c
  3367  001614  5807               	subwfb	___aomod@dividend+6,w,c
  3368  001616  5010               	movf	___aomod@divisor+7,w,c
  3369  001618  5808               	subwfb	___aomod@dividend+7,w,c
  3370  00161A  A0D8               	btfss	status,0,c
  3371  00161C  D010               	goto	i1l1697
  3372  00161E  5009               	movf	___aomod@divisor,w,c
  3373  001620  5E01               	subwf	___aomod@dividend,f,c
  3374  001622  500A               	movf	___aomod@divisor+1,w,c
  3375  001624  5A02               	subwfb	___aomod@dividend+1,f,c
  3376  001626  500B               	movf	___aomod@divisor+2,w,c
  3377  001628  5A03               	subwfb	___aomod@dividend+2,f,c
  3378  00162A  500C               	movf	___aomod@divisor+3,w,c
  3379  00162C  5A04               	subwfb	___aomod@dividend+3,f,c
  3380  00162E  500D               	movf	___aomod@divisor+4,w,c
  3381  001630  5A05               	subwfb	___aomod@dividend+4,f,c
  3382  001632  500E               	movf	___aomod@divisor+5,w,c
  3383  001634  5A06               	subwfb	___aomod@dividend+5,f,c
  3384  001636  500F               	movf	___aomod@divisor+6,w,c
  3385  001638  5A07               	subwfb	___aomod@dividend+6,f,c
  3386  00163A  5010               	movf	___aomod@divisor+7,w,c
  3387  00163C  5A08               	subwfb	___aomod@dividend+7,f,c
  3388  00163E                     i1l1697:
  3389  00163E  90D8               	bcf	status,0,c
  3390  001640  3210               	rrcf	___aomod@divisor+7,f,c
  3391  001642  320F               	rrcf	___aomod@divisor+6,f,c
  3392  001644  320E               	rrcf	___aomod@divisor+5,f,c
  3393  001646  320D               	rrcf	___aomod@divisor+4,f,c
  3394  001648  320C               	rrcf	___aomod@divisor+3,f,c
  3395  00164A  320B               	rrcf	___aomod@divisor+2,f,c
  3396  00164C  320A               	rrcf	___aomod@divisor+1,f,c
  3397  00164E  3209               	rrcf	___aomod@divisor,f,c
  3398  001650  2E11               	decfsz	___aomod@counter,f,c
  3399  001652  D7D3               	goto	i1u80_20
  3400  001654                     i1l1701:
  3401  001654  5012               	movf	___aomod@sign,w,c
  3402  001656  B4D8               	btfsc	status,2,c
  3403  001658  D010               	goto	i1l1705
  3404  00165A  1E08               	comf	___aomod@dividend+7,f,c
  3405  00165C  1E07               	comf	___aomod@dividend+6,f,c
  3406  00165E  1E06               	comf	___aomod@dividend+5,f,c
  3407  001660  1E05               	comf	___aomod@dividend+4,f,c
  3408  001662  1E04               	comf	___aomod@dividend+3,f,c
  3409  001664  1E03               	comf	___aomod@dividend+2,f,c
  3410  001666  1E02               	comf	___aomod@dividend+1,f,c
  3411  001668  6C01               	negf	___aomod@dividend,c
  3412  00166A  0E00               	movlw	0
  3413  00166C  2202               	addwfc	___aomod@dividend+1,f,c
  3414  00166E  2203               	addwfc	___aomod@dividend+2,f,c
  3415  001670  2204               	addwfc	___aomod@dividend+3,f,c
  3416  001672  2205               	addwfc	___aomod@dividend+4,f,c
  3417  001674  2206               	addwfc	___aomod@dividend+5,f,c
  3418  001676  2207               	addwfc	___aomod@dividend+6,f,c
  3419  001678  2208               	addwfc	___aomod@dividend+7,f,c
  3420  00167A                     i1l1705:
  3421  00167A  C001  F001         	movff	___aomod@dividend,?___aomod
  3422  00167E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3423  001682  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3424  001686  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3425  00168A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3426  00168E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3427  001692  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3428  001696  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3429  00169A  0012               	return		;funcret
  3430  00169C                     __end_of___aomod:
  3431                           	opt callstack 0
  3432                           
  3433 ;; *************** function ___aodiv *****************
  3434 ;; Defined at:
  3435 ;;		line 9 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  dividend        8    0[COMRAM] long long 
  3438 ;;  divisor         8    8[COMRAM] long long 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        8   18[COMRAM] long long 
  3441 ;;  sign            1   17[COMRAM] unsigned char 
  3442 ;;  counter         1   16[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  8    0[COMRAM] long long 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3452 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;Total ram usage:       26 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_dtoa
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text33
  3467  001430                     __ptext33:
  3468                           	opt callstack 0
  3469  001430                     ___aodiv:
  3470                           	opt callstack 14
  3471                           
  3472                           ;incstack = 0
  3473  001430  0E00               	movlw	0
  3474  001432  6E12               	movwf	___aodiv@sign,c
  3475  001434  AE10               	btfss	___aodiv@divisor+7,7,c
  3476  001436  D012               	goto	i1l1637
  3477  001438  1E10               	comf	___aodiv@divisor+7,f,c
  3478  00143A  1E0F               	comf	___aodiv@divisor+6,f,c
  3479  00143C  1E0E               	comf	___aodiv@divisor+5,f,c
  3480  00143E  1E0D               	comf	___aodiv@divisor+4,f,c
  3481  001440  1E0C               	comf	___aodiv@divisor+3,f,c
  3482  001442  1E0B               	comf	___aodiv@divisor+2,f,c
  3483  001444  1E0A               	comf	___aodiv@divisor+1,f,c
  3484  001446  6C09               	negf	___aodiv@divisor,c
  3485  001448  0E00               	movlw	0
  3486  00144A  220A               	addwfc	___aodiv@divisor+1,f,c
  3487  00144C  220B               	addwfc	___aodiv@divisor+2,f,c
  3488  00144E  220C               	addwfc	___aodiv@divisor+3,f,c
  3489  001450  220D               	addwfc	___aodiv@divisor+4,f,c
  3490  001452  220E               	addwfc	___aodiv@divisor+5,f,c
  3491  001454  220F               	addwfc	___aodiv@divisor+6,f,c
  3492  001456  2210               	addwfc	___aodiv@divisor+7,f,c
  3493  001458  0E01               	movlw	1
  3494  00145A  6E12               	movwf	___aodiv@sign,c
  3495  00145C                     i1l1637:
  3496  00145C  AE08               	btfss	___aodiv@dividend+7,7,c
  3497  00145E  D012               	goto	i1l1643
  3498  001460  1E08               	comf	___aodiv@dividend+7,f,c
  3499  001462  1E07               	comf	___aodiv@dividend+6,f,c
  3500  001464  1E06               	comf	___aodiv@dividend+5,f,c
  3501  001466  1E05               	comf	___aodiv@dividend+4,f,c
  3502  001468  1E04               	comf	___aodiv@dividend+3,f,c
  3503  00146A  1E03               	comf	___aodiv@dividend+2,f,c
  3504  00146C  1E02               	comf	___aodiv@dividend+1,f,c
  3505  00146E  6C01               	negf	___aodiv@dividend,c
  3506  001470  0E00               	movlw	0
  3507  001472  2202               	addwfc	___aodiv@dividend+1,f,c
  3508  001474  2203               	addwfc	___aodiv@dividend+2,f,c
  3509  001476  2204               	addwfc	___aodiv@dividend+3,f,c
  3510  001478  2205               	addwfc	___aodiv@dividend+4,f,c
  3511  00147A  2206               	addwfc	___aodiv@dividend+5,f,c
  3512  00147C  2207               	addwfc	___aodiv@dividend+6,f,c
  3513  00147E  2208               	addwfc	___aodiv@dividend+7,f,c
  3514  001480  0E01               	movlw	1
  3515  001482  1A12               	xorwf	___aodiv@sign,f,c
  3516  001484                     i1l1643:
  3517  001484  EE20  F013         	lfsr	2,___aodiv@quotient
  3518  001488  0E07               	movlw	7
  3519  00148A                     i1u72_21:
  3520  00148A  6ADE               	clrf	postinc2,c
  3521  00148C  06E8               	decf	wreg,f,c
  3522  00148E  E2FD               	bc	i1u72_21
  3523  001490  5009               	movf	___aodiv@divisor,w,c
  3524  001492  100A               	iorwf	___aodiv@divisor+1,w,c
  3525  001494  100B               	iorwf	___aodiv@divisor+2,w,c
  3526  001496  100C               	iorwf	___aodiv@divisor+3,w,c
  3527  001498  100D               	iorwf	___aodiv@divisor+4,w,c
  3528  00149A  100E               	iorwf	___aodiv@divisor+5,w,c
  3529  00149C  100F               	iorwf	___aodiv@divisor+6,w,c
  3530  00149E  1010               	iorwf	___aodiv@divisor+7,w,c
  3531  0014A0  B4D8               	btfsc	status,2,c
  3532  0014A2  D046               	goto	i1l1665
  3533  0014A4  0E01               	movlw	1
  3534  0014A6  6E11               	movwf	___aodiv@counter,c
  3535  0014A8  D00A               	goto	i1l1651
  3536  0014AA                     i1l1649:
  3537  0014AA  90D8               	bcf	status,0,c
  3538  0014AC  3609               	rlcf	___aodiv@divisor,f,c
  3539  0014AE  360A               	rlcf	___aodiv@divisor+1,f,c
  3540  0014B0  360B               	rlcf	___aodiv@divisor+2,f,c
  3541  0014B2  360C               	rlcf	___aodiv@divisor+3,f,c
  3542  0014B4  360D               	rlcf	___aodiv@divisor+4,f,c
  3543  0014B6  360E               	rlcf	___aodiv@divisor+5,f,c
  3544  0014B8  360F               	rlcf	___aodiv@divisor+6,f,c
  3545  0014BA  3610               	rlcf	___aodiv@divisor+7,f,c
  3546  0014BC  2A11               	incf	___aodiv@counter,f,c
  3547  0014BE                     i1l1651:
  3548  0014BE  AE10               	btfss	___aodiv@divisor+7,7,c
  3549  0014C0  D7F4               	goto	i1l1649
  3550  0014C2                     i1u74_20:
  3551  0014C2  90D8               	bcf	status,0,c
  3552  0014C4  3613               	rlcf	___aodiv@quotient,f,c
  3553  0014C6  3614               	rlcf	___aodiv@quotient+1,f,c
  3554  0014C8  3615               	rlcf	___aodiv@quotient+2,f,c
  3555  0014CA  3616               	rlcf	___aodiv@quotient+3,f,c
  3556  0014CC  3617               	rlcf	___aodiv@quotient+4,f,c
  3557  0014CE  3618               	rlcf	___aodiv@quotient+5,f,c
  3558  0014D0  3619               	rlcf	___aodiv@quotient+6,f,c
  3559  0014D2  361A               	rlcf	___aodiv@quotient+7,f,c
  3560  0014D4  5009               	movf	___aodiv@divisor,w,c
  3561  0014D6  5C01               	subwf	___aodiv@dividend,w,c
  3562  0014D8  500A               	movf	___aodiv@divisor+1,w,c
  3563  0014DA  5802               	subwfb	___aodiv@dividend+1,w,c
  3564  0014DC  500B               	movf	___aodiv@divisor+2,w,c
  3565  0014DE  5803               	subwfb	___aodiv@dividend+2,w,c
  3566  0014E0  500C               	movf	___aodiv@divisor+3,w,c
  3567  0014E2  5804               	subwfb	___aodiv@dividend+3,w,c
  3568  0014E4  500D               	movf	___aodiv@divisor+4,w,c
  3569  0014E6  5805               	subwfb	___aodiv@dividend+4,w,c
  3570  0014E8  500E               	movf	___aodiv@divisor+5,w,c
  3571  0014EA  5806               	subwfb	___aodiv@dividend+5,w,c
  3572  0014EC  500F               	movf	___aodiv@divisor+6,w,c
  3573  0014EE  5807               	subwfb	___aodiv@dividend+6,w,c
  3574  0014F0  5010               	movf	___aodiv@divisor+7,w,c
  3575  0014F2  5808               	subwfb	___aodiv@dividend+7,w,c
  3576  0014F4  A0D8               	btfss	status,0,c
  3577  0014F6  D011               	goto	i1l1661
  3578  0014F8  5009               	movf	___aodiv@divisor,w,c
  3579  0014FA  5E01               	subwf	___aodiv@dividend,f,c
  3580  0014FC  500A               	movf	___aodiv@divisor+1,w,c
  3581  0014FE  5A02               	subwfb	___aodiv@dividend+1,f,c
  3582  001500  500B               	movf	___aodiv@divisor+2,w,c
  3583  001502  5A03               	subwfb	___aodiv@dividend+2,f,c
  3584  001504  500C               	movf	___aodiv@divisor+3,w,c
  3585  001506  5A04               	subwfb	___aodiv@dividend+3,f,c
  3586  001508  500D               	movf	___aodiv@divisor+4,w,c
  3587  00150A  5A05               	subwfb	___aodiv@dividend+4,f,c
  3588  00150C  500E               	movf	___aodiv@divisor+5,w,c
  3589  00150E  5A06               	subwfb	___aodiv@dividend+5,f,c
  3590  001510  500F               	movf	___aodiv@divisor+6,w,c
  3591  001512  5A07               	subwfb	___aodiv@dividend+6,f,c
  3592  001514  5010               	movf	___aodiv@divisor+7,w,c
  3593  001516  5A08               	subwfb	___aodiv@dividend+7,f,c
  3594  001518  8013               	bsf	___aodiv@quotient,0,c
  3595  00151A                     i1l1661:
  3596  00151A  90D8               	bcf	status,0,c
  3597  00151C  3210               	rrcf	___aodiv@divisor+7,f,c
  3598  00151E  320F               	rrcf	___aodiv@divisor+6,f,c
  3599  001520  320E               	rrcf	___aodiv@divisor+5,f,c
  3600  001522  320D               	rrcf	___aodiv@divisor+4,f,c
  3601  001524  320C               	rrcf	___aodiv@divisor+3,f,c
  3602  001526  320B               	rrcf	___aodiv@divisor+2,f,c
  3603  001528  320A               	rrcf	___aodiv@divisor+1,f,c
  3604  00152A  3209               	rrcf	___aodiv@divisor,f,c
  3605  00152C  2E11               	decfsz	___aodiv@counter,f,c
  3606  00152E  D7C9               	goto	i1u74_20
  3607  001530                     i1l1665:
  3608  001530  5012               	movf	___aodiv@sign,w,c
  3609  001532  B4D8               	btfsc	status,2,c
  3610  001534  D010               	goto	i1l1669
  3611  001536  1E1A               	comf	___aodiv@quotient+7,f,c
  3612  001538  1E19               	comf	___aodiv@quotient+6,f,c
  3613  00153A  1E18               	comf	___aodiv@quotient+5,f,c
  3614  00153C  1E17               	comf	___aodiv@quotient+4,f,c
  3615  00153E  1E16               	comf	___aodiv@quotient+3,f,c
  3616  001540  1E15               	comf	___aodiv@quotient+2,f,c
  3617  001542  1E14               	comf	___aodiv@quotient+1,f,c
  3618  001544  6C13               	negf	___aodiv@quotient,c
  3619  001546  0E00               	movlw	0
  3620  001548  2214               	addwfc	___aodiv@quotient+1,f,c
  3621  00154A  2215               	addwfc	___aodiv@quotient+2,f,c
  3622  00154C  2216               	addwfc	___aodiv@quotient+3,f,c
  3623  00154E  2217               	addwfc	___aodiv@quotient+4,f,c
  3624  001550  2218               	addwfc	___aodiv@quotient+5,f,c
  3625  001552  2219               	addwfc	___aodiv@quotient+6,f,c
  3626  001554  221A               	addwfc	___aodiv@quotient+7,f,c
  3627  001556                     i1l1669:
  3628  001556  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3629  00155A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3630  00155E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3631  001562  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3632  001566  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3633  00156A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3634  00156E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3635  001572  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3636  001576  0012               	return		;funcret
  3637  001578                     __end_of___aodiv:
  3638                           	opt callstack 0
  3639                           
  3640 ;; *************** function _timer0_isr *****************
  3641 ;; Defined at:
  3642 ;;		line 22 in file "../MSSV-41203052.X/Timer.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		_timer_process
  3665 ;;		i2_timer0_reset
  3666 ;; This function is called by:
  3667 ;;		Interrupt level 2
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	intcode
  3672  000008                     __pintcode:
  3673                           	opt callstack 0
  3674  000008                     _timer0_isr:
  3675                           	opt callstack 6
  3676                           
  3677                           ;incstack = 0
  3678  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3679  00000A  ED56  F00D         	call	int_func,f	;refresh shadow registers
  3680                           
  3681                           	psect	intcode_body
  3682  001AAC                     __pintcode_body:
  3683                           	opt callstack 6
  3684  001AAC                     int_func:
  3685                           	opt callstack 6
  3686  001AAC  0006               	pop		; remove dummy address from shadow register refresh
  3687                           
  3688                           ;../MSSV-41203052.X/Timer.c: 24:     if(TMR0IE & TMR0IF)
  3689  001AAE  0E01               	movlw	1
  3690  001AB0  AAF2               	btfss	4082,5,c	;volatile
  3691  001AB2  0E00               	movlw	0
  3692  001AB4  A4F2               	btfss	4082,2,c	;volatile
  3693  001AB6  0E00               	movlw	0
  3694  001AB8  A0E8               	btfss	wreg,0,c
  3695  001ABA  D004               	goto	i2l199
  3696                           
  3697                           ;../MSSV-41203052.X/Timer.c: 25:     {;../MSSV-41203052.X/Timer.c: 26:         timer0_re
      +                          set();
  3698  001ABC  ECD4  F00D         	call	i2_timer0_reset	;wreg free
  3699                           
  3700                           ;../MSSV-41203052.X/Timer.c: 27:         timer_process();
  3701  001AC0  ECEA  F00D         	call	_timer_process	;wreg free
  3702  001AC4                     i2l199:
  3703  001AC4  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3704  001AC6  0011               	retfie		f
  3705  001AC8                     __end_of_timer0_isr:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function i2_timer0_reset *****************
  3709 ;; Defined at:
  3710 ;;		line 15 in file "../MSSV-41203052.X/Timer.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_timer0_isr
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text35
  3738  001BA8                     __ptext35:
  3739                           	opt callstack 0
  3740  001BA8                     i2_timer0_reset:
  3741                           	opt callstack 6
  3742                           
  3743                           ;../MSSV-41203052.X/Timer.c: 17:     TMR0IF = 0;
  3744                           
  3745                           ;incstack = 0
  3746  001BA8  94F2               	bcf	4082,2,c	;volatile
  3747                           
  3748                           ;../MSSV-41203052.X/Timer.c: 18:     TMR0ON = 0;
  3749  001BAA  9ED5               	bcf	4053,7,c	;volatile
  3750                           
  3751                           ;../MSSV-41203052.X/Timer.c: 19:     TMR0 = -12500;
  3752  001BAC  0ECF               	movlw	207
  3753  001BAE  6ED7               	movwf	4055,c	;volatile
  3754  001BB0  0E2C               	movlw	44
  3755  001BB2  6ED6               	movwf	4054,c	;volatile
  3756                           
  3757                           ;../MSSV-41203052.X/Timer.c: 20:     TMR0ON = 1;
  3758  001BB4  8ED5               	bsf	4053,7,c	;volatile
  3759  001BB6  0012               	return		;funcret
  3760  001BB8                     __end_ofi2_timer0_reset:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _timer_process *****************
  3764 ;; Defined at:
  3765 ;;		line 53 in file "ADC.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_timer0_isr
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text36
  3793  001BD4                     __ptext36:
  3794                           	opt callstack 0
  3795  001BD4                     _timer_process:
  3796                           	opt callstack 6
  3797                           
  3798                           ;ADC.c: 55:     if((--dem3s==0))
  3799                           
  3800                           ;incstack = 0
  3801  001BD4  2E5E               	decfsz	_dem3s,f,c
  3802  001BD6  0012               	return	
  3803                           
  3804                           ;ADC.c: 56:     {;ADC.c: 57:         ADCON0bits.GO = 1;
  3805  001BD8  82C2               	bsf	4034,1,c	;volatile
  3806                           
  3807                           ;ADC.c: 58:         dem3s = 300;
  3808  001BDA  0E2C               	movlw	44
  3809  001BDC  6E5E               	movwf	_dem3s,c
  3810  001BDE  0012               	return		;funcret
  3811  001BE0                     __end_of_timer_process:
  3812                           	opt callstack 0
  3813                           
  3814                           	psect	rparam
  3815  0000                     
  3816                           	psect	temp
  3817  00005F                     btemp:
  3818                           	opt callstack 0
  3819  00005F                     	ds	1
  3820  0000                     int$flags	set	btemp
  3821  0000                     wtemp8	set	btemp+1
  3822  0000                     ttemp5	set	btemp+1
  3823  0000                     ttemp6	set	btemp+4
  3824  0000                     ttemp7	set	btemp+8
  3825                           tosu	equ	0xFFF
  3826                           tosh	equ	0xFFE
  3827                           tosl	equ	0xFFD
  3828                           stkptr	equ	0xFFC
  3829                           pclatu	equ	0xFFB
  3830                           pclath	equ	0xFFA
  3831                           pcl	equ	0xFF9
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           indf0	equ	0xFEF
  3839                           postinc0	equ	0xFEE
  3840                           postdec0	equ	0xFED
  3841                           preinc0	equ	0xFEC
  3842                           plusw0	equ	0xFEB
  3843                           fsr0h	equ	0xFEA
  3844                           fsr0l	equ	0xFE9
  3845                           wreg	equ	0xFE8
  3846                           indf1	equ	0xFE7
  3847                           postinc1	equ	0xFE6
  3848                           postdec1	equ	0xFE5
  3849                           preinc1	equ	0xFE4
  3850                           plusw1	equ	0xFE3
  3851                           fsr1h	equ	0xFE2
  3852                           fsr1l	equ	0xFE1
  3853                           bsr	equ	0xFE0
  3854                           indf2	equ	0xFDF
  3855                           postinc2	equ	0xFDE
  3856                           postdec2	equ	0xFDD
  3857                           preinc2	equ	0xFDC
  3858                           plusw2	equ	0xFDB
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    64
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     31      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1200_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    lcd_download@data	PTR const unsigned char  size(2) Largest target is 64
		 -> dhbkstr(CODE[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Adc_isr in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _timer0_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _lcd_init->_lcd_DHBK
    _lcd_DHBK->_lcd_download

Critical Paths under _Adc_isr in BANK0

    _Adc_process->_printf
    _printf->_vfprintf

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Adc_isr in BANK1

    None.

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Adc_isr in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Adc_isr in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Adc_isr in BANK4

    None.

Critical Paths under _timer0_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Adc_isr in BANK5

    None.

Critical Paths under _timer0_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Adc_isr in BANK6

    None.

Critical Paths under _timer0_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Adc_isr in BANK7

    None.

Critical Paths under _timer0_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Adc_isr in BANK8

    None.

Critical Paths under _timer0_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Adc_isr in BANK9

    None.

Critical Paths under _timer0_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Adc_isr in BANK10

    None.

Critical Paths under _timer0_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Adc_isr in BANK11

    None.

Critical Paths under _timer0_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Adc_isr in BANK12

    None.

Critical Paths under _timer0_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Adc_isr in BANK13

    None.

Critical Paths under _timer0_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Adc_isr in BANK14

    None.

Critical Paths under _timer0_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Adc_isr in BANK15

    None.

Critical Paths under _timer0_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2249
                           _Adc_init
                           _lcd_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
                       _timer0_reset
 ---------------------------------------------------------------------------------
 (2) _timer0_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    2249
                           _SPI_init
                      _SPIportA_init
                      _SPIportB_init
                            _i_write
                           _lcd_DHBK
                            _lcd_cls
                             _tre_ms
 ---------------------------------------------------------------------------------
 (2) _tre_ms                                               2     0      2     197
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_DHBK                                             1     1      0    1782
                                             30 BANK0      1     1      0
                       _lcd_download
                         _lcd_gotoxy
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0     751
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (16) _lcd_putc                                            3     3      0     729
                            _d_write
                            _lcd_cls
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (17) _lcd_gotoxy                                          2     1      1     461
                            _i_write
 ---------------------------------------------------------------------------------
 (17) _lcd_cls                                             1     1      0     112
                            _i_write
 ---------------------------------------------------------------------------------
 (3) _lcd_download                                         6     4      2     412
                                             24 BANK0      6     4      2
                            _d_write
                            _i_write
 ---------------------------------------------------------------------------------
 (18) _i_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (17) _d_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (19) _Write_PortB                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _Write_PortA                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _LCDBusy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPIportB_init                                        0     0      0      23
                           _SPI_send
 ---------------------------------------------------------------------------------
 (2) _SPIportA_init                                        0     0      0      23
                           _SPI_send
 ---------------------------------------------------------------------------------
 (20) _SPI_send                                            1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Adc_isr                                             13    13      0    8827
                                             11 BANK0     13    13      0
                        _Adc_process
 ---------------------------------------------------------------------------------
 (10) _Adc_process                                         0     0      0    8827
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (11) _printf                                              8     4      4    8366
                                              3 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (12) _vfprintf                                            8     2      6    8160
                                             87 COMRAM     6     0      6
                                              1 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) _vfpfcnvrt                                          42    36      6    7806
                                             71 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _dtoa                                               36    26     10    5728
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (15) _pad                                                11     5      6    4079
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (16) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _fputs                                               7     3      4    1920
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4    1519
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0     751
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (16) _lcd_putc                                            3     3      0     729
                            _d_write
                            _lcd_cls
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (17) _lcd_gotoxy                                          2     1      1     461
                            _i_write
 ---------------------------------------------------------------------------------
 (17) _lcd_cls                                             1     1      0     112
                            _i_write
 ---------------------------------------------------------------------------------
 (18) _i_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (17) _d_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (19) _Write_PortB                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _Write_PortA                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (20) _SPI_send                                            1     1      0      23
 ---------------------------------------------------------------------------------
 (19) _LCDBusy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (15) ___aomod                                            18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (15) ___aodiv                                            26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _timer0_isr                                          0     0      0       0
                      _timer_process
                     i2_timer0_reset
 ---------------------------------------------------------------------------------
 (25) i2_timer0_reset                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (25) _timer_process                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_init
   _lcd_init
     _SPI_init
     _SPIportA_init
       _SPI_send
     _SPIportB_init
       _SPI_send
     _i_write
       _LCDBusy
       _Write_PortA
         _SPI_send
       _Write_PortB
         _SPI_send
     _lcd_DHBK
       _lcd_download
         _d_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
         _i_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
       _lcd_gotoxy
         _i_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
       _putch
         _lcd_putc
           _d_write
             _LCDBusy
             _Write_PortA
               _SPI_send
             _Write_PortB
               _SPI_send
           _lcd_cls
             _i_write
               _LCDBusy
               _Write_PortA
                 _SPI_send
               _Write_PortB
                 _SPI_send
           _lcd_gotoxy
             _i_write
               _LCDBusy
               _Write_PortA
                 _SPI_send
               _Write_PortB
                 _SPI_send
     _lcd_cls
       _i_write
         _LCDBusy
         _Write_PortA
           _SPI_send
         _Write_PortB
           _SPI_send
     _tre_ms
   _timer0_init
     _timer0_reset

 _Adc_isr (ROOT)
   _Adc_process
     _lcd_gotoxy
       _i_write
         _LCDBusy
         _Write_PortA
           _SPI_send
         _Write_PortB
           _SPI_send
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _lcd_putc
                     _d_write
                       _LCDBusy
                       _Write_PortA
                         _SPI_send
                       _Write_PortB
                         _SPI_send
                     _lcd_cls
                       _i_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
                     _lcd_gotoxy
                       _i_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
               _fputs
                 _fputc
                   _putch
                     _lcd_putc
                       _d_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
                       _lcd_cls
                         _i_write
                           _LCDBusy
                           _Write_PortA
                             _SPI_send
                           _Write_PortB
                             _SPI_send
                       _lcd_gotoxy
                         _i_write
                           _LCDBusy
                           _Write_PortA
                             _SPI_send
                           _Write_PortB
                             _SPI_send
               _strlen
           _fputc
             _putch
               _lcd_putc
                 _d_write
                   _LCDBusy
                   _Write_PortA
                     _SPI_send
                   _Write_PortB
                     _SPI_send
                 _lcd_cls
                   _i_write
                     _LCDBusy
                     _Write_PortA
                       _SPI_send
                     _Write_PortB
                       _SPI_send
                 _lcd_gotoxy
                   _i_write
                     _LCDBusy
                     _Write_PortA
                       _SPI_send
                     _Write_PortB
                       _SPI_send

 _timer0_isr (ROOT)
   _timer_process
   i2_timer0_reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      48       5       45.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      32        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 03 14:27:52 2019

                     l59 1BC4                       bsr 000FE0              _Adc_process 1934  
            __CFG_OSC$HS 000000                      _abs 19A8     __size_of_Write_PortA 001A  
   __size_of_Write_PortB 001A                      _pad 169C                      prod 000FF3  
                    wreg 000FE8          __end_of_LCDBusy 1BF4             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_abs 0013                     l1821 18CA  
                   l1845 1A92                     l1875 186E                     ?_pad 0019  
                   l1889 189E                     _CKE1 007E3E                     STR_1 1041  
                   STR_2 104F                     u1127 177A                     u1137 1A94  
                   i1l50 0066                     _TMR0 000FD6                     abs@a 0013  
                   _dbuf 0069                     _main 1BB8                     _dtoa 1054  
                   _prec 0064                     _nout 0060                     pad@i 0020  
                   pad@p 001D                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0022  
                   fsr2l 000FD9                     btemp 005F          __end_of_Adc_isr 009E  
         ??_lcd_download 00A3                     prodh 000FF4                     prodl 000FF3  
                   start 009E             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 001F          ??_timer_process 0001          __end_of___aodiv 1578  
                  ?_main 0001                    ?_dtoa 0024          __end_of___aomod 169C  
                  _T0CON 000FD5                    _LATA2 007C4A                    _LATF6 007C76  
                  i1l102 1B9E                    i1l226 16CC                    i1l237 10C8  
                  i1l239 10D0                    i2l199 1AC4                    i1l949 19D0  
           vfpfcnvrt@fmt 004A           i2_timer0_reset 1BA8          __end_of_dhbkstr 1041  
        __end_of_d_write 1A8E          __end_of_lcd_cls 1B74                    _dem3s 005E  
        __end_of_i_write 1A6E                    _adres 0068                    _flags 0066  
                  _fputc 17A2                    _fputs 1970                    pad@fp 0019  
                  _width 0062                    _putch 1BE0                    dtoa@d 0026  
                  dtoa@i 0046                    dtoa@n 003E                    dtoa@p 0038  
                  dtoa@s 003C                    dtoa@w 003A         __end_of_Adc_init 1A4E  
                  tablat 000FF5         __end_of_SPI_init 1BD4         __end_of_SPI_send 1BA8  
          lcd_download@j 00A6                    ttemp5 0060                    ttemp6 0063  
                  ttemp7 0067                    status 000FD8                    wtemp8 0060  
        __initialization 1B16             __end_of_main 1BC6             __end_of_dtoa 129A  
          lcd_gotoxy@col 0089            lcd_gotoxy@row 0004                   ??_main 00A8  
                 ??_dtoa 002E   __end_ofi2_timer0_reset 1BB8            __activetblptr 000003  
              ??_LCDBusy 0001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0009                   ?_fputs 0012  
                 _ADRESH 000FC4                   _ADRESL 000FC3                ??_Adc_isr 0094  
                 ?_putch 0001                   i1l1611 16C4                   i1l1701 1654  
                 i1l1621 171C                   i1l1613 16D6                   i1l1607 16B6  
                 i1l1705 167A                   i1l1545 1AD6                   i1l1561 190E  
                 i1l1617 16EE                   i1l1651 14BE                   i1l1643 1484  
                 i1l1563 1916                   i1l1715 10AA                   i1l1661 151A  
                 i1l1637 145C                   i1l1557 18FA                   i1l1733 10F8  
                 i1l1805 13F8                   i1l1559 1900                   i1l1591 1990  
                 i1l1743 11F0                   i1l1831 1822                   i1l1649 14AA  
                 i1l1665 1530                   i1l1681 15A4                   i1l1577 17BA  
                 i1l1729 10EA                   i1l1833 1848                   i1l1691 15F6  
                 i1l1587 197A                   i1l1595 19E4                   i1l1763 1258  
                 i1l1669 1556                   i1l1685 15C8                   i1l1597 19E8  
                 i1l1767 1270                   i1l1697 163E                   i1l1689 15E2  
                 i1l1795 13D6                   i1l1789 1396                   i1l1799 13E0  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _SSP1IF 007CF3                   _TRISA2 007C92                   _TRISC3 007CA3  
                 _TRISC5 007CA5                   _TRISF6 007CBE         __end_of_lcd_DHBK 18B0  
 __size_of_SPIportA_init 0018   __size_of_SPIportB_init 0018             vfprintf@cfmt 008A  
       __end_of_lcd_init 17A2         __end_of_lcd_putc 1934                ??___aodiv 0011  
              ??___aomod 0011             ?_timer0_init 0001                   clear_0 1B1C  
              ??_d_write 0003                   _printf 1A04                   pad@buf 001B  
                 _tre_ms 1A8E                ??_lcd_cls 0004                   dtoa@fp 0024  
                 _strlen 19DA          ?i2_timer0_reset 0001                ??_i_write 0003  
                 fputc@c 0009                   fputs@c 0016                   fputs@i 0017  
                 fputs@s 0012     __end_of_lcd_download 18F6             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0008         __end_of_vfprintf 1868               __accesstop 0060  
__end_of__initialization 1B24            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_fputc 180E            __end_of_fputs 19A8            __end_of_putch 1BEA  
           ?_Adc_process 0001                ?_Adc_init 0001                ?_SPI_init 0001  
              ?_SPI_send 0001            _SPIportA_init 1B46            _SPIportB_init 1B2E  
                ??_fputc 000D                  ??_fputs 0016                  ??_putch 0008  
             __pbssBANK0 0060             Write_PortB@d 0002            ??_Write_PortA 0002  
          ??_Write_PortB 0002               ??_Adc_init 00A1                  ?_printf 008C  
                ?_tre_ms 00A1               ??_SPI_init 00A1                  ?_strlen 0001  
             ??_SPI_send 0001                  _LCDBusy 1BEA           ?_SPIportA_init 0001  
         ?_SPIportB_init 0001                ?_lcd_DHBK 0001       __size_of_vfpfcnvrt 0196  
                i1u60_20 17B2                  i1u62_20 17FA               _lcd_gotoxy 1AC8  
                i1u80_20 15FA                  i1u72_21 148A                  i1u74_20 14C2  
                i1u90_20 11FE                  i1u83_20 107C                  i1u92_20 1220  
                i1u84_20 107E                  i1u92_21 121E                  i1u69_20 19B6  
                i1u93_20 122E                  i1u94_20 1234                  i1u87_20 10BE  
                i1u96_20 1242                  i1u89_20 10E4                  _SSP1BUF 000FC9  
              ?_lcd_init 0001                  _Adc_isr 0018                ?_lcd_putc 0001  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 1430  
                ___aomod 1578                SPI_send@c 0001                ?_vfprintf 0058  
           __psmallconst 1000    __size_of_lcd_download 0046                  __pcinit 1B16  
                __ramtop 1000                  _dhbkstr 1001                  _d_write 1A6E  
   __size_of_timer0_init 0014            ?_timer0_reset 0001                  __ptext0 1BB8  
                __ptext1 1B74                  __ptext2 1B88                  __ptext3 1736  
                __ptext4 1A8E                  __ptext5 1868                  __ptext6 18B0  
                __ptext7 1B2E                  __ptext8 1B46                  __ptext9 1BC6  
                _lcd_cls 1B5E          __size_of_printf 0028          __size_of_tre_ms 001E  
  __end_of_timer_process 1BE0                  _i_write 1A4E          __size_of_strlen 002A  
           __size_of_abs 0032             __size_of_pad 009A               ??_lcd_DHBK 00A7  
    __end_of_Write_PortA 1B16      __end_of_Write_PortB 1AFC               ??_lcd_init 00A8  
         __pintcode_body 1AAC               ??_lcd_putc 0005     end_of_initialization 1B24  
                fputc@fp 000B                  int_func 1AAC                  fputs@fp 0014  
           _lcd_download 18B0        __end_of_vfpfcnvrt 1430                  postdec2 000FDD  
             _timer0_isr 0008                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE         ??i2_timer0_reset 0001               ??_vfprintf 005E  
                strlen@a 0003                  strlen@s 0001           ??_timer0_reset 00A1  
        ??_SPIportA_init 00A1          ??_SPIportB_init 00A1     __size_of_Adc_process 003C  
              _TRISAbits 000F92                _TRISFbits 000F97              ?_lcd_gotoxy 0089  
            vfpfcnvrt@ap 004C              vfpfcnvrt@fp 0048              vfpfcnvrt@ll 0050  
            tre_ms@p10ms 00A1              _Write_PortA 1AFC              _Write_PortB 1AE2  
         __end_of_printf 1A2C           __end_of_tre_ms 1AAC        __size_of_Adc_init 0022  
         __end_of_strlen 1A04      start_initialization 1B16        __size_of_SPI_init 000E  
      __size_of_SPI_send 0010              __end_of_abs 19DA              __end_of_pad 1736  
            vfprintf@fmt 005A              ?_timer0_isr 0001      __size_of_lcd_gotoxy 001A  
               ??_printf 005E                 ??_tre_ms 00A3                 ??_strlen 0003  
               ?_LCDBusy 0001              __pbssCOMRAM 005E            __pcstackBANK0 0089  
       ___aodiv@dividend 0001        __size_of_lcd_DHBK 0048                 ?_Adc_isr 0001  
      __size_of_lcd_init 006C     __end_of_timer0_reset 1B98        __size_of_lcd_putc 003E  
              __pintcode 0008                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013              __pintcodelo 0018                 ?_d_write 0001  
      __size_of_vfprintf 005A                 ?_lcd_cls 0001                 ?_i_write 0001  
            __smallconst 1000          Write_PortA@mask 0002           __size_of_fputc 006C  
         __size_of_fputs 0038      __size_of_timer0_isr 1AC0           __size_of_putch 000A  
              lcd_DHBK@i 00A7                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               i1u100_20 1318                 i1u114_27 1B6A                 i1u115_27 1BEC  
               _PIR1bits 000F9E                 _RCONbits 000FD0                 _SSP1CON1 000FC6  
          ??_timer0_init 00A1                _vfpfcnvrt 129A                 _Adc_init 1A2C  
             _ADCON0bits 000FC2                 _SPI_init 1BC6                 _SPI_send 1B98  
              lcd_putc@c 0007         __size_of_LCDBusy 000A             ??_lcd_gotoxy 0004  
            _INTCON2bits 000FF1         __size_of_Adc_isr 0086   __size_of_timer_process 000C  
               __Hrparam 0000               vfprintf@ap 005C                 __Lrparam 0000  
             vfprintf@fp 0058       __end_of_lcd_gotoxy 1AE2         __size_of___aodiv 0148  
       __size_of___aomod 0124               ?_vfpfcnvrt 0048            ??_Adc_process 005E  
           ?_Write_PortA 0001             ?_Write_PortB 0001          ___aodiv@divisor 0009  
        ___aodiv@counter 0011         __size_of_d_write 0020         __size_of_lcd_cls 0016  
    __end_of_timer0_init 1B88    __end_of_SPIportA_init 1B5E         __size_of_i_write 0020  
  __end_of_SPIportB_init 1B46                 _lcd_DHBK 1868                 _dtoa$739 0036  
               __ptext10 1A2C                 __ptext20 17A2                 __ptext12 1934  
               __ptext21 1BE0                 __ptext13 1A04                 __ptext30 1BEA  
               __ptext22 18F6                 __ptext14 180E                 __ptext31 19A8  
               __ptext23 1AC8                 __ptext15 129A                 __ptext32 1578  
               __ptext24 1B5E                 __ptext16 1054                 __ptext33 1430  
               __ptext25 1A4E                 __ptext17 169C                 __ptext26 1A6E  
               __ptext18 19DA                 __ptext35 1BA8                 __ptext27 1AE2  
               __ptext19 1970                 __ptext36 1BD4                 __ptext28 1AFC  
               __ptext29 1B98    __size_of_timer0_reset 0010                 _lcd_init 1736  
               _lcd_putc 18F6            __size_of_main 000E            __size_of_dtoa 0246  
               d_write@d 0003             ??_timer0_isr 0001                 int$flags 005F  
               _vfprintf 180E                printf@fmt 008C                 i_write@d 0003  
       ___aomod@dividend 0001             _timer0_reset 1B88            _timer_process 1BD4  
             _INTCONbits 000FF2  __size_ofi2_timer0_reset 0010      __end_of_Adc_process 1970  
               intlevel1 0000                 intlevel2 0000       __end_of_timer0_isr 1AC8  
               printf@ap 0092              _timer0_init 1B74         lcd_download@addr 00A5  
       lcd_download@data 00A1          ___aomod@divisor 0009              ??_vfpfcnvrt 004E  
        ___aomod@counter 0011           ?_timer_process 0001             ___aodiv@sign 0012  
          ?_lcd_download 00A1             ___aomod@sign 0012  
