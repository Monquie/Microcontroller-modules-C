

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Nov 19 14:46:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F8722 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	smallconst
    89  001000                     __psmallconst:
    90                           	opt callstack 0
    91  001000  00                 	db	0
    92  001001                     _dhbkstr:
    93                           	opt callstack 0
    94  001001  0F                 	db	15
    95  001002  0F                 	db	15
    96  001003  0E                 	db	14
    97  001004  1F                 	db	31
    98  001005  0E                 	db	14
    99  001006  0F                 	db	15
   100  001007  0F                 	db	15
   101  001008  00                 	db	0
   102  001009  1E                 	db	30
   103  00100A  1F                 	db	31
   104  00100B  07                 	db	7
   105  00100C  07                 	db	7
   106  00100D  07                 	db	7
   107  00100E  1F                 	db	31
   108  00100F  1E                 	db	30
   109  001010  00                 	db	0
   110  001011  1C                 	db	28
   111  001012  1C                 	db	28
   112  001013  1C                 	db	28
   113  001014  1F                 	db	31
   114  001015  1F                 	db	31
   115  001016  1C                 	db	28
   116  001017  1C                 	db	28
   117  001018  00                 	db	0
   118  001019  07                 	db	7
   119  00101A  07                 	db	7
   120  00101B  07                 	db	7
   121  00101C  1F                 	db	31
   122  00101D  1F                 	db	31
   123  00101E  07                 	db	7
   124  00101F  07                 	db	7
   125  001020  00                 	db	0
   126  001021  1F                 	db	31
   127  001022  1C                 	db	28
   128  001023  1C                 	db	28
   129  001024  1F                 	db	31
   130  001025  1C                 	db	28
   131  001026  1F                 	db	31
   132  001027  1F                 	db	31
   133  001028  00                 	db	0
   134  001029  18                 	db	24
   135  00102A  1C                 	db	28
   136  00102B  1C                 	db	28
   137  00102C  1E                 	db	30
   138  00102D  07                 	db	7
   139  00102E  1F                 	db	31
   140  00102F  1E                 	db	30
   141  001030  00                 	db	0
   142  001031  1C                 	db	28
   143  001032  1D                 	db	29
   144  001033  1F                 	db	31
   145  001034  1F                 	db	31
   146  001035  1E                 	db	30
   147  001036  1C                 	db	28
   148  001037  1C                 	db	28
   149  001038  00                 	db	0
   150  001039  1C                 	db	28
   151  00103A  18                 	db	24
   152  00103B  10                 	db	16
   153  00103C  18                 	db	24
   154  00103D  1C                 	db	28
   155  00103E  0E                 	db	14
   156  00103F  07                 	db	7
   157  001040  00                 	db	0
   158  001041                     __end_of_dhbkstr:
   159                           	opt callstack 0
   160  0000                     _TMR0	set	4054
   161  0000                     _ADRESL	set	4035
   162  0000                     _ADCON0bits	set	4034
   163  0000                     _PIE1bits	set	3997
   164  0000                     _PIR1bits	set	3998
   165  0000                     _IPR1bits	set	3999
   166  0000                     _ADCON2	set	4032
   167  0000                     _ADCON1	set	4033
   168  0000                     _ADCON0	set	4034
   169  0000                     _TRISAbits	set	3986
   170  0000                     _T0CON	set	4053
   171  0000                     _INTCONbits	set	4082
   172  0000                     _INTCON2bits	set	4081
   173  0000                     _RCONbits	set	4048
   174  0000                     _SSP1BUF	set	4041
   175  0000                     _SSP1CON1	set	4038
   176  0000                     _TMR0IE	set	32661
   177  0000                     _TMR0ON	set	32431
   178  0000                     _TMR0IF	set	32658
   179  0000                     _LATF6	set	31862
   180  0000                     _TRISF6	set	31934
   181  0000                     _TRISA2	set	31890
   182  0000                     _LATA2	set	31818
   183  0000                     _SSP1IF	set	31987
   184  0000                     _CKE1	set	32318
   185  0000                     _TRISC3	set	31907
   186  0000                     _TRISC5	set	31909
   187  001041                     STR_1:
   188  001041  41                 	db	65	;'A'
   189  001042  44                 	db	68	;'D'
   190  001043  20                 	db	32
   191  001044  43                 	db	67	;'C'
   192  001045  4F                 	db	79	;'O'
   193  001046  4E                 	db	78	;'N'
   194  001047  56                 	db	86	;'V'
   195  001048  45                 	db	69	;'E'
   196  001049  52                 	db	82	;'R'
   197  00104A  53                 	db	83	;'S'
   198  00104B  49                 	db	73	;'I'
   199  00104C  4F                 	db	79	;'O'
   200  00104D  4E                 	db	78	;'N'
   201  00104E  00                 	db	0
   202  00104F                     STR_2:
   203  00104F  25                 	db	37
   204  001050  64                 	db	100	;'d'
   205  001051  00                 	db	0
   206                           
   207                           ; #config settings
   208  001052  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  001B16                     __pcinit:
   212                           	opt callstack 0
   213  001B16                     start_initialization:
   214                           	opt callstack 0
   215  001B16                     __initialization:
   216                           	opt callstack 0
   217                           
   218                           ; Clear objects allocated to BANK0 (41 bytes)
   219  001B16  EE00  F060         	lfsr	0,__pbssBANK0
   220  001B1A  0E29               	movlw	41
   221  001B1C                     clear_0:
   222  001B1C  6AEE               	clrf	postinc0,c
   223  001B1E  06E8               	decf	wreg,f,c
   224  001B20  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to COMRAM (1 bytes)
   227  001B22  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   228  001B24                     end_of_initialization:
   229                           	opt callstack 0
   230  001B24                     __end_of__initialization:
   231                           	opt callstack 0
   232  001B24  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   233  001B26  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   234  001B28  0100               	movlb	0
   235  001B2A  EFDC  F00D         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238  00005E                     __pbssCOMRAM:
   239                           	opt callstack 0
   240  00005E                     _dem1s:
   241                           	opt callstack 0
   242  00005E                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245  000060                     __pbssBANK0:
   246                           	opt callstack 0
   247  000060                     _nout:
   248                           	opt callstack 0
   249  000060                     	ds	2
   250  000062                     _width:
   251                           	opt callstack 0
   252  000062                     	ds	2
   253  000064                     _prec:
   254                           	opt callstack 0
   255  000064                     	ds	2
   256  000066                     _flags:
   257                           	opt callstack 0
   258  000066                     	ds	2
   259  000068                     _adres:
   260                           	opt callstack 0
   261  000068                     	ds	1
   262  000069                     _dbuf:
   263                           	opt callstack 0
   264  000069                     	ds	32
   265                           
   266                           	psect	cstackBANK0
   267  000089                     __pcstackBANK0:
   268                           	opt callstack 0
   269  000089                     lcd_gotoxy@col:
   270                           	opt callstack 0
   271                           
   272                           ; 1 bytes @ 0x0
   273  000089                     	ds	1
   274  00008A                     vfprintf@cfmt:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x1
   278  00008A                     	ds	2
   279  00008C                     ?_printf:
   280                           	opt callstack 0
   281  00008C                     printf@fmt:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x3
   285  00008C                     	ds	6
   286  000092                     printf@ap:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0x9
   290  000092                     	ds	2
   291  000094                     ??_Adc_isr:
   292                           
   293                           ; 1 bytes @ 0xB
   294  000094                     	ds	11
   295  00009F                     tre_ms@p10ms:
   296                           	opt callstack 0
   297  00009F                     lcd_download@data:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x16
   301  00009F                     	ds	2
   302  0000A1                     ??_lcd_download:
   303                           
   304                           ; 1 bytes @ 0x18
   305  0000A1                     	ds	2
   306  0000A3                     lcd_download@addr:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x1A
   310  0000A3                     	ds	1
   311  0000A4                     lcd_download@j:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x1B
   315  0000A4                     	ds	1
   316  0000A5                     lcd_DHBK@i:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x1C
   320  0000A5                     	ds	1
   321  0000A6                     
   322                           ; 1 bytes @ 0x1D
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	opt callstack 0
   327  000001                     ?_strlen:
   328                           	opt callstack 0
   329  000001                     ?___aodiv:
   330                           	opt callstack 0
   331  000001                     ?___aomod:
   332                           	opt callstack 0
   333  000001                     SPI_send@c:
   334                           	opt callstack 0
   335  000001                     strlen@s:
   336                           	opt callstack 0
   337  000001                     ___aodiv@dividend:
   338                           	opt callstack 0
   339  000001                     ___aomod@dividend:
   340                           	opt callstack 0
   341                           
   342                           ; 8 bytes @ 0x0
   343  000001                     	ds	1
   344  000002                     Write_PortB@d:
   345                           	opt callstack 0
   346  000002                     Write_PortA@mask:
   347                           	opt callstack 0
   348                           
   349                           ; 1 bytes @ 0x1
   350  000002                     	ds	1
   351  000003                     i_write@d:
   352                           	opt callstack 0
   353  000003                     d_write@d:
   354                           	opt callstack 0
   355  000003                     strlen@a:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359  000003                     	ds	1
   360  000004                     ??_lcd_cls:
   361  000004                     lcd_gotoxy@row:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x3
   365  000004                     	ds	1
   366  000005                     ??_lcd_putc:
   367                           
   368                           ; 1 bytes @ 0x4
   369  000005                     	ds	2
   370  000007                     lcd_putc@c:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0x6
   374  000007                     	ds	1
   375  000008                     putch@c:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x7
   379  000008                     	ds	1
   380  000009                     fputc@c:
   381                           	opt callstack 0
   382  000009                     ___aodiv@divisor:
   383                           	opt callstack 0
   384  000009                     ___aomod@divisor:
   385                           	opt callstack 0
   386                           
   387                           ; 8 bytes @ 0x8
   388  000009                     	ds	2
   389  00000B                     fputc@fp:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0xA
   393  00000B                     	ds	2
   394  00000D                     ??_fputc:
   395                           
   396                           ; 1 bytes @ 0xC
   397  00000D                     	ds	4
   398  000011                     ___aodiv@counter:
   399                           	opt callstack 0
   400  000011                     ___aomod@counter:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0x10
   404  000011                     	ds	1
   405  000012                     ___aodiv@sign:
   406                           	opt callstack 0
   407  000012                     ___aomod@sign:
   408                           	opt callstack 0
   409  000012                     fputs@s:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x11
   413  000012                     	ds	1
   414  000013                     ?_abs:
   415                           	opt callstack 0
   416  000013                     abs@a:
   417                           	opt callstack 0
   418  000013                     ___aodiv@quotient:
   419                           	opt callstack 0
   420                           
   421                           ; 8 bytes @ 0x12
   422  000013                     	ds	1
   423  000014                     fputs@fp:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x13
   427  000014                     	ds	1
   428  000015                     ??_abs:
   429                           
   430                           ; 1 bytes @ 0x14
   431  000015                     	ds	1
   432  000016                     fputs@c:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x15
   436  000016                     	ds	1
   437  000017                     fputs@i:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  000017                     	ds	2
   442  000019                     ?_pad:
   443                           	opt callstack 0
   444  000019                     pad@fp:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0x18
   448  000019                     	ds	2
   449  00001B                     pad@buf:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x1A
   453  00001B                     	ds	2
   454  00001D                     pad@p:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x1C
   458  00001D                     	ds	2
   459  00001F                     ??_pad:
   460                           
   461                           ; 1 bytes @ 0x1E
   462  00001F                     	ds	1
   463  000020                     pad@i:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x1F
   467  000020                     	ds	2
   468  000022                     pad@w:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x21
   472  000022                     	ds	2
   473  000024                     ?_dtoa:
   474                           	opt callstack 0
   475  000024                     dtoa@fp:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x23
   479  000024                     	ds	2
   480  000026                     dtoa@d:
   481                           	opt callstack 0
   482                           
   483                           ; 8 bytes @ 0x25
   484  000026                     	ds	8
   485  00002E                     ??_dtoa:
   486                           
   487                           ; 1 bytes @ 0x2D
   488  00002E                     	ds	8
   489  000036                     _dtoa$685:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x35
   493  000036                     	ds	2
   494  000038                     dtoa@p:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x37
   498  000038                     	ds	2
   499  00003A                     dtoa@w:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x39
   503  00003A                     	ds	2
   504  00003C                     dtoa@s:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x3B
   508  00003C                     	ds	2
   509  00003E                     dtoa@n:
   510                           	opt callstack 0
   511                           
   512                           ; 8 bytes @ 0x3D
   513  00003E                     	ds	8
   514  000046                     dtoa@i:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x45
   518  000046                     	ds	2
   519  000048                     ?_vfpfcnvrt:
   520                           	opt callstack 0
   521  000048                     vfpfcnvrt@fp:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x47
   525  000048                     	ds	2
   526  00004A                     vfpfcnvrt@fmt:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x49
   530  00004A                     	ds	2
   531  00004C                     vfpfcnvrt@ap:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x4B
   535  00004C                     	ds	2
   536  00004E                     ??_vfpfcnvrt:
   537                           
   538                           ; 1 bytes @ 0x4D
   539  00004E                     	ds	2
   540  000050                     vfpfcnvrt@ll:
   541                           	opt callstack 0
   542                           
   543                           ; 8 bytes @ 0x4F
   544  000050                     	ds	8
   545  000058                     ?_vfprintf:
   546                           	opt callstack 0
   547  000058                     vfprintf@fp:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x57
   551  000058                     	ds	2
   552  00005A                     vfprintf@fmt:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x59
   556  00005A                     	ds	2
   557  00005C                     vfprintf@ap:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x5B
   561  00005C                     	ds	2
   562  00005E                     
   563                           ; 1 bytes @ 0x5D
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 58 in file "Tn08_Timer.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels required when called:   25
   589 ;; This function calls:
   590 ;;		_Adc_init
   591 ;;		_lcd_init
   592 ;;		_timer0_init
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text0
   599  001BB8                     __ptext0:
   600                           	opt callstack 0
   601  001BB8                     _main:
   602                           	opt callstack 6
   603                           
   604                           ;Tn08_Timer.c: 60:     lcd_init();
   605                           
   606                           ;incstack = 0
   607  001BB8  EC9B  F00B         	call	_lcd_init	;wreg free
   608                           
   609                           ;Tn08_Timer.c: 61:     Adc_init();
   610  001BBC  EC16  F00D         	call	_Adc_init	;wreg free
   611                           
   612                           ;Tn08_Timer.c: 62:     timer0_init();
   613  001BC0  ECBA  F00D         	call	_timer0_init	;wreg free
   614  001BC4                     l194:
   615  001BC4  D7FF               	goto	l194
   616  001BC6                     __end_of_main:
   617                           	opt callstack 0
   618                           
   619 ;; *************** function _timer0_init *****************
   620 ;; Defined at:
   621 ;;		line 5 in file "Timer.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:   18
   642 ;; This function calls:
   643 ;;		_timer0_reset
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text1
   650  001B74                     __ptext1:
   651                           	opt callstack 0
   652  001B74                     _timer0_init:
   653                           	opt callstack 12
   654                           
   655                           ;Timer.c: 7:     RCONbits.IPEN =1;
   656                           
   657                           ;incstack = 0
   658  001B74  8ED0               	bsf	4048,7,c	;volatile
   659                           
   660                           ;Timer.c: 8:     INTCON2bits.TMR0IP = 0;
   661  001B76  94F1               	bcf	4081,2,c	;volatile
   662                           
   663                           ;Timer.c: 9:     INTCONbits.TMR0IE = 1;
   664  001B78  8AF2               	bsf	4082,5,c	;volatile
   665                           
   666                           ;Timer.c: 10:     INTCONbits.GIEH = 1;
   667  001B7A  8EF2               	bsf	4082,7,c	;volatile
   668                           
   669                           ;Timer.c: 11:     INTCONbits.GIEL = 1;
   670  001B7C  8CF2               	bsf	4082,6,c	;volatile
   671                           
   672                           ;Timer.c: 12:     T0CON =0b000;
   673  001B7E  0E00               	movlw	0
   674  001B80  6ED5               	movwf	4053,c	;volatile
   675                           
   676                           ;Timer.c: 13:     timer0_reset();
   677  001B82  ECC4  F00D         	call	_timer0_reset	;wreg free
   678  001B86  0012               	return		;funcret
   679  001B88                     __end_of_timer0_init:
   680                           	opt callstack 0
   681                           
   682 ;; *************** function _timer0_reset *****************
   683 ;; Defined at:
   684 ;;		line 15 in file "Timer.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:   17
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_timer0_init
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text2
   713  001B88                     __ptext2:
   714                           	opt callstack 0
   715  001B88                     _timer0_reset:
   716                           	opt callstack 12
   717                           
   718                           ;Timer.c: 17:     TMR0IF = 0;
   719                           
   720                           ;incstack = 0
   721  001B88  94F2               	bcf	4082,2,c	;volatile
   722                           
   723                           ;Timer.c: 18:     TMR0ON = 0;
   724  001B8A  9ED5               	bcf	4053,7,c	;volatile
   725                           
   726                           ;Timer.c: 19:     TMR0 = -12500;
   727  001B8C  0ECF               	movlw	207
   728  001B8E  6ED7               	movwf	4055,c	;volatile
   729  001B90  0E2C               	movlw	44
   730  001B92  6ED6               	movwf	4054,c	;volatile
   731                           
   732                           ;Timer.c: 20:     TMR0ON = 1;
   733  001B94  8ED5               	bsf	4053,7,c	;volatile
   734  001B96  0012               	return		;funcret
   735  001B98                     __end_of_timer0_reset:
   736                           	opt callstack 0
   737                           
   738 ;; *************** function _lcd_init *****************
   739 ;; Defined at:
   740 ;;		line 110 in file "LCD.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:   24
   761 ;; This function calls:
   762 ;;		_SPI_init
   763 ;;		_SPIportA_init
   764 ;;		_SPIportB_init
   765 ;;		_i_write
   766 ;;		_lcd_DHBK
   767 ;;		_lcd_cls
   768 ;;		_tre_ms
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text3
   775  001736                     __ptext3:
   776                           	opt callstack 0
   777  001736                     _lcd_init:
   778                           	opt callstack 6
   779                           
   780                           ;incstack = 0
   781  001736  9492               	bcf	3986,2,c	;volatile
   782  001738  9C97               	bcf	3991,6,c	;volatile
   783  00173A  8489               	bsf	3977,2,c	;volatile
   784  00173C  9C8E               	bcf	3982,6,c	;volatile
   785  00173E  D000               	nop2		;2 cycle nop
   786  001740  D000               	nop2		;2 cycle nop
   787  001742  8C8E               	bsf	3982,6,c	;volatile
   788  001744  ECE3  F00D         	call	_SPI_init	;wreg free
   789  001748  ECA3  F00D         	call	_SPIportA_init	;wreg free
   790  00174C  EC97  F00D         	call	_SPIportB_init	;wreg free
   791  001750  0E00               	movlw	0
   792  001752  0100               	movlb	0	; () banked
   793  001754  6FA0               	movwf	(tre_ms@p10ms+1)& (0+255),b
   794  001756  0E3C               	movlw	60
   795  001758  6F9F               	movwf	tre_ms@p10ms& (0+255),b
   796  00175A  EC47  F00D         	call	_tre_ms	;wreg free
   797  00175E  0E30               	movlw	48
   798  001760  EC27  F00D         	call	_i_write
   799  001764  0E00               	movlw	0
   800  001766  0100               	movlb	0	; () banked
   801  001768  6FA0               	movwf	(tre_ms@p10ms+1)& (0+255),b
   802  00176A  0E29               	movlw	41
   803  00176C  6F9F               	movwf	tre_ms@p10ms& (0+255),b
   804  00176E  EC47  F00D         	call	_tre_ms	;wreg free
   805  001772  0E30               	movlw	48
   806  001774  EC27  F00D         	call	_i_write
   807  001778  0E34               	movlw	52
   808  00177A                     u1127:
   809  00177A  2EE8               	decfsz	wreg,f,c
   810  00177C  D7FE               	bra	u1127
   811  00177E  D000               	nop2	
   812  001780  0E30               	movlw	48
   813  001782  EC27  F00D         	call	_i_write
   814  001786  0E38               	movlw	56
   815  001788  EC27  F00D         	call	_i_write
   816  00178C  0E0C               	movlw	12
   817  00178E  EC27  F00D         	call	_i_write
   818  001792  0E06               	movlw	6
   819  001794  EC27  F00D         	call	_i_write
   820  001798  ECAF  F00D         	call	_lcd_cls	;wreg free
   821  00179C  EC34  F00C         	call	_lcd_DHBK	;wreg free
   822  0017A0  0012               	return		;funcret
   823  0017A2                     __end_of_lcd_init:
   824                           	opt callstack 0
   825                           
   826 ;; *************** function _tre_ms *****************
   827 ;; Defined at:
   828 ;;		line 23 in file "LCD.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  p10ms           2   22[BANK0 ] unsigned int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:   17
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_lcd_init
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857  001A8E                     __ptext4:
   858                           	opt callstack 0
   859  001A8E                     _tre_ms:
   860                           	opt callstack 12
   861                           
   862                           ;LCD.c: 23: void tre_ms(unsigned int p10ms);LCD.c: 24: { for(;p10ms>0;p10ms--) _delay(25
      +                          0);}
   863                           
   864                           ;incstack = 0
   865  001A8E  0100               	movlb	0	; () banked
   866  001A90  D008               	goto	L1
   867  001A92                     l1837:
   868                           
   869                           ; BSR set to: 0
   870  001A92  0E53               	movlw	83
   871  001A94                     u1137:
   872  001A94  2EE8               	decfsz	wreg,f,c
   873  001A96  D7FE               	bra	u1137
   874  001A98  F000               	nop	
   875  001A9A  0100               	movlb	0	; () banked
   876  001A9C  079F               	decf	tre_ms@p10ms& (0+255),f,b
   877  001A9E  A0D8               	btfss	status,0,c
   878  001AA0  07A0               	decf	(tre_ms@p10ms+1)& (0+255),f,b
   879  001AA2                     L1:
   880  001AA2  519F               	movf	tre_ms@p10ms& (0+255),w,b
   881  001AA4  11A0               	iorwf	(tre_ms@p10ms+1)& (0+255),w,b
   882  001AA6  B4D8               	btfsc	status,2,c
   883  001AA8  0012               	return	
   884  001AAA  D7F3               	goto	l1837
   885  001AAC                     __end_of_tre_ms:
   886                           	opt callstack 0
   887                           
   888 ;; *************** function _lcd_DHBK *****************
   889 ;; Defined at:
   890 ;;		line 149 in file "LCD.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  i               1   28[BANK0 ] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;Total ram usage:        1 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:   23
   911 ;; This function calls:
   912 ;;		_lcd_download
   913 ;;		_lcd_gotoxy
   914 ;;		_putch
   915 ;; This function is called by:
   916 ;;		_lcd_init
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text5
   921  001868                     __ptext5:
   922                           	opt callstack 0
   923  001868                     _lcd_DHBK:
   924                           	opt callstack 6
   925                           
   926                           ; BSR set to: 0
   927                           ;incstack = 0
   928  001868  0E00               	movlw	0
   929  00186A  0100               	movlb	0	; () banked
   930  00186C  6FA5               	movwf	lcd_DHBK@i& (0+255),b
   931  00186E                     l1867:
   932                           
   933                           ; BSR set to: 0
   934  00186E  51A5               	movf	lcd_DHBK@i& (0+255),w,b
   935  001870  0D08               	mullw	8
   936  001872  0E01               	movlw	low _dhbkstr
   937  001874  24F3               	addwf	prodl,w,c
   938  001876  6F9F               	movwf	lcd_download@data& (0+255),b
   939  001878  0E10               	movlw	high _dhbkstr
   940  00187A  20F4               	addwfc	prodh,w,c
   941  00187C  6FA0               	movwf	(lcd_download@data+1)& (0+255),b
   942  00187E  51A5               	movf	lcd_DHBK@i& (0+255),w,b
   943  001880  EC58  F00C         	call	_lcd_download
   944  001884  0100               	movlb	0	; () banked
   945  001886  2BA5               	incf	lcd_DHBK@i& (0+255),f,b
   946                           
   947                           ; BSR set to: 0
   948  001888  0E07               	movlw	7
   949  00188A  65A5               	cpfsgt	lcd_DHBK@i& (0+255),b
   950  00188C  D7F0               	goto	l1867
   951                           
   952                           ; BSR set to: 0
   953  00188E  0E08               	movlw	8
   954  001890  6F89               	movwf	lcd_gotoxy@col& (0+255),b
   955  001892  0E01               	movlw	1
   956  001894  EC64  F00D         	call	_lcd_gotoxy
   957  001898  0E00               	movlw	0
   958  00189A  0100               	movlb	0	; () banked
   959  00189C  6FA5               	movwf	lcd_DHBK@i& (0+255),b
   960  00189E                     l1881:
   961                           
   962                           ; BSR set to: 0
   963  00189E  51A5               	movf	lcd_DHBK@i& (0+255),w,b
   964  0018A0  ECF0  F00D         	call	_putch
   965  0018A4  0100               	movlb	0	; () banked
   966  0018A6  2BA5               	incf	lcd_DHBK@i& (0+255),f,b
   967                           
   968                           ; BSR set to: 0
   969  0018A8  0E07               	movlw	7
   970  0018AA  65A5               	cpfsgt	lcd_DHBK@i& (0+255),b
   971  0018AC  D7F8               	goto	l1881
   972  0018AE  0012               	return	
   973  0018B0                     __end_of_lcd_DHBK:
   974                           	opt callstack 0
   975                           
   976 ;; *************** function _lcd_download *****************
   977 ;; Defined at:
   978 ;;		line 101 in file "LCD.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  addr            1    wreg     unsigned char 
   981 ;;  data            2   22[BANK0 ] PTR const unsigned char 
   982 ;;		 -> dhbkstr(64), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  addr            1   26[BANK0 ] unsigned char 
   985 ;;  j               1   27[BANK0 ] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;Total ram usage:        6 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:   20
  1002 ;; This function calls:
  1003 ;;		_d_write
  1004 ;;		_i_write
  1005 ;; This function is called by:
  1006 ;;		_lcd_DHBK
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011  0018B0                     __ptext6:
  1012                           	opt callstack 0
  1013  0018B0                     _lcd_download:
  1014                           	opt callstack 8
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;incstack = 0
  1018                           ;lcd_download@addr stored from wreg
  1019  0018B0  0100               	movlb	0	; () banked
  1020  0018B2  6FA3               	movwf	lcd_download@addr& (0+255),b
  1021  0018B4  0100               	movlb	0	; () banked
  1022  0018B6  51A3               	movf	lcd_download@addr& (0+255),w,b
  1023  0018B8  0D08               	mullw	8
  1024  0018BA  50F3               	movf	prodl,w,c
  1025  0018BC  0B3F               	andlw	63
  1026  0018BE  0940               	iorlw	64
  1027  0018C0  EC27  F00D         	call	_i_write
  1028  0018C4  0E00               	movlw	0
  1029  0018C6  0100               	movlb	0	; () banked
  1030  0018C8  6FA4               	movwf	lcd_download@j& (0+255),b
  1031  0018CA                     l1819:
  1032                           
  1033                           ; BSR set to: 0
  1034  0018CA  51A4               	movf	lcd_download@j& (0+255),w,b
  1035  0018CC  259F               	addwf	lcd_download@data& (0+255),w,b
  1036  0018CE  6FA1               	movwf	??_lcd_download& (0+255),b
  1037  0018D0  0E00               	movlw	0
  1038  0018D2  21A0               	addwfc	(lcd_download@data+1)& (0+255),w,b
  1039  0018D4  6FA2               	movwf	(??_lcd_download+1)& (0+255),b
  1040  0018D6  C0A1  FFF6         	movff	??_lcd_download,tblptrl
  1041  0018DA  C0A2  FFF7         	movff	??_lcd_download+1,tblptrh
  1042  0018DE                     	if	0	;tblptru may be non-zero
  1043  0018DE                     	endif
  1044  0018DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1045  0018DE  0E00               	movlw	low (__mediumconst shr (0+16))
  1046  0018E0  6EF8               	movwf	tblptru,c
  1047  0018E2                     	endif
  1048  0018E2  0008               	tblrd		*
  1049  0018E4  50F5               	movf	tablat,w,c
  1050  0018E6  EC37  F00D         	call	_d_write
  1051  0018EA  0100               	movlb	0	; () banked
  1052  0018EC  2BA4               	incf	lcd_download@j& (0+255),f,b
  1053                           
  1054                           ; BSR set to: 0
  1055  0018EE  0E07               	movlw	7
  1056  0018F0  65A4               	cpfsgt	lcd_download@j& (0+255),b
  1057  0018F2  D7EB               	goto	l1819
  1058  0018F4  0012               	return	
  1059  0018F6                     __end_of_lcd_download:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _SPIportB_init *****************
  1063 ;; Defined at:
  1064 ;;		line 51 in file "LCD.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:   18
  1085 ;; This function calls:
  1086 ;;		_SPI_send
  1087 ;; This function is called by:
  1088 ;;		_lcd_init
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text7
  1093  001B2E                     __ptext7:
  1094                           	opt callstack 0
  1095  001B2E                     _SPIportB_init:
  1096                           	opt callstack 11
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;incstack = 0
  1100  001B2E  9489               	bcf	3977,2,c	;volatile
  1101  001B30  0E40               	movlw	64
  1102  001B32  ECCC  F00D         	call	_SPI_send
  1103  001B36  0E01               	movlw	1
  1104  001B38  ECCC  F00D         	call	_SPI_send
  1105  001B3C  0E00               	movlw	0
  1106  001B3E  ECCC  F00D         	call	_SPI_send
  1107  001B42  8489               	bsf	3977,2,c	;volatile
  1108  001B44  0012               	return		;funcret
  1109  001B46                     __end_of_SPIportB_init:
  1110                           	opt callstack 0
  1111                           
  1112 ;; *************** function _SPIportA_init *****************
  1113 ;; Defined at:
  1114 ;;		line 43 in file "LCD.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:   18
  1135 ;; This function calls:
  1136 ;;		_SPI_send
  1137 ;; This function is called by:
  1138 ;;		_lcd_init
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text8
  1143  001B46                     __ptext8:
  1144                           	opt callstack 0
  1145  001B46                     _SPIportA_init:
  1146                           	opt callstack 11
  1147                           
  1148                           ;incstack = 0
  1149  001B46  9489               	bcf	3977,2,c	;volatile
  1150  001B48  0E40               	movlw	64
  1151  001B4A  ECCC  F00D         	call	_SPI_send
  1152  001B4E  0E00               	movlw	0
  1153  001B50  ECCC  F00D         	call	_SPI_send
  1154  001B54  0E00               	movlw	0
  1155  001B56  ECCC  F00D         	call	_SPI_send
  1156  001B5A  8489               	bsf	3977,2,c	;volatile
  1157  001B5C  0012               	return		;funcret
  1158  001B5E                     __end_of_SPIportA_init:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _SPI_init *****************
  1162 ;; Defined at:
  1163 ;;		line 30 in file "LCD.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:   17
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_lcd_init
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text9
  1192  001BC6                     __ptext9:
  1193                           	opt callstack 0
  1194  001BC6                     _SPI_init:
  1195                           	opt callstack 12
  1196                           
  1197                           ;incstack = 0
  1198  001BC6  9A94               	bcf	3988,5,c	;volatile
  1199  001BC8  9694               	bcf	3988,3,c	;volatile
  1200  001BCA  0E20               	movlw	32
  1201  001BCC  6EC6               	movwf	4038,c	;volatile
  1202  001BCE  8CC7               	bsf	4039,6,c	;volatile
  1203  001BD0  969E               	bcf	3998,3,c	;volatile
  1204  001BD2  0012               	return		;funcret
  1205  001BD4                     __end_of_SPI_init:
  1206                           	opt callstack 0
  1207                           
  1208 ;; *************** function _Adc_init *****************
  1209 ;; Defined at:
  1210 ;;		line 19 in file "Tn08_Timer.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:   17
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text10
  1239  001A2C                     __ptext10:
  1240                           	opt callstack 0
  1241  001A2C                     _Adc_init:
  1242                           	opt callstack 13
  1243                           
  1244                           ;Tn08_Timer.c: 21:     TRISAbits.RA0 = 1;
  1245                           
  1246                           ;incstack = 0
  1247  001A2C  8092               	bsf	3986,0,c	;volatile
  1248                           
  1249                           ;Tn08_Timer.c: 22:     ADCON0 = 0b00000001;
  1250  001A2E  0E01               	movlw	1
  1251  001A30  6EC2               	movwf	4034,c	;volatile
  1252                           
  1253                           ;Tn08_Timer.c: 23:     ADCON1 = 0x0E;
  1254  001A32  0E0E               	movlw	14
  1255  001A34  6EC1               	movwf	4033,c	;volatile
  1256                           
  1257                           ;Tn08_Timer.c: 24:     ADCON2 = 0b10000001;
  1258  001A36  0E81               	movlw	129
  1259  001A38  6EC0               	movwf	4032,c	;volatile
  1260                           
  1261                           ;Tn08_Timer.c: 25:     dem1s = 100;
  1262  001A3A  0E64               	movlw	100
  1263  001A3C  6E5E               	movwf	_dem1s,c
  1264                           
  1265                           ;Tn08_Timer.c: 26:     RCONbits.IPEN = 1;
  1266  001A3E  8ED0               	bsf	4048,7,c	;volatile
  1267                           
  1268                           ;Tn08_Timer.c: 27:     IPR1bits.ADIP = 0;
  1269  001A40  9C9F               	bcf	3999,6,c	;volatile
  1270                           
  1271                           ;Tn08_Timer.c: 28:     PIR1bits.ADIF = 0;
  1272  001A42  9C9E               	bcf	3998,6,c	;volatile
  1273                           
  1274                           ;Tn08_Timer.c: 29:     PIE1bits.ADIE = 1;
  1275  001A44  8C9D               	bsf	3997,6,c	;volatile
  1276                           
  1277                           ;Tn08_Timer.c: 30:     INTCONbits.GIEH = 1;
  1278  001A46  8EF2               	bsf	4082,7,c	;volatile
  1279                           
  1280                           ;Tn08_Timer.c: 31:     INTCONbits.GIEL = 1;
  1281  001A48  8CF2               	bsf	4082,6,c	;volatile
  1282                           
  1283                           ;Tn08_Timer.c: 32:     ADCON0bits.GO = 1;
  1284  001A4A  82C2               	bsf	4034,1,c	;volatile
  1285  001A4C  0012               	return		;funcret
  1286  001A4E                     __end_of_Adc_init:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function _Adc_isr *****************
  1290 ;; Defined at:
  1291 ;;		line 41 in file "Tn08_Timer.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;Total ram usage:       11 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:   16
  1312 ;; This function calls:
  1313 ;;		_Adc_process
  1314 ;; This function is called by:
  1315 ;;		Interrupt level 1
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	intcodelo
  1320  000018                     __pintcodelo:
  1321                           	opt callstack 0
  1322  000018                     _Adc_isr:
  1323                           	opt callstack 6
  1324                           
  1325                           ;incstack = 0
  1326  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1327  00001A  CFD8 F094          	movff	status,??_Adc_isr
  1328  00001E  CFE8 F095          	movff	wreg,??_Adc_isr+1
  1329  000022  CFE0 F096          	movff	bsr,??_Adc_isr+2
  1330  000026  CFE1 F097          	movff	fsr1l,??_Adc_isr+3
  1331  00002A  CFE2 F098          	movff	fsr1h,??_Adc_isr+4
  1332  00002E  CFD9 F099          	movff	fsr2l,??_Adc_isr+5
  1333  000032  CFDA F09A          	movff	fsr2h,??_Adc_isr+6
  1334  000036  CFF6 F09B          	movff	tblptrl,??_Adc_isr+7
  1335  00003A  CFF7 F09C          	movff	tblptrh,??_Adc_isr+8
  1336  00003E  CFF8 F09D          	movff	tblptru,??_Adc_isr+9
  1337  000042  CFF5 F09E          	movff	tablat,??_Adc_isr+10
  1338                           
  1339                           ;Tn08_Timer.c: 43:     if((PIE1bits.ADIE)&&(PIR1bits.ADIF))
  1340  000046  BC9D               	btfsc	3997,6,c	;volatile
  1341  000048  AC9E               	btfss	3998,6,c	;volatile
  1342  00004A  D005               	goto	i1l185
  1343                           
  1344                           ;Tn08_Timer.c: 44:     {;Tn08_Timer.c: 45:         PIR1bits.ADIF = 0;
  1345  00004C  9C9E               	bcf	3998,6,c	;volatile
  1346                           
  1347                           ;Tn08_Timer.c: 46:         adres = ADRESH*256 + ADRESL;
  1348  00004E  CFC3 F068          	movff	4035,_adres	;volatile
  1349                           
  1350                           ;Tn08_Timer.c: 47:         Adc_process();
  1351  000052  EC9A  F00C         	call	_Adc_process	;wreg free
  1352  000056                     i1l185:
  1353  000056  C09E  FFF5         	movff	??_Adc_isr+10,tablat
  1354  00005A  C09D  FFF8         	movff	??_Adc_isr+9,tblptru
  1355  00005E  C09C  FFF7         	movff	??_Adc_isr+8,tblptrh
  1356  000062  C09B  FFF6         	movff	??_Adc_isr+7,tblptrl
  1357  000066  C09A  FFDA         	movff	??_Adc_isr+6,fsr2h
  1358  00006A  C099  FFD9         	movff	??_Adc_isr+5,fsr2l
  1359  00006E  C098  FFE2         	movff	??_Adc_isr+4,fsr1h
  1360  000072  C097  FFE1         	movff	??_Adc_isr+3,fsr1l
  1361  000076  C096  FFE0         	movff	??_Adc_isr+2,bsr
  1362  00007A  C095  FFE8         	movff	??_Adc_isr+1,wreg
  1363  00007E  C094  FFD8         	movff	??_Adc_isr,status
  1364  000082  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1365  000084  0010               	retfie	
  1366  000086                     __end_of_Adc_isr:
  1367                           	opt callstack 0
  1368                           
  1369 ;; *************** function _Adc_process *****************
  1370 ;; Defined at:
  1371 ;;		line 34 in file "Tn08_Timer.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:   15
  1392 ;; This function calls:
  1393 ;;		_lcd_gotoxy
  1394 ;;		_printf
  1395 ;; This function is called by:
  1396 ;;		_Adc_isr
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text12
  1401  001934                     __ptext12:
  1402                           	opt callstack 0
  1403  001934                     _Adc_process:
  1404                           	opt callstack 6
  1405                           
  1406                           ;Tn08_Timer.c: 36:     lcd_gotoxy(0,0);
  1407                           
  1408                           ;incstack = 0
  1409  001934  0E00               	movlw	0
  1410  001936  0100               	movlb	0	; () banked
  1411  001938  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  1412  00193A  0E00               	movlw	0
  1413  00193C  EC64  F00D         	call	_lcd_gotoxy
  1414                           
  1415                           ;Tn08_Timer.c: 37:     printf("AD CONVERSION");
  1416  001940  0E41               	movlw	low STR_1
  1417  001942  0100               	movlb	0	; () banked
  1418  001944  6F8C               	movwf	printf@fmt& (0+255),b
  1419  001946  0E10               	movlw	high STR_1
  1420  001948  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1421  00194A  EC02  F00D         	call	_printf	;wreg free
  1422                           
  1423                           ;Tn08_Timer.c: 38:     lcd_gotoxy(1,0);
  1424  00194E  0E00               	movlw	0
  1425  001950  0100               	movlb	0	; () banked
  1426  001952  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  1427  001954  0E01               	movlw	1
  1428  001956  EC64  F00D         	call	_lcd_gotoxy
  1429                           
  1430                           ;Tn08_Timer.c: 39:     printf("%d",adres);
  1431  00195A  0E4F               	movlw	low STR_2
  1432  00195C  0100               	movlb	0	; () banked
  1433  00195E  6F8C               	movwf	printf@fmt& (0+255),b
  1434  001960  0E10               	movlw	high STR_2
  1435  001962  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1436  001964  C068  F08E         	movff	_adres,?_printf+2
  1437  001968  6B8F               	clrf	(?_printf+3)& (0+255),b
  1438  00196A  EC02  F00D         	call	_printf	;wreg free
  1439  00196E  0012               	return		;funcret
  1440  001970                     __end_of_Adc_process:
  1441                           	opt callstack 0
  1442                           
  1443 ;; *************** function _printf *****************
  1444 ;; Defined at:
  1445 ;;		line 5 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  fmt             2    3[BANK0 ] PTR const unsigned char 
  1448 ;;		 -> STR_2(3), STR_1(14), 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  ap              2    9[BANK0 ] PTR void [1]
  1451 ;;		 -> ?_printf(2), 
  1452 ;;  ret             2    0        int 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2    3[BANK0 ] int 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        8 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:   14
  1469 ;; This function calls:
  1470 ;;		_vfprintf
  1471 ;; This function is called by:
  1472 ;;		_Adc_process
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text13
  1477  001A04                     __ptext13:
  1478                           	opt callstack 0
  1479  001A04                     _printf:
  1480                           	opt callstack 6
  1481                           
  1482                           ;incstack = 0
  1483  001A04  0E8E               	movlw	low (?_printf+2)
  1484  001A06  0100               	movlb	0	; () banked
  1485  001A08  6F92               	movwf	printf@ap& (0+255),b
  1486  001A0A  0E00               	movlw	high (?_printf+2)
  1487  001A0C  6F93               	movwf	(printf@ap+1)& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490  001A0E  0E00               	movlw	0
  1491  001A10  6E58               	movwf	vfprintf@fp,c
  1492  001A12  0E00               	movlw	0
  1493  001A14  6E59               	movwf	vfprintf@fp+1,c
  1494  001A16  C08C  F05A         	movff	printf@fmt,vfprintf@fmt
  1495  001A1A  C08D  F05B         	movff	printf@fmt+1,vfprintf@fmt+1
  1496  001A1E  0E92               	movlw	low printf@ap
  1497  001A20  6E5C               	movwf	vfprintf@ap,c
  1498  001A22  0E00               	movlw	high printf@ap
  1499  001A24  6E5D               	movwf	vfprintf@ap+1,c
  1500  001A26  EC07  F00C         	call	_vfprintf	;wreg free
  1501  001A2A  0012               	return		;funcret
  1502  001A2C                     __end_of_printf:
  1503                           	opt callstack 0
  1504                           
  1505 ;; *************** function _vfprintf *****************
  1506 ;; Defined at:
  1507 ;;		line 1368 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  1510 ;;		 -> NULL(0), 
  1511 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1512 ;;		 -> STR_2(3), STR_1(14), 
  1513 ;;  ap              2   91[COMRAM] PTR PTR void 
  1514 ;;		 -> printf@ap(2), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  cfmt            2    1[BANK0 ] PTR unsigned char 
  1517 ;;		 -> STR_2(3), STR_1(14), 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  2   87[COMRAM] int 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1527 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;Total ram usage:        8 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:   13
  1534 ;; This function calls:
  1535 ;;		_vfpfcnvrt
  1536 ;; This function is called by:
  1537 ;;		_printf
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text14
  1542  00180E                     __ptext14:
  1543                           	opt callstack 0
  1544  00180E                     _vfprintf:
  1545                           	opt callstack 6
  1546                           
  1547                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *
      +                          fp, const char *fmt, va_list ap);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 1369: {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1371:     c
      +                          har *cfmt;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt 
      +                          = (char *)fmt;
  1548                           
  1549                           ;incstack = 0
  1550  00180E  C05A  F08A         	movff	vfprintf@fmt,vfprintf@cfmt
  1551  001812  C05B  F08B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1552                           
  1553                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  1554  001816  0E00               	movlw	0
  1555  001818  0100               	movlb	0	; () banked
  1556  00181A  6F61               	movwf	(_nout+1)& (0+255),b
  1557  00181C  0E00               	movlw	0
  1558  00181E  6F60               	movwf	_nout& (0+255),b
  1559                           
  1560                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1561  001820  D013               	goto	i1l1831
  1562  001822                     i1l1829:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:         nout += vfp
      +                          fcnvrt(fp, &cfmt, ap);
  1566  001822  C058  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1567  001826  C059  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1568  00182A  0E8A               	movlw	low vfprintf@cfmt
  1569  00182C  6E4A               	movwf	vfpfcnvrt@fmt,c
  1570  00182E  0E00               	movlw	high vfprintf@cfmt
  1571  001830  6E4B               	movwf	vfpfcnvrt@fmt+1,c
  1572  001832  C05C  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1573  001836  C05D  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1574  00183A  EC4D  F009         	call	_vfpfcnvrt	;wreg free
  1575  00183E  5048               	movf	?_vfpfcnvrt,w,c
  1576  001840  0100               	movlb	0	; () banked
  1577  001842  2760               	addwf	_nout& (0+255),f,b
  1578  001844  5049               	movf	?_vfpfcnvrt+1,w,c
  1579  001846  2361               	addwfc	(_nout+1)& (0+255),f,b
  1580  001848                     i1l1831:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1584  001848  C08A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1585  00184C  C08B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1586  001850                     	if	0	;tblptru may be non-zero
  1587  001850                     	endif
  1588  001850                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1589  001850  0E00               	movlw	low (__mediumconst shr (0+16))
  1590  001852  6EF8               	movwf	tblptru,c
  1591  001854                     	endif
  1592  001854  0008               	tblrd		*
  1593  001856  50F5               	movf	tablat,w,c
  1594  001858  0900               	iorlw	0
  1595  00185A  A4D8               	btfss	status,2,c
  1596  00185C  D7E2               	goto	i1l1829
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  1600  00185E  C060  F058         	movff	_nout,?_vfprintf
  1601  001862  C061  F059         	movff	_nout+1,?_vfprintf+1
  1602                           
  1603                           ; BSR set to: 0
  1604  001866  0012               	return		;funcret
  1605  001868                     __end_of_vfprintf:
  1606                           	opt callstack 0
  1607                           
  1608 ;; *************** function _vfpfcnvrt *****************
  1609 ;; Defined at:
  1610 ;;		line 670 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1613 ;;		 -> NULL(0), 
  1614 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1615 ;;		 -> vfprintf@cfmt(2), 
  1616 ;;  ap              2   75[COMRAM] PTR PTR void 
  1617 ;;		 -> printf@ap(2), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  ll              8   79[COMRAM] long long 
  1620 ;;  llu             8    0        unsigned long long 
  1621 ;;  f               4    0        unsigned long long 
  1622 ;;  vp              3    0        PTR void 
  1623 ;;  ct              3    0        unsigned char [3]
  1624 ;;  cp              3    0        PTR unsigned char 
  1625 ;;  i               2    0        int 
  1626 ;;  done            2    0        int 
  1627 ;;  c               1    0        unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2   71[COMRAM] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:       16 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:   12
  1644 ;; This function calls:
  1645 ;;		_dtoa
  1646 ;;		_fputc
  1647 ;; This function is called by:
  1648 ;;		_vfprintf
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text15
  1653  00129A                     __ptext15:
  1654                           	opt callstack 0
  1655  00129A                     _vfpfcnvrt:
  1656                           	opt callstack 6
  1657                           
  1658                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt
      +                          (FILE *fp, char *fmt[], va_list ap);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 671: {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 672:     
      +                          char c, *cp, ct[3];;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:  
      +                             int done, i;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     l
      +                          ong long ll;;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 675:     unsi
      +                          gned long long llu;
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;incstack = 0
  1662  00129A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  00129E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  0012A2  CFDE FFF6          	movff	postinc2,tblptrl
  1665  0012A6  CFDD FFF7          	movff	postdec2,tblptrh
  1666  0012AA                     	if	0	;tblptru may be non-zero
  1667  0012AA                     	endif
  1668  0012AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1669  0012AA  0E00               	movlw	low (__mediumconst shr (0+16))
  1670  0012AC  6EF8               	movwf	tblptru,c
  1671  0012AE                     	endif
  1672  0012AE  0008               	tblrd		*
  1673  0012B0  50F5               	movf	tablat,w,c
  1674  0012B2  0A25               	xorlw	37
  1675  0012B4  A4D8               	btfss	status,2,c
  1676  0012B6  D0A0               	goto	i1l1803
  1677                           
  1678                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  1679  0012B8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680  0012BC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681  0012C0  2ADE               	incf	postinc2,f,c
  1682  0012C2  0E00               	movlw	0
  1683  0012C4  22DD               	addwfc	postdec2,f,c
  1684                           
  1685                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:         flags = widt
      +                          h = 0;
  1686  0012C6  0E00               	movlw	0
  1687  0012C8  0100               	movlb	0	; () banked
  1688  0012CA  6F63               	movwf	(_width+1)& (0+255),b
  1689  0012CC  0E00               	movlw	0
  1690  0012CE  6F62               	movwf	_width& (0+255),b
  1691  0012D0  C062  F066         	movff	_width,_flags
  1692  0012D4  C063  F067         	movff	_width+1,_flags+1
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  1696  0012D8  6964               	setf	_prec& (0+255),b
  1697  0012DA  6965               	setf	(_prec+1)& (0+255),b
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0]
      +                           == 'd') || (*fmt[0] == 'i')) {
  1701  0012DC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702  0012E0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703  0012E4  CFDE FFF6          	movff	postinc2,tblptrl
  1704  0012E8  CFDD FFF7          	movff	postdec2,tblptrh
  1705  0012EC                     	if	0	;tblptru may be non-zero
  1706  0012EC                     	endif
  1707  0012EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1708  0012EC  0E00               	movlw	low (__mediumconst shr (0+16))
  1709  0012EE  6EF8               	movwf	tblptru,c
  1710  0012F0                     	endif
  1711  0012F0  0008               	tblrd		*
  1712  0012F2  50F5               	movf	tablat,w,c
  1713  0012F4  0A64               	xorlw	100
  1714  0012F6  B4D8               	btfsc	status,2,c
  1715  0012F8  D00F               	goto	i1u100_20
  1716                           
  1717                           ; BSR set to: 0
  1718  0012FA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719  0012FE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720  001302  CFDE FFF6          	movff	postinc2,tblptrl
  1721  001306  CFDD FFF7          	movff	postdec2,tblptrh
  1722  00130A                     	if	0	;tblptru may be non-zero
  1723  00130A                     	endif
  1724  00130A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1725  00130A  0E00               	movlw	low (__mediumconst shr (0+16))
  1726  00130C  6EF8               	movwf	tblptru,c
  1727  00130E                     	endif
  1728  00130E  0008               	tblrd		*
  1729  001310  50F5               	movf	tablat,w,c
  1730  001312  0A69               	xorlw	105
  1731  001314  A4D8               	btfss	status,2,c
  1732  001316  D03F               	goto	i1l1787
  1733  001318                     i1u100_20:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  1737  001318  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738  00131C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739  001320  2ADE               	incf	postinc2,f,c
  1740  001322  0E00               	movlw	0
  1741  001324  22DD               	addwfc	postdec2,f,c
  1742                           
  1743                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:             ll = (lo
      +                          ng long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1744  001326  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1745  00132A  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1746  00132E  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1747  001332  0E02               	movlw	2
  1748  001334  26DE               	addwf	postinc2,f,c
  1749  001336  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1750  00133A  0E00               	movlw	0
  1751  00133C  22DD               	addwfc	postdec2,f,c
  1752  00133E  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1753  001342  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1754  001346  CFDE F050          	movff	postinc2,vfpfcnvrt@ll
  1755  00134A  CFDD F051          	movff	postdec2,vfpfcnvrt@ll+1
  1756  00134E  0E00               	movlw	0
  1757  001350  BE51               	btfsc	vfpfcnvrt@ll+1,7,c
  1758  001352  0EFF               	movlw	-1
  1759  001354  6E52               	movwf	vfpfcnvrt@ll+2,c
  1760  001356  6E53               	movwf	vfpfcnvrt@ll+3,c
  1761  001358  6E54               	movwf	vfpfcnvrt@ll+4,c
  1762  00135A  6E55               	movwf	vfpfcnvrt@ll+5,c
  1763  00135C  6E56               	movwf	vfpfcnvrt@ll+6,c
  1764  00135E  6E57               	movwf	vfpfcnvrt@ll+7,c
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:             return d
      +                          toa(fp, ll);
  1768  001360  C048  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  1769  001364  C049  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1770  001368  C050  F026         	movff	vfpfcnvrt@ll,dtoa@d
  1771  00136C  C051  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1772  001370  C052  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1773  001374  C053  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1774  001378  C054  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1775  00137C  C055  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1776  001380  C056  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1777  001384  C057  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1778  001388  EC2A  F008         	call	_dtoa	;wreg free
  1779  00138C  C024  F048         	movff	?_dtoa,?_vfpfcnvrt
  1780  001390  C025  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1781  001394  0012               	return	
  1782  001396                     i1l1787:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[
      +                          0] == '%') {
  1786  001396  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  00139A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  00139E  CFDE FFF6          	movff	postinc2,tblptrl
  1789  0013A2  CFDD FFF7          	movff	postdec2,tblptrh
  1790  0013A6                     	if	0	;tblptru may be non-zero
  1791  0013A6                     	endif
  1792  0013A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1793  0013A6  0E00               	movlw	low (__mediumconst shr (0+16))
  1794  0013A8  6EF8               	movwf	tblptru,c
  1795  0013AA                     	endif
  1796  0013AA  0008               	tblrd		*
  1797  0013AC  50F5               	movf	tablat,w,c
  1798  0013AE  0A25               	xorlw	37
  1799  0013B0  A4D8               	btfss	status,2,c
  1800  0013B2  D016               	goto	i1l1797
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  1804  0013B4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805  0013B8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806  0013BC  2ADE               	incf	postinc2,f,c
  1807  0013BE  0E00               	movlw	0
  1808  0013C0  22DD               	addwfc	postdec2,f,c
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:             fputc((
      +                          int)'%', fp);
  1812  0013C2  0E00               	movlw	0
  1813  0013C4  6E0A               	movwf	fputc@c+1,c
  1814  0013C6  0E25               	movlw	37
  1815  0013C8  6E09               	movwf	fputc@c,c
  1816  0013CA  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1817  0013CE  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1818  0013D2  ECD1  F00B         	call	_fputc	;wreg free
  1819  0013D6                     i1l1793:
  1820                           
  1821                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:             return 
      +                          1;
  1822  0013D6  0E00               	movlw	0
  1823  0013D8  6E49               	movwf	?_vfpfcnvrt+1,c
  1824  0013DA  0E01               	movlw	1
  1825  0013DC  6E48               	movwf	?_vfpfcnvrt,c
  1826  0013DE  0012               	return	
  1827  0013E0                     i1l1797:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  1831  0013E0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  0013E4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  0013E8  2ADE               	incf	postinc2,f,c
  1834  0013EA  0E00               	movlw	0
  1835  0013EC  22DD               	addwfc	postdec2,f,c
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  1839  0013EE  0E00               	movlw	0
  1840  0013F0  6E49               	movwf	?_vfpfcnvrt+1,c
  1841  0013F2  0E00               	movlw	0
  1842  0013F4  6E48               	movwf	?_vfpfcnvrt,c
  1843  0013F6  0012               	return	
  1844  0013F8                     i1l1803:
  1845                           
  1846                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fm
      +                          t)[0], fp);
  1847  0013F8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  0013FC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  001400  CFDE FFF6          	movff	postinc2,tblptrl
  1850  001404  CFDD FFF7          	movff	postdec2,tblptrh
  1851  001408                     	if	0	;tblptru may be non-zero
  1852  001408                     	endif
  1853  001408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1854  001408  0E00               	movlw	low (__mediumconst shr (0+16))
  1855  00140A  6EF8               	movwf	tblptru,c
  1856  00140C                     	endif
  1857  00140C  0008               	tblrd		*
  1858  00140E  50F5               	movf	tablat,w,c
  1859  001410  6E09               	movwf	fputc@c,c
  1860  001412  6A0A               	clrf	fputc@c+1,c
  1861  001414  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1862  001418  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1863  00141C  ECD1  F00B         	call	_fputc	;wreg free
  1864                           
  1865                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1866  001420  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  001424  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  001428  2ADE               	incf	postinc2,f,c
  1869  00142A  0E00               	movlw	0
  1870  00142C  22DD               	addwfc	postdec2,f,c
  1871  00142E  D7D3               	goto	i1l1793
  1872  001430                     __end_of_vfpfcnvrt:
  1873                           	opt callstack 0
  1874                           
  1875 ;; *************** function _dtoa *****************
  1876 ;; Defined at:
  1877 ;;		line 274 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1880 ;;		 -> NULL(0), 
  1881 ;;  d               8   37[COMRAM] long long 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  n               8   61[COMRAM] long long 
  1884 ;;  i               2   69[COMRAM] int 
  1885 ;;  s               2   59[COMRAM] int 
  1886 ;;  w               2   57[COMRAM] int 
  1887 ;;  p               2   55[COMRAM] int 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   35[COMRAM] int 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:       36 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   11
  1904 ;; This function calls:
  1905 ;;		___aodiv
  1906 ;;		___aomod
  1907 ;;		_abs
  1908 ;;		_pad
  1909 ;; This function is called by:
  1910 ;;		_vfpfcnvrt
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text16
  1915  001054                     __ptext16:
  1916                           	opt callstack 0
  1917  001054                     _dtoa:
  1918                           	opt callstack 6
  1919                           
  1920                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE
      +                           *fp, long long d);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 275: {;
      +                          D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;;D
      +                          :\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 277:     long long n;;D:\Se
      +                          tup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1921                           
  1922                           ;incstack = 0
  1923  001054  C026  F03E         	movff	dtoa@d,dtoa@n
  1924  001058  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  1925  00105C  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  1926  001060  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  1927  001064  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  1928  001068  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  1929  00106C  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  1930  001070  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  1931                           
  1932                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 
      +                          0;
  1933  001074  AE45               	btfss	dtoa@n+7,7,c
  1934  001076  D002               	goto	i1u83_20
  1935  001078  0E01               	movlw	1
  1936  00107A  D001               	goto	i1u84_20
  1937  00107C                     i1u83_20:
  1938  00107C  0E00               	movlw	0
  1939  00107E                     i1u84_20:
  1940  00107E  6E3C               	movwf	dtoa@s,c
  1941  001080  6A3D               	clrf	dtoa@s+1,c
  1942                           
  1943                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1944  001082  503C               	movf	dtoa@s,w,c
  1945  001084  103D               	iorwf	dtoa@s+1,w,c
  1946  001086  B4D8               	btfsc	status,2,c
  1947  001088  D010               	goto	i1l1713
  1948                           
  1949                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  1950  00108A  1E45               	comf	dtoa@n+7,f,c
  1951  00108C  1E44               	comf	dtoa@n+6,f,c
  1952  00108E  1E43               	comf	dtoa@n+5,f,c
  1953  001090  1E42               	comf	dtoa@n+4,f,c
  1954  001092  1E41               	comf	dtoa@n+3,f,c
  1955  001094  1E40               	comf	dtoa@n+2,f,c
  1956  001096  1E3F               	comf	dtoa@n+1,f,c
  1957  001098  6C3E               	negf	dtoa@n,c
  1958  00109A  0E00               	movlw	0
  1959  00109C  223F               	addwfc	dtoa@n+1,f,c
  1960  00109E  2240               	addwfc	dtoa@n+2,f,c
  1961  0010A0  2241               	addwfc	dtoa@n+3,f,c
  1962  0010A2  2242               	addwfc	dtoa@n+4,f,c
  1963  0010A4  2243               	addwfc	dtoa@n+5,f,c
  1964  0010A6  2244               	addwfc	dtoa@n+6,f,c
  1965  0010A8  2245               	addwfc	dtoa@n+7,f,c
  1966  0010AA                     i1l1713:
  1967                           
  1968                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0))
      +                           {
  1969  0010AA  0100               	movlb	0	; () banked
  1970  0010AC  AF65               	btfss	(_prec+1)& (0+255),7,b
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1
      +                           << 1);
  1974  0010AE  9366               	bcf	_flags& (0+255),1,b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ?
      +                           prec : 1;
  1978  0010B0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1979  0010B2  D005               	goto	i1u87_20
  1980  0010B4  5165               	movf	(_prec+1)& (0+255),w,b
  1981  0010B6  E108               	bnz	i1l235
  1982  0010B8  0564               	decf	_prec& (0+255),w,b
  1983  0010BA  B0D8               	btfsc	status,0,c
  1984  0010BC  D005               	goto	i1l235
  1985  0010BE                     i1u87_20:
  1986                           
  1987                           ; BSR set to: 0
  1988  0010BE  0E00               	movlw	0
  1989  0010C0  6E39               	movwf	dtoa@p+1,c
  1990  0010C2  0E01               	movlw	1
  1991  0010C4  6E38               	movwf	dtoa@p,c
  1992  0010C6  D004               	goto	i1l237
  1993  0010C8                     i1l235:
  1994                           
  1995                           ; BSR set to: 0
  1996  0010C8  C064  F038         	movff	_prec,dtoa@p
  1997  0010CC  C065  F039         	movff	_prec+1,dtoa@p+1
  1998  0010D0                     i1l237:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w = width;
  2002  0010D0  C062  F03A         	movff	_width,dtoa@w
  2003  0010D4  C063  F03B         	movff	_width+1,dtoa@w+1
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags 
      +                          & (1 << 2))) {
  2007  0010D8  503C               	movf	dtoa@s,w,c
  2008  0010DA  103D               	iorwf	dtoa@s+1,w,c
  2009  0010DC  A4D8               	btfss	status,2,c
  2010  0010DE  D002               	goto	i1u89_20
  2011                           
  2012                           ; BSR set to: 0
  2013  0010E0  A566               	btfss	_flags& (0+255),2,b
  2014  0010E2  D003               	goto	i1l1727
  2015  0010E4                     i1u89_20:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:         --w;
  2019  0010E4  063A               	decf	dtoa@w,f,c
  2020  0010E6  A0D8               	btfss	status,0,c
  2021  0010E8  063B               	decf	dtoa@w+1,f,c
  2022  0010EA                     i1l1727:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf)
      +                           - 1;
  2026  0010EA  0E00               	movlw	0
  2027  0010EC  6E47               	movwf	dtoa@i+1,c
  2028  0010EE  0E1F               	movlw	31
  2029  0010F0  6E46               	movwf	dtoa@i,c
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  2033  0010F2  0E00               	movlw	0
  2034  0010F4  6F88               	movwf	(_dbuf+31)& (0+255),b
  2035                           
  2036                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) 
      +                          && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2037  0010F6  D07C               	goto	i1l1741
  2038  0010F8                     i1l1731:
  2039                           
  2040                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:         --i;
  2041  0010F8  0646               	decf	dtoa@i,f,c
  2042  0010FA  A0D8               	btfss	status,0,c
  2043  0010FC  0647               	decf	dtoa@i+1,f,c
  2044                           
  2045                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0
      +                          ' + abs(n % 10);
  2046  0010FE  0E69               	movlw	low _dbuf
  2047  001100  2446               	addwf	dtoa@i,w,c
  2048  001102  6ED9               	movwf	fsr2l,c
  2049  001104  0E00               	movlw	high _dbuf
  2050  001106  2047               	addwfc	dtoa@i+1,w,c
  2051  001108  6EDA               	movwf	fsr2h,c
  2052  00110A  C03E  F001         	movff	dtoa@n,___aomod@dividend
  2053  00110E  C03F  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2054  001112  C040  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2055  001116  C041  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2056  00111A  C042  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2057  00111E  C043  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2058  001122  C044  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2059  001126  C045  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2060  00112A  0E0A               	movlw	10
  2061  00112C  6E09               	movwf	___aomod@divisor,c
  2062  00112E  0E00               	movlw	0
  2063  001130  6E0A               	movwf	___aomod@divisor+1,c
  2064  001132  0E00               	movlw	0
  2065  001134  6E0B               	movwf	___aomod@divisor+2,c
  2066  001136  0E00               	movlw	0
  2067  001138  6E0C               	movwf	___aomod@divisor+3,c
  2068  00113A  0E00               	movlw	0
  2069  00113C  6E0D               	movwf	___aomod@divisor+4,c
  2070  00113E  0E00               	movlw	0
  2071  001140  6E0E               	movwf	___aomod@divisor+5,c
  2072  001142  0E00               	movlw	0
  2073  001144  6E0F               	movwf	___aomod@divisor+6,c
  2074  001146  0E00               	movlw	0
  2075  001148  6E10               	movwf	___aomod@divisor+7,c
  2076  00114A  ECBC  F00A         	call	___aomod	;wreg free
  2077  00114E  C001  F02E         	movff	?___aomod,??_dtoa
  2078  001152  C002  F02F         	movff	?___aomod+1,??_dtoa+1
  2079  001156  C003  F030         	movff	?___aomod+2,??_dtoa+2
  2080  00115A  C004  F031         	movff	?___aomod+3,??_dtoa+3
  2081  00115E  C005  F032         	movff	?___aomod+4,??_dtoa+4
  2082  001162  C006  F033         	movff	?___aomod+5,??_dtoa+5
  2083  001166  C007  F034         	movff	?___aomod+6,??_dtoa+6
  2084  00116A  C008  F035         	movff	?___aomod+7,??_dtoa+7
  2085  00116E  C02E  F013         	movff	??_dtoa,abs@a
  2086  001172  C030  F014         	movff	??_dtoa+2,abs@a+1
  2087  001176  ECD4  F00C         	call	_abs	;wreg free
  2088  00117A  5013               	movf	?_abs,w,c
  2089  00117C  0F30               	addlw	48
  2090  00117E  6EDF               	movwf	indf2,c
  2091                           
  2092                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:         --p;
  2093  001180  0638               	decf	dtoa@p,f,c
  2094  001182  A0D8               	btfss	status,0,c
  2095  001184  0639               	decf	dtoa@p+1,f,c
  2096                           
  2097                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:         --w;
  2098  001186  063A               	decf	dtoa@w,f,c
  2099  001188  A0D8               	btfss	status,0,c
  2100  00118A  063B               	decf	dtoa@w+1,f,c
  2101                           
  2102                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  2103  00118C  C03E  F001         	movff	dtoa@n,___aodiv@dividend
  2104  001190  C03F  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2105  001194  C040  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2106  001198  C041  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2107  00119C  C042  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2108  0011A0  C043  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2109  0011A4  C044  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2110  0011A8  C045  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2111  0011AC  0E0A               	movlw	10
  2112  0011AE  6E09               	movwf	___aodiv@divisor,c
  2113  0011B0  0E00               	movlw	0
  2114  0011B2  6E0A               	movwf	___aodiv@divisor+1,c
  2115  0011B4  0E00               	movlw	0
  2116  0011B6  6E0B               	movwf	___aodiv@divisor+2,c
  2117  0011B8  0E00               	movlw	0
  2118  0011BA  6E0C               	movwf	___aodiv@divisor+3,c
  2119  0011BC  0E00               	movlw	0
  2120  0011BE  6E0D               	movwf	___aodiv@divisor+4,c
  2121  0011C0  0E00               	movlw	0
  2122  0011C2  6E0E               	movwf	___aodiv@divisor+5,c
  2123  0011C4  0E00               	movlw	0
  2124  0011C6  6E0F               	movwf	___aodiv@divisor+6,c
  2125  0011C8  0E00               	movlw	0
  2126  0011CA  6E10               	movwf	___aodiv@divisor+7,c
  2127  0011CC  EC18  F00A         	call	___aodiv	;wreg free
  2128  0011D0  C001  F03E         	movff	?___aodiv,dtoa@n
  2129  0011D4  C002  F03F         	movff	?___aodiv+1,dtoa@n+1
  2130  0011D8  C003  F040         	movff	?___aodiv+2,dtoa@n+2
  2131  0011DC  C004  F041         	movff	?___aodiv+3,dtoa@n+3
  2132  0011E0  C005  F042         	movff	?___aodiv+4,dtoa@n+4
  2133  0011E4  C006  F043         	movff	?___aodiv+5,dtoa@n+5
  2134  0011E8  C007  F044         	movff	?___aodiv+6,dtoa@n+6
  2135  0011EC  C008  F045         	movff	?___aodiv+7,dtoa@n+7
  2136  0011F0                     i1l1741:
  2137                           
  2138                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) 
      +                          && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2139  0011F0  BE47               	btfsc	dtoa@i+1,7,c
  2140  0011F2  D020               	goto	i1u94_20
  2141  0011F4  5047               	movf	dtoa@i+1,w,c
  2142  0011F6  E103               	bnz	i1u90_20
  2143  0011F8  0446               	decf	dtoa@i,w,c
  2144  0011FA  A0D8               	btfss	status,0,c
  2145  0011FC  D01B               	goto	i1u94_20
  2146  0011FE                     i1u90_20:
  2147  0011FE  503E               	movf	dtoa@n,w,c
  2148  001200  103F               	iorwf	dtoa@n+1,w,c
  2149  001202  1040               	iorwf	dtoa@n+2,w,c
  2150  001204  1041               	iorwf	dtoa@n+3,w,c
  2151  001206  1042               	iorwf	dtoa@n+4,w,c
  2152  001208  1043               	iorwf	dtoa@n+5,w,c
  2153  00120A  1044               	iorwf	dtoa@n+6,w,c
  2154  00120C  1045               	iorwf	dtoa@n+7,w,c
  2155  00120E  A4D8               	btfss	status,2,c
  2156  001210  D773               	goto	i1l1731
  2157  001212  BE39               	btfsc	dtoa@p+1,7,c
  2158  001214  D005               	goto	i1u92_20
  2159  001216  5039               	movf	dtoa@p+1,w,c
  2160  001218  E102               	bnz	i1u92_21
  2161  00121A  0438               	decf	dtoa@p,w,c
  2162  00121C  B0D8               	btfsc	status,0,c
  2163  00121E                     i1u92_21:
  2164  00121E  D76C               	goto	i1l1731
  2165  001220                     i1u92_20:
  2166  001220  BE3B               	btfsc	dtoa@w+1,7,c
  2167  001222  D008               	goto	i1u94_20
  2168  001224  503B               	movf	dtoa@w+1,w,c
  2169  001226  E103               	bnz	i1u93_20
  2170  001228  043A               	decf	dtoa@w,w,c
  2171  00122A  A0D8               	btfss	status,0,c
  2172  00122C  D003               	goto	i1u94_20
  2173  00122E                     i1u93_20:
  2174  00122E  0100               	movlb	0	; () banked
  2175  001230  B366               	btfsc	_flags& (0+255),1,b
  2176  001232  D762               	goto	i1l1731
  2177  001234                     i1u94_20:
  2178                           
  2179                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags 
      +                          & (1 << 2))) {
  2180  001234  503C               	movf	dtoa@s,w,c
  2181  001236  103D               	iorwf	dtoa@s+1,w,c
  2182  001238  A4D8               	btfss	status,2,c
  2183  00123A  D003               	goto	i1u96_20
  2184  00123C  0100               	movlb	0	; () banked
  2185  00123E  A566               	btfss	_flags& (0+255),2,b
  2186  001240  D017               	goto	i1l1765
  2187  001242                     i1u96_20:
  2188                           
  2189                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:         --i;
  2190  001242  0646               	decf	dtoa@i,f,c
  2191  001244  A0D8               	btfss	status,0,c
  2192  001246  0647               	decf	dtoa@i+1,f,c
  2193                           
  2194                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s 
      +                          ? '-' : '+';
  2195  001248  503C               	movf	dtoa@s,w,c
  2196  00124A  103D               	iorwf	dtoa@s+1,w,c
  2197  00124C  A4D8               	btfss	status,2,c
  2198  00124E  D004               	goto	i1l1761
  2199  001250  0E00               	movlw	0
  2200  001252  6E37               	movwf	_dtoa$685+1,c
  2201  001254  0E2B               	movlw	43
  2202  001256  D003               	goto	L2
  2203  001258                     i1l1761:
  2204  001258  0E00               	movlw	0
  2205  00125A  6E37               	movwf	_dtoa$685+1,c
  2206  00125C  0E2D               	movlw	45
  2207  00125E                     L2:
  2208  00125E  6E36               	movwf	_dtoa$685,c
  2209  001260  0E69               	movlw	low _dbuf
  2210  001262  2446               	addwf	dtoa@i,w,c
  2211  001264  6ED9               	movwf	fsr2l,c
  2212  001266  0E00               	movlw	high _dbuf
  2213  001268  2047               	addwfc	dtoa@i+1,w,c
  2214  00126A  6EDA               	movwf	fsr2h,c
  2215  00126C  C036  FFDF         	movff	_dtoa$685,indf2
  2216  001270                     i1l1765:
  2217                           
  2218                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &
      +                          dbuf[i], w);
  2219  001270  C024  F019         	movff	dtoa@fp,pad@fp
  2220  001274  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  2221  001278  0E69               	movlw	low _dbuf
  2222  00127A  2446               	addwf	dtoa@i,w,c
  2223  00127C  6E1B               	movwf	pad@buf,c
  2224  00127E  0E00               	movlw	high _dbuf
  2225  001280  2047               	addwfc	dtoa@i+1,w,c
  2226  001282  6E1C               	movwf	pad@buf+1,c
  2227  001284  C03A  F01D         	movff	dtoa@w,pad@p
  2228  001288  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  2229  00128C  EC4E  F00B         	call	_pad	;wreg free
  2230  001290  C019  F024         	movff	?_pad,?_dtoa
  2231  001294  C01A  F025         	movff	?_pad+1,?_dtoa+1
  2232  001298  0012               	return		;funcret
  2233  00129A                     __end_of_dtoa:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _pad *****************
  2237 ;; Defined at:
  2238 ;;		line 72 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2241 ;;		 -> NULL(0), 
  2242 ;;  buf             2   26[COMRAM] PTR unsigned char 
  2243 ;;		 -> dbuf(32), 
  2244 ;;  p               2   28[COMRAM] int 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  w               2   33[COMRAM] int 
  2247 ;;  i               2   31[COMRAM] int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   24[COMRAM] int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:       11 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:   10
  2264 ;; This function calls:
  2265 ;;		_fputc
  2266 ;;		_fputs
  2267 ;;		_strlen
  2268 ;; This function is called by:
  2269 ;;		_dtoa
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text17
  2274  00169C                     __ptext17:
  2275                           	opt callstack 0
  2276  00169C                     _pad:
  2277                           	opt callstack 6
  2278                           
  2279                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *
      +                          fp, char *buf, int p);D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 73: 
      +                          {;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:     int i, w;;D:\Set
      +                          up\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2280                           
  2281                           ;incstack = 0
  2282  00169C  0100               	movlb	0	; () banked
  2283  00169E  A166               	btfss	_flags& (0+255),0,b
  2284  0016A0  D00A               	goto	i1l1605
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:         fputs((const 
      +                          char *)buf, fp);
  2288  0016A2  C01B  F012         	movff	pad@buf,fputs@s
  2289  0016A6  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2290  0016AA  C019  F014         	movff	pad@fp,fputs@fp
  2291  0016AE  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2292  0016B2  ECB8  F00C         	call	_fputs	;wreg free
  2293  0016B6                     i1l1605:
  2294                           
  2295                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 :
      +                           p;
  2296  0016B6  BE1E               	btfsc	pad@p+1,7,c
  2297  0016B8  D005               	goto	i1l1609
  2298  0016BA  C01D  F022         	movff	pad@p,pad@w
  2299  0016BE  C01E  F023         	movff	pad@p+1,pad@w+1
  2300  0016C2  D004               	goto	i1l224
  2301  0016C4                     i1l1609:
  2302  0016C4  0E00               	movlw	0
  2303  0016C6  6E23               	movwf	pad@w+1,c
  2304  0016C8  0E00               	movlw	0
  2305  0016CA  6E22               	movwf	pad@w,c
  2306  0016CC                     i1l224:
  2307                           
  2308                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2309  0016CC  0E00               	movlw	0
  2310  0016CE  6E21               	movwf	pad@i+1,c
  2311  0016D0  0E00               	movlw	0
  2312  0016D2  6E20               	movwf	pad@i,c
  2313                           
  2314                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2315  0016D4  D00C               	goto	i1l1615
  2316  0016D6                     i1l1611:
  2317                           
  2318                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp
      +                          );
  2319  0016D6  0E00               	movlw	0
  2320  0016D8  6E0A               	movwf	fputc@c+1,c
  2321  0016DA  0E20               	movlw	32
  2322  0016DC  6E09               	movwf	fputc@c,c
  2323  0016DE  C019  F00B         	movff	pad@fp,fputc@fp
  2324  0016E2  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  2325  0016E6  ECD1  F00B         	call	_fputc	;wreg free
  2326                           
  2327                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2328  0016EA  4A20               	infsnz	pad@i,f,c
  2329  0016EC  2A21               	incf	pad@i+1,f,c
  2330  0016EE                     i1l1615:
  2331                           
  2332                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2333  0016EE  5022               	movf	pad@w,w,c
  2334  0016F0  5C20               	subwf	pad@i,w,c
  2335  0016F2  5021               	movf	pad@i+1,w,c
  2336  0016F4  0A80               	xorlw	128
  2337  0016F6  6E1F               	movwf	??_pad& (0+255),c
  2338  0016F8  5023               	movf	pad@w+1,w,c
  2339  0016FA  0A80               	xorlw	128
  2340  0016FC  581F               	subwfb	??_pad& (0+255),w,c
  2341  0016FE  A0D8               	btfss	status,0,c
  2342  001700  D7EA               	goto	i1l1611
  2343                           
  2344                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 
      +                          << 0))) {
  2345  001702  0100               	movlb	0	; () banked
  2346  001704  B166               	btfsc	_flags& (0+255),0,b
  2347  001706  D00A               	goto	i1l1619
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:         fputs((const 
      +                          char *)buf, fp);
  2351  001708  C01B  F012         	movff	pad@buf,fputs@s
  2352  00170C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2353  001710  C019  F014         	movff	pad@fp,fputs@fp
  2354  001714  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2355  001718  ECB8  F00C         	call	_fputs	;wreg free
  2356  00171C                     i1l1619:
  2357                           
  2358                           ;D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf
      +                          ) + w;
  2359  00171C  C01B  F001         	movff	pad@buf,strlen@s
  2360  001720  C01C  F002         	movff	pad@buf+1,strlen@s+1
  2361  001724  ECED  F00C         	call	_strlen	;wreg free
  2362  001728  5022               	movf	pad@w,w,c
  2363  00172A  2401               	addwf	?_strlen,w,c
  2364  00172C  6E19               	movwf	?_pad,c
  2365  00172E  5023               	movf	pad@w+1,w,c
  2366  001730  2002               	addwfc	?_strlen+1,w,c
  2367  001732  6E1A               	movwf	?_pad+1,c
  2368  001734  0012               	return		;funcret
  2369  001736                     __end_of_pad:
  2370                           	opt callstack 0
  2371                           
  2372 ;; *************** function _strlen *****************
  2373 ;; Defined at:
  2374 ;;		line 12 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2377 ;;		 -> dbuf(32), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2380 ;;		 -> dbuf(32), 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  2    0[COMRAM] unsigned int 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;Total ram usage:        4 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    2
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_pad
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text18
  2405  0019DA                     __ptext18:
  2406                           	opt callstack 0
  2407  0019DA                     _strlen:
  2408                           	opt callstack 13
  2409                           
  2410                           ;incstack = 0
  2411  0019DA  C001  F003         	movff	strlen@s,strlen@a
  2412  0019DE  C002  F004         	movff	strlen@s+1,strlen@a+1
  2413  0019E2  D002               	goto	i1l1595
  2414  0019E4                     i1l1593:
  2415  0019E4  4A01               	infsnz	strlen@s,f,c
  2416  0019E6  2A02               	incf	strlen@s+1,f,c
  2417  0019E8                     i1l1595:
  2418  0019E8  C001  FFD9         	movff	strlen@s,fsr2l
  2419  0019EC  C002  FFDA         	movff	strlen@s+1,fsr2h
  2420  0019F0  50DF               	movf	indf2,w,c
  2421  0019F2  A4D8               	btfss	status,2,c
  2422  0019F4  D7F7               	goto	i1l1593
  2423  0019F6  5003               	movf	strlen@a,w,c
  2424  0019F8  5C01               	subwf	strlen@s,w,c
  2425  0019FA  6E01               	movwf	?_strlen,c
  2426  0019FC  5004               	movf	strlen@a+1,w,c
  2427  0019FE  5802               	subwfb	strlen@s+1,w,c
  2428  001A00  6E02               	movwf	?_strlen+1,c
  2429  001A02  0012               	return		;funcret
  2430  001A04                     __end_of_strlen:
  2431                           	opt callstack 0
  2432                           
  2433 ;; *************** function _fputs *****************
  2434 ;; Defined at:
  2435 ;;		line 8 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2438 ;;		 -> dbuf(32), 
  2439 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2440 ;;		 -> NULL(0), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  i               2   22[COMRAM] int 
  2443 ;;  c               1   21[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2   17[COMRAM] int 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;Total ram usage:        7 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    9
  2460 ;; This function calls:
  2461 ;;		_fputc
  2462 ;; This function is called by:
  2463 ;;		_pad
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text19
  2468  001970                     __ptext19:
  2469                           	opt callstack 0
  2470  001970                     _fputs:
  2471                           	opt callstack 6
  2472                           
  2473                           ;incstack = 0
  2474  001970  0E00               	movlw	0
  2475  001972  6E18               	movwf	fputs@i+1,c
  2476  001974  0E00               	movlw	0
  2477  001976  6E17               	movwf	fputs@i,c
  2478  001978  D00B               	goto	i1l1589
  2479  00197A                     i1l1585:
  2480  00197A  C016  F009         	movff	fputs@c,fputc@c
  2481  00197E  6A0A               	clrf	fputc@c+1,c
  2482  001980  C014  F00B         	movff	fputs@fp,fputc@fp
  2483  001984  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2484  001988  ECD1  F00B         	call	_fputc	;wreg free
  2485  00198C  4A17               	infsnz	fputs@i,f,c
  2486  00198E  2A18               	incf	fputs@i+1,f,c
  2487  001990                     i1l1589:
  2488  001990  5017               	movf	fputs@i,w,c
  2489  001992  2412               	addwf	fputs@s,w,c
  2490  001994  6ED9               	movwf	fsr2l,c
  2491  001996  5018               	movf	fputs@i+1,w,c
  2492  001998  2013               	addwfc	fputs@s+1,w,c
  2493  00199A  6EDA               	movwf	fsr2h,c
  2494  00199C  50DF               	movf	indf2,w,c
  2495  00199E  6E16               	movwf	fputs@c,c
  2496  0019A0  5016               	movf	fputs@c,w,c
  2497  0019A2  B4D8               	btfsc	status,2,c
  2498  0019A4  0012               	return	
  2499  0019A6  D7E9               	goto	i1l1585
  2500  0019A8                     __end_of_fputs:
  2501                           	opt callstack 0
  2502                           
  2503 ;; *************** function _fputc *****************
  2504 ;; Defined at:
  2505 ;;		line 8 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  c               2    8[COMRAM] int 
  2508 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2509 ;;		 -> NULL(0), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  2    8[COMRAM] int 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;Total ram usage:        9 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    8
  2528 ;; This function calls:
  2529 ;;		_putch
  2530 ;; This function is called by:
  2531 ;;		_pad
  2532 ;;		_vfpfcnvrt
  2533 ;;		_fputs
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text20
  2538  0017A2                     __ptext20:
  2539                           	opt callstack 0
  2540  0017A2                     _fputc:
  2541                           	opt callstack 9
  2542                           
  2543                           ;incstack = 0
  2544  0017A2  500B               	movf	fputc@fp,w,c
  2545  0017A4  100C               	iorwf	fputc@fp+1,w,c
  2546  0017A6  B4D8               	btfsc	status,2,c
  2547  0017A8  D004               	goto	i1u60_20
  2548  0017AA  500B               	movf	fputc@fp,w,c
  2549  0017AC  100C               	iorwf	fputc@fp+1,w,c
  2550  0017AE  A4D8               	btfss	status,2,c
  2551  0017B0  D004               	goto	i1l1575
  2552  0017B2                     i1u60_20:
  2553  0017B2  5009               	movf	fputc@c,w,c
  2554  0017B4  ECF0  F00D         	call	_putch
  2555  0017B8  0012               	return	
  2556  0017BA                     i1l1575:
  2557  0017BA  EE20 F004          	lfsr	2,4
  2558  0017BE  500B               	movf	fputc@fp,w,c
  2559  0017C0  26D9               	addwf	fsr2l,f,c
  2560  0017C2  500C               	movf	fputc@fp+1,w,c
  2561  0017C4  22DA               	addwfc	fsr2h,f,c
  2562  0017C6  50DE               	movf	postinc2,w,c
  2563  0017C8  10DE               	iorwf	postinc2,w,c
  2564  0017CA  B4D8               	btfsc	status,2,c
  2565  0017CC  D016               	goto	i1u62_20
  2566  0017CE  EE20 F004          	lfsr	2,4
  2567  0017D2  500B               	movf	fputc@fp,w,c
  2568  0017D4  26D9               	addwf	fsr2l,f,c
  2569  0017D6  500C               	movf	fputc@fp+1,w,c
  2570  0017D8  22DA               	addwfc	fsr2h,f,c
  2571  0017DA  EE10 F002          	lfsr	1,2
  2572  0017DE  500B               	movf	fputc@fp,w,c
  2573  0017E0  26E1               	addwf	fsr1l,f,c
  2574  0017E2  500C               	movf	fputc@fp+1,w,c
  2575  0017E4  22E2               	addwfc	fsr1h,f,c
  2576  0017E6  50DE               	movf	postinc2,w,c
  2577  0017E8  5CE6               	subwf	postinc1,w,c
  2578  0017EA  50E6               	movf	postinc1,w,c
  2579  0017EC  0A80               	xorlw	128
  2580  0017EE  6E11               	movwf	(??_fputc+4)& (0+255),c
  2581  0017F0  50DE               	movf	postinc2,w,c
  2582  0017F2  0A80               	xorlw	128
  2583  0017F4  5811               	subwfb	(??_fputc+4)& (0+255),w,c
  2584  0017F6  B0D8               	btfsc	status,0,c
  2585  0017F8  0012               	return	
  2586  0017FA                     i1u62_20:
  2587  0017FA  EE20 F002          	lfsr	2,2
  2588  0017FE  500B               	movf	fputc@fp,w,c
  2589  001800  26D9               	addwf	fsr2l,f,c
  2590  001802  500C               	movf	fputc@fp+1,w,c
  2591  001804  22DA               	addwfc	fsr2h,f,c
  2592  001806  2ADE               	incf	postinc2,f,c
  2593  001808  0E00               	movlw	0
  2594  00180A  22DD               	addwfc	postdec2,f,c
  2595  00180C  0012               	return		;funcret
  2596  00180E                     __end_of_fputc:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _putch *****************
  2600 ;; Defined at:
  2601 ;;		line 146 in file "LCD.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  c               1    wreg     unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  c               1    7[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:   22
  2622 ;; This function calls:
  2623 ;;		_lcd_putc
  2624 ;; This function is called by:
  2625 ;;		_lcd_DHBK
  2626 ;;		_fputc
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text21
  2631  001BE0                     __ptext21:
  2632                           	opt callstack 0
  2633  001BE0                     _putch:
  2634                           	opt callstack 0
  2635                           
  2636                           ;incstack = 0
  2637 ;; hardware stack exceeded
  2638                           ;putch@c stored from wreg
  2639  001BE0  6E08               	movwf	putch@c,c
  2640  001BE2  5008               	movf	putch@c,w,c
  2641  001BE4  EC7B  F00C         	call	_lcd_putc
  2642  001BE8  0012               	return		;funcret
  2643  001BEA                     __end_of_putch:
  2644                           	opt callstack 0
  2645                           
  2646 ;; *************** function _lcd_putc *****************
  2647 ;; Defined at:
  2648 ;;		line 132 in file "LCD.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  c               1    wreg     unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  c               1    6[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   21
  2669 ;; This function calls:
  2670 ;;		_d_write
  2671 ;;		_lcd_cls
  2672 ;;		_lcd_gotoxy
  2673 ;; This function is called by:
  2674 ;;		_putch
  2675 ;;		_lcd_puts
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text22
  2680  0018F6                     __ptext22:
  2681                           	opt callstack 0
  2682  0018F6                     _lcd_putc:
  2683                           	opt callstack 0
  2684                           
  2685                           ;incstack = 0
  2686 ;; hardware stack exceeded
  2687                           ;lcd_putc@c stored from wreg
  2688  0018F6  6E07               	movwf	lcd_putc@c,c
  2689  0018F8  D00E               	goto	i1l1561
  2690  0018FA                     i1l1555:
  2691  0018FA  ECAF  F00D         	call	_lcd_cls	;wreg free
  2692  0018FE  0012               	return	
  2693  001900                     i1l1557:
  2694  001900  0E00               	movlw	0
  2695  001902  0100               	movlb	0	; () banked
  2696  001904  6F89               	movwf	lcd_gotoxy@col& (0+255),b
  2697  001906  0E01               	movlw	1
  2698  001908  EC64  F00D         	call	_lcd_gotoxy
  2699  00190C  0012               	return	
  2700  00190E                     i1l1559:
  2701  00190E  5007               	movf	lcd_putc@c,w,c
  2702  001910  EC37  F00D         	call	_d_write
  2703  001914  0012               	return	
  2704  001916                     i1l1561:
  2705  001916  5007               	movf	lcd_putc@c,w,c
  2706  001918  6E05               	movwf	??_lcd_putc& (0+255),c
  2707  00191A  6A06               	clrf	(??_lcd_putc+1)& (0+255),c
  2708                           
  2709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 1, Range of values is 0 to 0
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte            4     3 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  00191C  5006               	movf	??_lcd_putc+1,w,c
  2717  00191E  0A00               	xorlw	0	; case 0
  2718  001920  A4D8               	btfss	status,2,c
  2719  001922  D7F5               	goto	i1l1559
  2720                           
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 2, Range of values is 10 to 12
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte            7     4 (average)
  2726                           ;	Chosen strategy is simple_byte
  2727  001924  5005               	movf	??_lcd_putc,w,c
  2728  001926  0A0A               	xorlw	10	; case 10
  2729  001928  B4D8               	btfsc	status,2,c
  2730  00192A  D7EA               	goto	i1l1557
  2731  00192C  0A06               	xorlw	6	; case 12
  2732  00192E  B4D8               	btfsc	status,2,c
  2733  001930  D7E4               	goto	i1l1555
  2734  001932  D7ED               	goto	i1l1559
  2735  001934                     __end_of_lcd_putc:
  2736                           	opt callstack 0
  2737                           
  2738 ;; *************** function _lcd_gotoxy *****************
  2739 ;; Defined at:
  2740 ;;		line 96 in file "LCD.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  row             1    wreg     unsigned char 
  2743 ;;  col             1    0[BANK0 ] unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  row             1    3[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   20
  2762 ;; This function calls:
  2763 ;;		_i_write
  2764 ;; This function is called by:
  2765 ;;		_lcd_putc
  2766 ;;		_lcd_DHBK
  2767 ;;		_Adc_process
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text23
  2772  001AC8                     __ptext23:
  2773                           	opt callstack 0
  2774  001AC8                     _lcd_gotoxy:
  2775                           	opt callstack 0
  2776                           
  2777                           ;incstack = 0
  2778 ;; hardware stack exceeded
  2779                           ;lcd_gotoxy@row stored from wreg
  2780  001AC8  6E04               	movwf	lcd_gotoxy@row,c
  2781  001ACA  5004               	movf	lcd_gotoxy@row,w,c
  2782  001ACC  B4D8               	btfsc	status,2,c
  2783  001ACE  D003               	goto	i1l1547
  2784  001AD0  0E40               	movlw	64
  2785  001AD2  0100               	movlb	0	; () banked
  2786  001AD4  2789               	addwf	lcd_gotoxy@col& (0+255),f,b
  2787  001AD6                     i1l1547:
  2788  001AD6  0100               	movlb	0	; () banked
  2789  001AD8  5189               	movf	lcd_gotoxy@col& (0+255),w,b
  2790  001ADA  0980               	iorlw	128
  2791  001ADC  EC27  F00D         	call	_i_write
  2792  001AE0  0012               	return		;funcret
  2793  001AE2                     __end_of_lcd_gotoxy:
  2794                           	opt callstack 0
  2795                           
  2796 ;; *************** function _lcd_cls *****************
  2797 ;; Defined at:
  2798 ;;		line 108 in file "LCD.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:   20
  2819 ;; This function calls:
  2820 ;;		_i_write
  2821 ;; This function is called by:
  2822 ;;		_lcd_init
  2823 ;;		_lcd_putc
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text24
  2828  001B5E                     __ptext24:
  2829                           	opt callstack 0
  2830  001B5E                     _lcd_cls:
  2831                           	opt callstack 0
  2832                           
  2833                           ;incstack = 0
  2834 ;; hardware stack exceeded
  2835  001B5E  0E01               	movlw	1
  2836  001B60  EC27  F00D         	call	_i_write
  2837  001B64  0E05               	movlw	5
  2838  001B66  6E04               	movwf	??_lcd_cls& (0+255),c
  2839  001B68  0ED0               	movlw	208
  2840  001B6A                     i1u114_27:
  2841  001B6A  2EE8               	decfsz	wreg,f,c
  2842  001B6C  D7FE               	bra	i1u114_27
  2843  001B6E  2E04               	decfsz	??_lcd_cls& (0+255),f,c
  2844  001B70  D7FC               	bra	i1u114_27
  2845  001B72  0012               	return		;funcret
  2846  001B74                     __end_of_lcd_cls:
  2847                           	opt callstack 0
  2848                           
  2849 ;; *************** function _i_write *****************
  2850 ;; Defined at:
  2851 ;;		line 78 in file "LCD.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  d               1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  d               1    2[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:   19
  2872 ;; This function calls:
  2873 ;;		_LCDBusy
  2874 ;;		_Write_PortA
  2875 ;;		_Write_PortB
  2876 ;; This function is called by:
  2877 ;;		_lcd_gotoxy
  2878 ;;		_lcd_download
  2879 ;;		_lcd_cls
  2880 ;;		_lcd_init
  2881 ;;		_lcd_put_byte
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text25
  2886  001A4E                     __ptext25:
  2887                           	opt callstack 0
  2888  001A4E                     _i_write:
  2889                           	opt callstack 0
  2890                           
  2891                           ;incstack = 0
  2892 ;; hardware stack exceeded
  2893                           ;i_write@d stored from wreg
  2894  001A4E  6E03               	movwf	i_write@d,c
  2895  001A50  0E00               	movlw	0
  2896  001A52  EC7E  F00D         	call	_Write_PortA
  2897  001A56  5003               	movf	i_write@d,w,c
  2898  001A58  EC71  F00D         	call	_Write_PortB
  2899  001A5C  0E40               	movlw	64
  2900  001A5E  EC7E  F00D         	call	_Write_PortA
  2901  001A62  0E00               	movlw	0
  2902  001A64  EC7E  F00D         	call	_Write_PortA
  2903  001A68  ECF5  F00D         	call	_LCDBusy	;wreg free
  2904  001A6C  0012               	return		;funcret
  2905  001A6E                     __end_of_i_write:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _d_write *****************
  2909 ;; Defined at:
  2910 ;;		line 86 in file "LCD.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  d               1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  d               1    2[COMRAM] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:   19
  2931 ;; This function calls:
  2932 ;;		_LCDBusy
  2933 ;;		_Write_PortA
  2934 ;;		_Write_PortB
  2935 ;; This function is called by:
  2936 ;;		_lcd_download
  2937 ;;		_lcd_putc
  2938 ;;		_lcd_put_byte
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text26
  2943  001A6E                     __ptext26:
  2944                           	opt callstack 0
  2945  001A6E                     _d_write:
  2946                           	opt callstack 0
  2947                           
  2948                           ;incstack = 0
  2949 ;; hardware stack exceeded
  2950                           ;d_write@d stored from wreg
  2951  001A6E  6E03               	movwf	d_write@d,c
  2952  001A70  0E80               	movlw	128
  2953  001A72  EC7E  F00D         	call	_Write_PortA
  2954  001A76  5003               	movf	d_write@d,w,c
  2955  001A78  EC71  F00D         	call	_Write_PortB
  2956  001A7C  0EC0               	movlw	192
  2957  001A7E  EC7E  F00D         	call	_Write_PortA
  2958  001A82  0E00               	movlw	0
  2959  001A84  EC7E  F00D         	call	_Write_PortA
  2960  001A88  ECF5  F00D         	call	_LCDBusy	;wreg free
  2961  001A8C  0012               	return		;funcret
  2962  001A8E                     __end_of_d_write:
  2963                           	opt callstack 0
  2964                           
  2965 ;; *************** function _Write_PortB *****************
  2966 ;; Defined at:
  2967 ;;		line 60 in file "LCD.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  d               1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  d               1    1[COMRAM] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;Total ram usage:        0 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:   18
  2988 ;; This function calls:
  2989 ;;		_SPI_send
  2990 ;; This function is called by:
  2991 ;;		_i_write
  2992 ;;		_d_write
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text27
  2997  001AE2                     __ptext27:
  2998                           	opt callstack 0
  2999  001AE2                     _Write_PortB:
  3000                           	opt callstack 0
  3001                           
  3002                           ;incstack = 0
  3003 ;; hardware stack exceeded
  3004                           ;Write_PortB@d stored from wreg
  3005  001AE2  6E02               	movwf	Write_PortB@d,c
  3006  001AE4  9489               	bcf	3977,2,c	;volatile
  3007  001AE6  0E40               	movlw	64
  3008  001AE8  ECCC  F00D         	call	_SPI_send
  3009  001AEC  0E13               	movlw	19
  3010  001AEE  ECCC  F00D         	call	_SPI_send
  3011  001AF2  5002               	movf	Write_PortB@d,w,c
  3012  001AF4  ECCC  F00D         	call	_SPI_send
  3013  001AF8  8489               	bsf	3977,2,c	;volatile
  3014  001AFA  0012               	return		;funcret
  3015  001AFC                     __end_of_Write_PortB:
  3016                           	opt callstack 0
  3017                           
  3018 ;; *************** function _Write_PortA *****************
  3019 ;; Defined at:
  3020 ;;		line 69 in file "LCD.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  mask            1    wreg     unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  mask            1    1[COMRAM] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:   18
  3041 ;; This function calls:
  3042 ;;		_SPI_send
  3043 ;; This function is called by:
  3044 ;;		_i_write
  3045 ;;		_d_write
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text28
  3050  001AFC                     __ptext28:
  3051                           	opt callstack 0
  3052  001AFC                     _Write_PortA:
  3053                           	opt callstack 0
  3054                           
  3055                           ;incstack = 0
  3056 ;; hardware stack exceeded
  3057                           ;Write_PortA@mask stored from wreg
  3058  001AFC  6E02               	movwf	Write_PortA@mask,c
  3059  001AFE  9489               	bcf	3977,2,c	;volatile
  3060  001B00  0E40               	movlw	64
  3061  001B02  ECCC  F00D         	call	_SPI_send
  3062  001B06  0E12               	movlw	18
  3063  001B08  ECCC  F00D         	call	_SPI_send
  3064  001B0C  5002               	movf	Write_PortA@mask,w,c
  3065  001B0E  ECCC  F00D         	call	_SPI_send
  3066  001B12  8489               	bsf	3977,2,c	;volatile
  3067  001B14  0012               	return		;funcret
  3068  001B16                     __end_of_Write_PortA:
  3069                           	opt callstack 0
  3070                           
  3071 ;; *************** function _SPI_send *****************
  3072 ;; Defined at:
  3073 ;;		line 37 in file "LCD.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  c               1    wreg     unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  c               1    0[COMRAM] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:   17
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_SPIportA_init
  3098 ;;		_SPIportB_init
  3099 ;;		_Write_PortB
  3100 ;;		_Write_PortA
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text29
  3105  001B98                     __ptext29:
  3106                           	opt callstack 0
  3107  001B98                     _SPI_send:
  3108                           	opt callstack 0
  3109                           
  3110                           ;incstack = 0
  3111 ;; hardware stack exceeded
  3112                           ;SPI_send@c stored from wreg
  3113  001B98  6E01               	movwf	SPI_send@c,c
  3114  001B9A  C001  FFC9         	movff	SPI_send@c,4041	;volatile
  3115  001B9E                     i1l40:
  3116  001B9E  A69E               	btfss	3998,3,c	;volatile
  3117  001BA0  D7FE               	goto	i1l40
  3118  001BA2  969E               	bcf	3998,3,c	;volatile
  3119  001BA4  50C9               	movf	4041,w,c	;volatile
  3120  001BA6  0012               	return		;funcret
  3121  001BA8                     __end_of_SPI_send:
  3122                           	opt callstack 0
  3123                           
  3124 ;; *************** function _LCDBusy *****************
  3125 ;; Defined at:
  3126 ;;		line 28 in file "LCD.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:   17
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_i_write
  3151 ;;		_d_write
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text30
  3156  001BEA                     __ptext30:
  3157                           	opt callstack 0
  3158  001BEA                     _LCDBusy:
  3159                           	opt callstack 0
  3160                           
  3161                           ;incstack = 0
  3162 ;; hardware stack exceeded
  3163  001BEA  0E1F               	movlw	31
  3164  001BEC                     i1u115_27:
  3165  001BEC  2EE8               	decfsz	wreg,f,c
  3166  001BEE  D7FE               	bra	i1u115_27
  3167  001BF0  D000               	nop2	
  3168  001BF2  0012               	return		;funcret
  3169  001BF4                     __end_of_LCDBusy:
  3170                           	opt callstack 0
  3171                           
  3172 ;; *************** function _abs *****************
  3173 ;; Defined at:
  3174 ;;		line 1 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               2   18[COMRAM] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2   18[COMRAM] int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        4 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    2
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_dtoa
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text31
  3203  0019A8                     __ptext31:
  3204                           	opt callstack 0
  3205  0019A8                     _abs:
  3206                           	opt callstack 14
  3207                           
  3208                           ;incstack = 0
  3209  0019A8  BE14               	btfsc	abs@a+1,7,c
  3210  0019AA  D005               	goto	i1u69_20
  3211  0019AC  5014               	movf	abs@a+1,w,c
  3212  0019AE  E110               	bnz	i1l947
  3213  0019B0  0413               	decf	abs@a,w,c
  3214  0019B2  B0D8               	btfsc	status,0,c
  3215  0019B4  D00D               	goto	i1l947
  3216  0019B6                     i1u69_20:
  3217  0019B6  C013  F015         	movff	abs@a,??_abs
  3218  0019BA  C014  F016         	movff	abs@a+1,??_abs+1
  3219  0019BE  1E15               	comf	??_abs,f,c
  3220  0019C0  1E16               	comf	??_abs+1,f,c
  3221  0019C2  4A15               	infsnz	??_abs,f,c
  3222  0019C4  2A16               	incf	??_abs+1,f,c
  3223  0019C6  C015  F013         	movff	??_abs,?_abs
  3224  0019CA  C016  F014         	movff	??_abs+1,?_abs+1
  3225  0019CE  0012               	return	
  3226  0019D0                     i1l947:
  3227  0019D0  C013  F013         	movff	abs@a,?_abs
  3228  0019D4  C014  F014         	movff	abs@a+1,?_abs+1
  3229  0019D8  0012               	return		;funcret
  3230  0019DA                     __end_of_abs:
  3231                           	opt callstack 0
  3232                           
  3233 ;; *************** function ___aomod *****************
  3234 ;; Defined at:
  3235 ;;		line 9 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  dividend        8    0[COMRAM] long long 
  3238 ;;  divisor         8    8[COMRAM] long long 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  sign            1   17[COMRAM] unsigned char 
  3241 ;;  counter         1   16[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  8    0[COMRAM] long long 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3251 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;Total ram usage:       18 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    2
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_dtoa
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text32
  3266  001578                     __ptext32:
  3267                           	opt callstack 0
  3268  001578                     ___aomod:
  3269                           	opt callstack 14
  3270                           
  3271                           ;incstack = 0
  3272  001578  0E00               	movlw	0
  3273  00157A  6E12               	movwf	___aomod@sign,c
  3274  00157C  AE08               	btfss	___aomod@dividend+7,7,c
  3275  00157E  D012               	goto	i1l1679
  3276  001580  1E08               	comf	___aomod@dividend+7,f,c
  3277  001582  1E07               	comf	___aomod@dividend+6,f,c
  3278  001584  1E06               	comf	___aomod@dividend+5,f,c
  3279  001586  1E05               	comf	___aomod@dividend+4,f,c
  3280  001588  1E04               	comf	___aomod@dividend+3,f,c
  3281  00158A  1E03               	comf	___aomod@dividend+2,f,c
  3282  00158C  1E02               	comf	___aomod@dividend+1,f,c
  3283  00158E  6C01               	negf	___aomod@dividend,c
  3284  001590  0E00               	movlw	0
  3285  001592  2202               	addwfc	___aomod@dividend+1,f,c
  3286  001594  2203               	addwfc	___aomod@dividend+2,f,c
  3287  001596  2204               	addwfc	___aomod@dividend+3,f,c
  3288  001598  2205               	addwfc	___aomod@dividend+4,f,c
  3289  00159A  2206               	addwfc	___aomod@dividend+5,f,c
  3290  00159C  2207               	addwfc	___aomod@dividend+6,f,c
  3291  00159E  2208               	addwfc	___aomod@dividend+7,f,c
  3292  0015A0  0E01               	movlw	1
  3293  0015A2  6E12               	movwf	___aomod@sign,c
  3294  0015A4                     i1l1679:
  3295  0015A4  AE10               	btfss	___aomod@divisor+7,7,c
  3296  0015A6  D010               	goto	i1l1683
  3297  0015A8  1E10               	comf	___aomod@divisor+7,f,c
  3298  0015AA  1E0F               	comf	___aomod@divisor+6,f,c
  3299  0015AC  1E0E               	comf	___aomod@divisor+5,f,c
  3300  0015AE  1E0D               	comf	___aomod@divisor+4,f,c
  3301  0015B0  1E0C               	comf	___aomod@divisor+3,f,c
  3302  0015B2  1E0B               	comf	___aomod@divisor+2,f,c
  3303  0015B4  1E0A               	comf	___aomod@divisor+1,f,c
  3304  0015B6  6C09               	negf	___aomod@divisor,c
  3305  0015B8  0E00               	movlw	0
  3306  0015BA  220A               	addwfc	___aomod@divisor+1,f,c
  3307  0015BC  220B               	addwfc	___aomod@divisor+2,f,c
  3308  0015BE  220C               	addwfc	___aomod@divisor+3,f,c
  3309  0015C0  220D               	addwfc	___aomod@divisor+4,f,c
  3310  0015C2  220E               	addwfc	___aomod@divisor+5,f,c
  3311  0015C4  220F               	addwfc	___aomod@divisor+6,f,c
  3312  0015C6  2210               	addwfc	___aomod@divisor+7,f,c
  3313  0015C8                     i1l1683:
  3314  0015C8  5009               	movf	___aomod@divisor,w,c
  3315  0015CA  100A               	iorwf	___aomod@divisor+1,w,c
  3316  0015CC  100B               	iorwf	___aomod@divisor+2,w,c
  3317  0015CE  100C               	iorwf	___aomod@divisor+3,w,c
  3318  0015D0  100D               	iorwf	___aomod@divisor+4,w,c
  3319  0015D2  100E               	iorwf	___aomod@divisor+5,w,c
  3320  0015D4  100F               	iorwf	___aomod@divisor+6,w,c
  3321  0015D6  1010               	iorwf	___aomod@divisor+7,w,c
  3322  0015D8  B4D8               	btfsc	status,2,c
  3323  0015DA  D03C               	goto	i1l1699
  3324  0015DC  0E01               	movlw	1
  3325  0015DE  6E11               	movwf	___aomod@counter,c
  3326  0015E0  D00A               	goto	i1l1689
  3327  0015E2                     i1l1687:
  3328  0015E2  90D8               	bcf	status,0,c
  3329  0015E4  3609               	rlcf	___aomod@divisor,f,c
  3330  0015E6  360A               	rlcf	___aomod@divisor+1,f,c
  3331  0015E8  360B               	rlcf	___aomod@divisor+2,f,c
  3332  0015EA  360C               	rlcf	___aomod@divisor+3,f,c
  3333  0015EC  360D               	rlcf	___aomod@divisor+4,f,c
  3334  0015EE  360E               	rlcf	___aomod@divisor+5,f,c
  3335  0015F0  360F               	rlcf	___aomod@divisor+6,f,c
  3336  0015F2  3610               	rlcf	___aomod@divisor+7,f,c
  3337  0015F4  2A11               	incf	___aomod@counter,f,c
  3338  0015F6                     i1l1689:
  3339  0015F6  AE10               	btfss	___aomod@divisor+7,7,c
  3340  0015F8  D7F4               	goto	i1l1687
  3341  0015FA                     i1u80_20:
  3342  0015FA  5009               	movf	___aomod@divisor,w,c
  3343  0015FC  5C01               	subwf	___aomod@dividend,w,c
  3344  0015FE  500A               	movf	___aomod@divisor+1,w,c
  3345  001600  5802               	subwfb	___aomod@dividend+1,w,c
  3346  001602  500B               	movf	___aomod@divisor+2,w,c
  3347  001604  5803               	subwfb	___aomod@dividend+2,w,c
  3348  001606  500C               	movf	___aomod@divisor+3,w,c
  3349  001608  5804               	subwfb	___aomod@dividend+3,w,c
  3350  00160A  500D               	movf	___aomod@divisor+4,w,c
  3351  00160C  5805               	subwfb	___aomod@dividend+4,w,c
  3352  00160E  500E               	movf	___aomod@divisor+5,w,c
  3353  001610  5806               	subwfb	___aomod@dividend+5,w,c
  3354  001612  500F               	movf	___aomod@divisor+6,w,c
  3355  001614  5807               	subwfb	___aomod@dividend+6,w,c
  3356  001616  5010               	movf	___aomod@divisor+7,w,c
  3357  001618  5808               	subwfb	___aomod@dividend+7,w,c
  3358  00161A  A0D8               	btfss	status,0,c
  3359  00161C  D010               	goto	i1l1695
  3360  00161E  5009               	movf	___aomod@divisor,w,c
  3361  001620  5E01               	subwf	___aomod@dividend,f,c
  3362  001622  500A               	movf	___aomod@divisor+1,w,c
  3363  001624  5A02               	subwfb	___aomod@dividend+1,f,c
  3364  001626  500B               	movf	___aomod@divisor+2,w,c
  3365  001628  5A03               	subwfb	___aomod@dividend+2,f,c
  3366  00162A  500C               	movf	___aomod@divisor+3,w,c
  3367  00162C  5A04               	subwfb	___aomod@dividend+3,f,c
  3368  00162E  500D               	movf	___aomod@divisor+4,w,c
  3369  001630  5A05               	subwfb	___aomod@dividend+4,f,c
  3370  001632  500E               	movf	___aomod@divisor+5,w,c
  3371  001634  5A06               	subwfb	___aomod@dividend+5,f,c
  3372  001636  500F               	movf	___aomod@divisor+6,w,c
  3373  001638  5A07               	subwfb	___aomod@dividend+6,f,c
  3374  00163A  5010               	movf	___aomod@divisor+7,w,c
  3375  00163C  5A08               	subwfb	___aomod@dividend+7,f,c
  3376  00163E                     i1l1695:
  3377  00163E  90D8               	bcf	status,0,c
  3378  001640  3210               	rrcf	___aomod@divisor+7,f,c
  3379  001642  320F               	rrcf	___aomod@divisor+6,f,c
  3380  001644  320E               	rrcf	___aomod@divisor+5,f,c
  3381  001646  320D               	rrcf	___aomod@divisor+4,f,c
  3382  001648  320C               	rrcf	___aomod@divisor+3,f,c
  3383  00164A  320B               	rrcf	___aomod@divisor+2,f,c
  3384  00164C  320A               	rrcf	___aomod@divisor+1,f,c
  3385  00164E  3209               	rrcf	___aomod@divisor,f,c
  3386  001650  2E11               	decfsz	___aomod@counter,f,c
  3387  001652  D7D3               	goto	i1u80_20
  3388  001654                     i1l1699:
  3389  001654  5012               	movf	___aomod@sign,w,c
  3390  001656  B4D8               	btfsc	status,2,c
  3391  001658  D010               	goto	i1l1703
  3392  00165A  1E08               	comf	___aomod@dividend+7,f,c
  3393  00165C  1E07               	comf	___aomod@dividend+6,f,c
  3394  00165E  1E06               	comf	___aomod@dividend+5,f,c
  3395  001660  1E05               	comf	___aomod@dividend+4,f,c
  3396  001662  1E04               	comf	___aomod@dividend+3,f,c
  3397  001664  1E03               	comf	___aomod@dividend+2,f,c
  3398  001666  1E02               	comf	___aomod@dividend+1,f,c
  3399  001668  6C01               	negf	___aomod@dividend,c
  3400  00166A  0E00               	movlw	0
  3401  00166C  2202               	addwfc	___aomod@dividend+1,f,c
  3402  00166E  2203               	addwfc	___aomod@dividend+2,f,c
  3403  001670  2204               	addwfc	___aomod@dividend+3,f,c
  3404  001672  2205               	addwfc	___aomod@dividend+4,f,c
  3405  001674  2206               	addwfc	___aomod@dividend+5,f,c
  3406  001676  2207               	addwfc	___aomod@dividend+6,f,c
  3407  001678  2208               	addwfc	___aomod@dividend+7,f,c
  3408  00167A                     i1l1703:
  3409  00167A  C001  F001         	movff	___aomod@dividend,?___aomod
  3410  00167E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3411  001682  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3412  001686  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3413  00168A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3414  00168E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3415  001692  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3416  001696  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3417  00169A  0012               	return		;funcret
  3418  00169C                     __end_of___aomod:
  3419                           	opt callstack 0
  3420                           
  3421 ;; *************** function ___aodiv *****************
  3422 ;; Defined at:
  3423 ;;		line 9 in file "D:\Setup\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  dividend        8    0[COMRAM] long long 
  3426 ;;  divisor         8    8[COMRAM] long long 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  quotient        8   18[COMRAM] long long 
  3429 ;;  sign            1   17[COMRAM] unsigned char 
  3430 ;;  counter         1   16[COMRAM] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  8    0[COMRAM] long long 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3440 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;Total ram usage:       26 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    2
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_dtoa
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text33
  3455  001430                     __ptext33:
  3456                           	opt callstack 0
  3457  001430                     ___aodiv:
  3458                           	opt callstack 14
  3459                           
  3460                           ;incstack = 0
  3461  001430  0E00               	movlw	0
  3462  001432  6E12               	movwf	___aodiv@sign,c
  3463  001434  AE10               	btfss	___aodiv@divisor+7,7,c
  3464  001436  D012               	goto	i1l1635
  3465  001438  1E10               	comf	___aodiv@divisor+7,f,c
  3466  00143A  1E0F               	comf	___aodiv@divisor+6,f,c
  3467  00143C  1E0E               	comf	___aodiv@divisor+5,f,c
  3468  00143E  1E0D               	comf	___aodiv@divisor+4,f,c
  3469  001440  1E0C               	comf	___aodiv@divisor+3,f,c
  3470  001442  1E0B               	comf	___aodiv@divisor+2,f,c
  3471  001444  1E0A               	comf	___aodiv@divisor+1,f,c
  3472  001446  6C09               	negf	___aodiv@divisor,c
  3473  001448  0E00               	movlw	0
  3474  00144A  220A               	addwfc	___aodiv@divisor+1,f,c
  3475  00144C  220B               	addwfc	___aodiv@divisor+2,f,c
  3476  00144E  220C               	addwfc	___aodiv@divisor+3,f,c
  3477  001450  220D               	addwfc	___aodiv@divisor+4,f,c
  3478  001452  220E               	addwfc	___aodiv@divisor+5,f,c
  3479  001454  220F               	addwfc	___aodiv@divisor+6,f,c
  3480  001456  2210               	addwfc	___aodiv@divisor+7,f,c
  3481  001458  0E01               	movlw	1
  3482  00145A  6E12               	movwf	___aodiv@sign,c
  3483  00145C                     i1l1635:
  3484  00145C  AE08               	btfss	___aodiv@dividend+7,7,c
  3485  00145E  D012               	goto	i1l1641
  3486  001460  1E08               	comf	___aodiv@dividend+7,f,c
  3487  001462  1E07               	comf	___aodiv@dividend+6,f,c
  3488  001464  1E06               	comf	___aodiv@dividend+5,f,c
  3489  001466  1E05               	comf	___aodiv@dividend+4,f,c
  3490  001468  1E04               	comf	___aodiv@dividend+3,f,c
  3491  00146A  1E03               	comf	___aodiv@dividend+2,f,c
  3492  00146C  1E02               	comf	___aodiv@dividend+1,f,c
  3493  00146E  6C01               	negf	___aodiv@dividend,c
  3494  001470  0E00               	movlw	0
  3495  001472  2202               	addwfc	___aodiv@dividend+1,f,c
  3496  001474  2203               	addwfc	___aodiv@dividend+2,f,c
  3497  001476  2204               	addwfc	___aodiv@dividend+3,f,c
  3498  001478  2205               	addwfc	___aodiv@dividend+4,f,c
  3499  00147A  2206               	addwfc	___aodiv@dividend+5,f,c
  3500  00147C  2207               	addwfc	___aodiv@dividend+6,f,c
  3501  00147E  2208               	addwfc	___aodiv@dividend+7,f,c
  3502  001480  0E01               	movlw	1
  3503  001482  1A12               	xorwf	___aodiv@sign,f,c
  3504  001484                     i1l1641:
  3505  001484  EE20  F013         	lfsr	2,___aodiv@quotient
  3506  001488  0E07               	movlw	7
  3507  00148A                     i1u72_21:
  3508  00148A  6ADE               	clrf	postinc2,c
  3509  00148C  06E8               	decf	wreg,f,c
  3510  00148E  E2FD               	bc	i1u72_21
  3511  001490  5009               	movf	___aodiv@divisor,w,c
  3512  001492  100A               	iorwf	___aodiv@divisor+1,w,c
  3513  001494  100B               	iorwf	___aodiv@divisor+2,w,c
  3514  001496  100C               	iorwf	___aodiv@divisor+3,w,c
  3515  001498  100D               	iorwf	___aodiv@divisor+4,w,c
  3516  00149A  100E               	iorwf	___aodiv@divisor+5,w,c
  3517  00149C  100F               	iorwf	___aodiv@divisor+6,w,c
  3518  00149E  1010               	iorwf	___aodiv@divisor+7,w,c
  3519  0014A0  B4D8               	btfsc	status,2,c
  3520  0014A2  D046               	goto	i1l1663
  3521  0014A4  0E01               	movlw	1
  3522  0014A6  6E11               	movwf	___aodiv@counter,c
  3523  0014A8  D00A               	goto	i1l1649
  3524  0014AA                     i1l1647:
  3525  0014AA  90D8               	bcf	status,0,c
  3526  0014AC  3609               	rlcf	___aodiv@divisor,f,c
  3527  0014AE  360A               	rlcf	___aodiv@divisor+1,f,c
  3528  0014B0  360B               	rlcf	___aodiv@divisor+2,f,c
  3529  0014B2  360C               	rlcf	___aodiv@divisor+3,f,c
  3530  0014B4  360D               	rlcf	___aodiv@divisor+4,f,c
  3531  0014B6  360E               	rlcf	___aodiv@divisor+5,f,c
  3532  0014B8  360F               	rlcf	___aodiv@divisor+6,f,c
  3533  0014BA  3610               	rlcf	___aodiv@divisor+7,f,c
  3534  0014BC  2A11               	incf	___aodiv@counter,f,c
  3535  0014BE                     i1l1649:
  3536  0014BE  AE10               	btfss	___aodiv@divisor+7,7,c
  3537  0014C0  D7F4               	goto	i1l1647
  3538  0014C2                     i1u74_20:
  3539  0014C2  90D8               	bcf	status,0,c
  3540  0014C4  3613               	rlcf	___aodiv@quotient,f,c
  3541  0014C6  3614               	rlcf	___aodiv@quotient+1,f,c
  3542  0014C8  3615               	rlcf	___aodiv@quotient+2,f,c
  3543  0014CA  3616               	rlcf	___aodiv@quotient+3,f,c
  3544  0014CC  3617               	rlcf	___aodiv@quotient+4,f,c
  3545  0014CE  3618               	rlcf	___aodiv@quotient+5,f,c
  3546  0014D0  3619               	rlcf	___aodiv@quotient+6,f,c
  3547  0014D2  361A               	rlcf	___aodiv@quotient+7,f,c
  3548  0014D4  5009               	movf	___aodiv@divisor,w,c
  3549  0014D6  5C01               	subwf	___aodiv@dividend,w,c
  3550  0014D8  500A               	movf	___aodiv@divisor+1,w,c
  3551  0014DA  5802               	subwfb	___aodiv@dividend+1,w,c
  3552  0014DC  500B               	movf	___aodiv@divisor+2,w,c
  3553  0014DE  5803               	subwfb	___aodiv@dividend+2,w,c
  3554  0014E0  500C               	movf	___aodiv@divisor+3,w,c
  3555  0014E2  5804               	subwfb	___aodiv@dividend+3,w,c
  3556  0014E4  500D               	movf	___aodiv@divisor+4,w,c
  3557  0014E6  5805               	subwfb	___aodiv@dividend+4,w,c
  3558  0014E8  500E               	movf	___aodiv@divisor+5,w,c
  3559  0014EA  5806               	subwfb	___aodiv@dividend+5,w,c
  3560  0014EC  500F               	movf	___aodiv@divisor+6,w,c
  3561  0014EE  5807               	subwfb	___aodiv@dividend+6,w,c
  3562  0014F0  5010               	movf	___aodiv@divisor+7,w,c
  3563  0014F2  5808               	subwfb	___aodiv@dividend+7,w,c
  3564  0014F4  A0D8               	btfss	status,0,c
  3565  0014F6  D011               	goto	i1l1659
  3566  0014F8  5009               	movf	___aodiv@divisor,w,c
  3567  0014FA  5E01               	subwf	___aodiv@dividend,f,c
  3568  0014FC  500A               	movf	___aodiv@divisor+1,w,c
  3569  0014FE  5A02               	subwfb	___aodiv@dividend+1,f,c
  3570  001500  500B               	movf	___aodiv@divisor+2,w,c
  3571  001502  5A03               	subwfb	___aodiv@dividend+2,f,c
  3572  001504  500C               	movf	___aodiv@divisor+3,w,c
  3573  001506  5A04               	subwfb	___aodiv@dividend+3,f,c
  3574  001508  500D               	movf	___aodiv@divisor+4,w,c
  3575  00150A  5A05               	subwfb	___aodiv@dividend+4,f,c
  3576  00150C  500E               	movf	___aodiv@divisor+5,w,c
  3577  00150E  5A06               	subwfb	___aodiv@dividend+5,f,c
  3578  001510  500F               	movf	___aodiv@divisor+6,w,c
  3579  001512  5A07               	subwfb	___aodiv@dividend+6,f,c
  3580  001514  5010               	movf	___aodiv@divisor+7,w,c
  3581  001516  5A08               	subwfb	___aodiv@dividend+7,f,c
  3582  001518  8013               	bsf	___aodiv@quotient,0,c
  3583  00151A                     i1l1659:
  3584  00151A  90D8               	bcf	status,0,c
  3585  00151C  3210               	rrcf	___aodiv@divisor+7,f,c
  3586  00151E  320F               	rrcf	___aodiv@divisor+6,f,c
  3587  001520  320E               	rrcf	___aodiv@divisor+5,f,c
  3588  001522  320D               	rrcf	___aodiv@divisor+4,f,c
  3589  001524  320C               	rrcf	___aodiv@divisor+3,f,c
  3590  001526  320B               	rrcf	___aodiv@divisor+2,f,c
  3591  001528  320A               	rrcf	___aodiv@divisor+1,f,c
  3592  00152A  3209               	rrcf	___aodiv@divisor,f,c
  3593  00152C  2E11               	decfsz	___aodiv@counter,f,c
  3594  00152E  D7C9               	goto	i1u74_20
  3595  001530                     i1l1663:
  3596  001530  5012               	movf	___aodiv@sign,w,c
  3597  001532  B4D8               	btfsc	status,2,c
  3598  001534  D010               	goto	i1l1667
  3599  001536  1E1A               	comf	___aodiv@quotient+7,f,c
  3600  001538  1E19               	comf	___aodiv@quotient+6,f,c
  3601  00153A  1E18               	comf	___aodiv@quotient+5,f,c
  3602  00153C  1E17               	comf	___aodiv@quotient+4,f,c
  3603  00153E  1E16               	comf	___aodiv@quotient+3,f,c
  3604  001540  1E15               	comf	___aodiv@quotient+2,f,c
  3605  001542  1E14               	comf	___aodiv@quotient+1,f,c
  3606  001544  6C13               	negf	___aodiv@quotient,c
  3607  001546  0E00               	movlw	0
  3608  001548  2214               	addwfc	___aodiv@quotient+1,f,c
  3609  00154A  2215               	addwfc	___aodiv@quotient+2,f,c
  3610  00154C  2216               	addwfc	___aodiv@quotient+3,f,c
  3611  00154E  2217               	addwfc	___aodiv@quotient+4,f,c
  3612  001550  2218               	addwfc	___aodiv@quotient+5,f,c
  3613  001552  2219               	addwfc	___aodiv@quotient+6,f,c
  3614  001554  221A               	addwfc	___aodiv@quotient+7,f,c
  3615  001556                     i1l1667:
  3616  001556  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3617  00155A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3618  00155E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3619  001562  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3620  001566  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3621  00156A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3622  00156E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3623  001572  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3624  001576  0012               	return		;funcret
  3625  001578                     __end_of___aodiv:
  3626                           	opt callstack 0
  3627                           
  3628 ;; *************** function _timer0_isr *****************
  3629 ;; Defined at:
  3630 ;;		line 22 in file "Timer.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		_timer_process
  3653 ;;		i2_timer0_reset
  3654 ;; This function is called by:
  3655 ;;		Interrupt level 2
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	intcode
  3660  000008                     __pintcode:
  3661                           	opt callstack 0
  3662  000008                     _timer0_isr:
  3663                           	opt callstack 6
  3664                           
  3665                           ;incstack = 0
  3666  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3667  00000A  ED56  F00D         	call	int_func,f	;refresh shadow registers
  3668                           
  3669                           	psect	intcode_body
  3670  001AAC                     __pintcode_body:
  3671                           	opt callstack 6
  3672  001AAC                     int_func:
  3673                           	opt callstack 6
  3674  001AAC  0006               	pop		; remove dummy address from shadow register refresh
  3675                           
  3676                           ;Timer.c: 24:     if(TMR0IE & TMR0IF)
  3677  001AAE  0E01               	movlw	1
  3678  001AB0  AAF2               	btfss	4082,5,c	;volatile
  3679  001AB2  0E00               	movlw	0
  3680  001AB4  A4F2               	btfss	4082,2,c	;volatile
  3681  001AB6  0E00               	movlw	0
  3682  001AB8  A0E8               	btfss	wreg,0,c
  3683  001ABA  D004               	goto	i2l137
  3684                           
  3685                           ;Timer.c: 25:     {;Timer.c: 26:         timer0_reset();
  3686  001ABC  ECD4  F00D         	call	i2_timer0_reset	;wreg free
  3687                           
  3688                           ;Timer.c: 27:         timer_process();
  3689  001AC0  ECEA  F00D         	call	_timer_process	;wreg free
  3690  001AC4                     i2l137:
  3691  001AC4  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3692  001AC6  0011               	retfie		f
  3693  001AC8                     __end_of_timer0_isr:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function i2_timer0_reset *****************
  3697 ;; Defined at:
  3698 ;;		line 15 in file "Timer.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_timer0_isr
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text35
  3726  001BA8                     __ptext35:
  3727                           	opt callstack 0
  3728  001BA8                     i2_timer0_reset:
  3729                           	opt callstack 6
  3730                           
  3731                           ;Timer.c: 17:     TMR0IF = 0;
  3732                           
  3733                           ;incstack = 0
  3734  001BA8  94F2               	bcf	4082,2,c	;volatile
  3735                           
  3736                           ;Timer.c: 18:     TMR0ON = 0;
  3737  001BAA  9ED5               	bcf	4053,7,c	;volatile
  3738                           
  3739                           ;Timer.c: 19:     TMR0 = -12500;
  3740  001BAC  0ECF               	movlw	207
  3741  001BAE  6ED7               	movwf	4055,c	;volatile
  3742  001BB0  0E2C               	movlw	44
  3743  001BB2  6ED6               	movwf	4054,c	;volatile
  3744                           
  3745                           ;Timer.c: 20:     TMR0ON = 1;
  3746  001BB4  8ED5               	bsf	4053,7,c	;volatile
  3747  001BB6  0012               	return		;funcret
  3748  001BB8                     __end_ofi2_timer0_reset:
  3749                           	opt callstack 0
  3750                           
  3751 ;; *************** function _timer_process *****************
  3752 ;; Defined at:
  3753 ;;		line 50 in file "Tn08_Timer.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_timer0_isr
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text36
  3781  001BD4                     __ptext36:
  3782                           	opt callstack 0
  3783  001BD4                     _timer_process:
  3784                           	opt callstack 6
  3785                           
  3786                           ;Tn08_Timer.c: 52:     if((--dem1s==0)){
  3787                           
  3788                           ;incstack = 0
  3789  001BD4  2E5E               	decfsz	_dem1s,f,c
  3790  001BD6  0012               	return	
  3791                           
  3792                           ;Tn08_Timer.c: 53:         ADCON0bits.GO = 1;
  3793  001BD8  82C2               	bsf	4034,1,c	;volatile
  3794                           
  3795                           ;Tn08_Timer.c: 54:         dem1s = 100;
  3796  001BDA  0E64               	movlw	100
  3797  001BDC  6E5E               	movwf	_dem1s,c
  3798  001BDE  0012               	return		;funcret
  3799  001BE0                     __end_of_timer_process:
  3800                           	opt callstack 0
  3801                           
  3802                           	psect	rparam
  3803  0000                     
  3804                           	psect	temp
  3805  00005F                     btemp:
  3806                           	opt callstack 0
  3807  00005F                     	ds	1
  3808  0000                     int$flags	set	btemp
  3809  0000                     wtemp8	set	btemp+1
  3810  0000                     ttemp5	set	btemp+1
  3811  0000                     ttemp6	set	btemp+4
  3812  0000                     ttemp7	set	btemp+8
  3813                           tosu	equ	0xFFF
  3814                           tosh	equ	0xFFE
  3815                           tosl	equ	0xFFD
  3816                           stkptr	equ	0xFFC
  3817                           pclatu	equ	0xFFB
  3818                           pclath	equ	0xFFA
  3819                           pcl	equ	0xFF9
  3820                           tblptru	equ	0xFF8
  3821                           tblptrh	equ	0xFF7
  3822                           tblptrl	equ	0xFF6
  3823                           tablat	equ	0xFF5
  3824                           prodh	equ	0xFF4
  3825                           prodl	equ	0xFF3
  3826                           indf0	equ	0xFEF
  3827                           postinc0	equ	0xFEE
  3828                           postdec0	equ	0xFED
  3829                           preinc0	equ	0xFEC
  3830                           plusw0	equ	0xFEB
  3831                           fsr0h	equ	0xFEA
  3832                           fsr0l	equ	0xFE9
  3833                           wreg	equ	0xFE8
  3834                           indf1	equ	0xFE7
  3835                           postinc1	equ	0xFE6
  3836                           postdec1	equ	0xFE5
  3837                           preinc1	equ	0xFE4
  3838                           plusw1	equ	0xFE3
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           bsr	equ	0xFE0
  3842                           indf2	equ	0xFDF
  3843                           postinc2	equ	0xFDE
  3844                           postdec2	equ	0xFDD
  3845                           preinc2	equ	0xFDC
  3846                           plusw2	equ	0xFDB
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    64
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     29      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1146_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    lcd_download@data	PTR const unsigned char  size(2) Largest target is 64
		 -> dhbkstr(CODE[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Adc_isr in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _timer0_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _lcd_init->_lcd_DHBK
    _lcd_DHBK->_lcd_download

Critical Paths under _Adc_isr in BANK0

    _Adc_process->_printf
    _printf->_vfprintf

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Adc_isr in BANK1

    None.

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Adc_isr in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Adc_isr in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Adc_isr in BANK4

    None.

Critical Paths under _timer0_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Adc_isr in BANK5

    None.

Critical Paths under _timer0_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Adc_isr in BANK6

    None.

Critical Paths under _timer0_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Adc_isr in BANK7

    None.

Critical Paths under _timer0_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Adc_isr in BANK8

    None.

Critical Paths under _timer0_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Adc_isr in BANK9

    None.

Critical Paths under _timer0_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Adc_isr in BANK10

    None.

Critical Paths under _timer0_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Adc_isr in BANK11

    None.

Critical Paths under _timer0_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Adc_isr in BANK12

    None.

Critical Paths under _timer0_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Adc_isr in BANK13

    None.

Critical Paths under _timer0_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Adc_isr in BANK14

    None.

Critical Paths under _timer0_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Adc_isr in BANK15

    None.

Critical Paths under _timer0_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2249
                           _Adc_init
                           _lcd_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
                       _timer0_reset
 ---------------------------------------------------------------------------------
 (2) _timer0_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    2249
                           _SPI_init
                      _SPIportA_init
                      _SPIportB_init
                            _i_write
                           _lcd_DHBK
                            _lcd_cls
                             _tre_ms
 ---------------------------------------------------------------------------------
 (2) _tre_ms                                               2     0      2     197
                                             22 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_DHBK                                             1     1      0    1782
                                             28 BANK0      1     1      0
                       _lcd_download
                         _lcd_gotoxy
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0     751
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (16) _lcd_putc                                            3     3      0     729
                            _d_write
                            _lcd_cls
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (17) _lcd_gotoxy                                          2     1      1     461
                            _i_write
 ---------------------------------------------------------------------------------
 (17) _lcd_cls                                             1     1      0     112
                            _i_write
 ---------------------------------------------------------------------------------
 (3) _lcd_download                                         6     4      2     412
                                             22 BANK0      6     4      2
                            _d_write
                            _i_write
 ---------------------------------------------------------------------------------
 (18) _i_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (17) _d_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (19) _Write_PortB                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _Write_PortA                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _LCDBusy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPIportB_init                                        0     0      0      23
                           _SPI_send
 ---------------------------------------------------------------------------------
 (2) _SPIportA_init                                        0     0      0      23
                           _SPI_send
 ---------------------------------------------------------------------------------
 (20) _SPI_send                                            1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Adc_isr                                             11    11      0    8827
                                             11 BANK0     11    11      0
                        _Adc_process
 ---------------------------------------------------------------------------------
 (10) _Adc_process                                         0     0      0    8827
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (11) _printf                                              8     4      4    8366
                                              3 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (12) _vfprintf                                            8     2      6    8160
                                             87 COMRAM     6     0      6
                                              1 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) _vfpfcnvrt                                          42    36      6    7806
                                             71 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _dtoa                                               36    26     10    5728
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (15) _pad                                                11     5      6    4079
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (16) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _fputs                                               7     3      4    1920
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4    1519
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0     751
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (16) _lcd_putc                                            3     3      0     729
                            _d_write
                            _lcd_cls
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (17) _lcd_gotoxy                                          2     1      1     461
                            _i_write
 ---------------------------------------------------------------------------------
 (17) _lcd_cls                                             1     1      0     112
                            _i_write
 ---------------------------------------------------------------------------------
 (18) _i_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (17) _d_write                                             1     1      0     112
                            _LCDBusy
                        _Write_PortA
                        _Write_PortB
 ---------------------------------------------------------------------------------
 (19) _Write_PortB                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (19) _Write_PortA                                         1     1      0      45
                           _SPI_send
 ---------------------------------------------------------------------------------
 (20) _SPI_send                                            1     1      0      23
 ---------------------------------------------------------------------------------
 (19) _LCDBusy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (15) ___aomod                                            18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (15) ___aodiv                                            26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _timer0_isr                                          0     0      0       0
                      _timer_process
                     i2_timer0_reset
 ---------------------------------------------------------------------------------
 (25) i2_timer0_reset                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (25) _timer_process                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_init
   _lcd_init
     _SPI_init
     _SPIportA_init
       _SPI_send
     _SPIportB_init
       _SPI_send
     _i_write
       _LCDBusy
       _Write_PortA
         _SPI_send
       _Write_PortB
         _SPI_send
     _lcd_DHBK
       _lcd_download
         _d_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
         _i_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
       _lcd_gotoxy
         _i_write
           _LCDBusy
           _Write_PortA
             _SPI_send
           _Write_PortB
             _SPI_send
       _putch
         _lcd_putc
           _d_write
             _LCDBusy
             _Write_PortA
               _SPI_send
             _Write_PortB
               _SPI_send
           _lcd_cls
             _i_write
               _LCDBusy
               _Write_PortA
                 _SPI_send
               _Write_PortB
                 _SPI_send
           _lcd_gotoxy
             _i_write
               _LCDBusy
               _Write_PortA
                 _SPI_send
               _Write_PortB
                 _SPI_send
     _lcd_cls
       _i_write
         _LCDBusy
         _Write_PortA
           _SPI_send
         _Write_PortB
           _SPI_send
     _tre_ms
   _timer0_init
     _timer0_reset

 _Adc_isr (ROOT)
   _Adc_process
     _lcd_gotoxy
       _i_write
         _LCDBusy
         _Write_PortA
           _SPI_send
         _Write_PortB
           _SPI_send
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _lcd_putc
                     _d_write
                       _LCDBusy
                       _Write_PortA
                         _SPI_send
                       _Write_PortB
                         _SPI_send
                     _lcd_cls
                       _i_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
                     _lcd_gotoxy
                       _i_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
               _fputs
                 _fputc
                   _putch
                     _lcd_putc
                       _d_write
                         _LCDBusy
                         _Write_PortA
                           _SPI_send
                         _Write_PortB
                           _SPI_send
                       _lcd_cls
                         _i_write
                           _LCDBusy
                           _Write_PortA
                             _SPI_send
                           _Write_PortB
                             _SPI_send
                       _lcd_gotoxy
                         _i_write
                           _LCDBusy
                           _Write_PortA
                             _SPI_send
                           _Write_PortB
                             _SPI_send
               _strlen
           _fputc
             _putch
               _lcd_putc
                 _d_write
                   _LCDBusy
                   _Write_PortA
                     _SPI_send
                   _Write_PortB
                     _SPI_send
                 _lcd_cls
                   _i_write
                     _LCDBusy
                     _Write_PortA
                       _SPI_send
                     _Write_PortB
                       _SPI_send
                 _lcd_gotoxy
                   _i_write
                     _LCDBusy
                     _Write_PortA
                       _SPI_send
                     _Write_PortB
                       _SPI_send

 _timer0_isr (ROOT)
   _timer_process
   i2_timer0_reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      46       5       43.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      32        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Nov 19 14:46:45 2019

                     bsr 000FE0              _Adc_process 1934              __CFG_OSC$HS 000000  
                    l194 1BC4                      _abs 19A8     __size_of_Write_PortA 001A  
   __size_of_Write_PortB 001A                      _pad 169C                      prod 000FF3  
                    wreg 000FE8          __end_of_LCDBusy 1BF4             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_abs 0013                     l1819 18CA  
                   l1837 1A92                     l1881 189E                     l1867 186E  
                   ?_pad 0019                     _CKE1 007E3E                     STR_1 1041  
                   STR_2 104F                     u1127 177A                     u1137 1A94  
                   i1l40 1B9E                     _TMR0 000FD6                     abs@a 0013  
                   _dbuf 0069                     _main 1BB8                     _dtoa 1054  
                   _prec 0064                     _nout 0060                     pad@i 0020  
                   pad@p 001D                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0022  
                   fsr2l 000FD9                     btemp 005F          __end_of_Adc_isr 0086  
         ??_lcd_download 00A1                     prodl 000FF3                     start 0086  
           ___param_bank 000000                    ??_abs 0015                    ??_pad 001F  
        ??_timer_process 0001          __end_of___aodiv 1578                    ?_main 0001  
                  ?_dtoa 0024          __end_of___aomod 169C                    _T0CON 000FD5  
                  _LATA2 007C4A                    _LATF6 007C76                    i1l224 16CC  
                  i1l235 10C8                    i1l237 10D0                    i1l185 0056  
                  i2l137 1AC4                    i1l947 19D0             vfpfcnvrt@fmt 004A  
         i2_timer0_reset 1BA8          __end_of_dhbkstr 1041          __end_of_d_write 1A8E  
        __end_of_lcd_cls 1B74                    _dem1s 005E          __end_of_i_write 1A6E  
                  _adres 0068                    _flags 0066                    _fputc 17A2  
                  _fputs 1970                    pad@fp 0019                    _width 0062  
                  _putch 1BE0                    dtoa@d 0026                    dtoa@i 0046  
                  dtoa@n 003E                    dtoa@p 0038                    dtoa@s 003C  
                  dtoa@w 003A         __end_of_Adc_init 1A4E                    tablat 000FF5  
       __end_of_SPI_init 1BD4         __end_of_SPI_send 1BA8            lcd_download@j 00A4  
                  ttemp5 0060                    ttemp6 0063                    ttemp7 0067  
                  status 000FD8                    wtemp8 0060          __initialization 1B16  
           __end_of_main 1BC6             __end_of_dtoa 129A            lcd_gotoxy@col 0089  
          lcd_gotoxy@row 0004                   ??_main 00A6                   ??_dtoa 002E  
 __end_ofi2_timer0_reset 1BB8            __activetblptr 000003                ??_LCDBusy 0001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0009                   ?_fputs 0012                   _ADRESL 000FC3  
              ??_Adc_isr 0094                   ?_putch 0001                   i1l1611 16D6  
                 i1l1605 16B6                   i1l1703 167A                   i1l1615 16EE  
                 i1l1641 1484                   i1l1561 1916                   i1l1609 16C4  
                 i1l1713 10AA                   i1l1635 145C                   i1l1547 1AD6  
                 i1l1555 18FA                   i1l1619 171C                   i1l1731 10F8  
                 i1l1803 13F8                   i1l1557 1900                   i1l1741 11F0  
                 i1l1647 14AA                   i1l1663 1530                   i1l1559 190E  
                 i1l1575 17BA                   i1l1727 10EA                   i1l1831 1848  
                 i1l1649 14BE                   i1l1585 197A                   i1l1593 19E4  
                 i1l1761 1258                   i1l1667 1556                   i1l1659 151A  
                 i1l1683 15C8                   i1l1595 19E8                   i1l1589 1990  
                 i1l1765 1270                   i1l1829 1822                   i1l1695 163E  
                 i1l1687 15E2                   i1l1679 15A4                   i1l1689 15F6  
                 i1l1793 13D6                   i1l1699 1654                   i1l1787 1396  
                 i1l1797 13E0                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF                   _SSP1IF 007CF3                   _TRISA2 007C92  
                 _TRISC3 007CA3                   _TRISC5 007CA5                   _TRISF6 007CBE  
       __end_of_lcd_DHBK 18B0   __size_of_SPIportA_init 0018   __size_of_SPIportB_init 0018  
           vfprintf@cfmt 008A         __end_of_lcd_init 17A2         __end_of_lcd_putc 1934  
              ??___aodiv 0011                ??___aomod 0011             ?_timer0_init 0001  
                 clear_0 1B1C                ??_d_write 0003                   _printf 1A04  
                 pad@buf 001B                   _tre_ms 1A8E                ??_lcd_cls 0004  
                 dtoa@fp 0024                   _strlen 19DA          ?i2_timer0_reset 0001  
              ??_i_write 0003                   fputc@c 0009                   fputs@c 0016  
                 fputs@i 0017                   fputs@s 0012     __end_of_lcd_download 18F6  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0008         __end_of_vfprintf 1868  
             __accesstop 0060  __end_of__initialization 1B24            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 180E            __end_of_fputs 19A8  
          __end_of_putch 1BEA             ?_Adc_process 0001                ?_Adc_init 0001  
              ?_SPI_init 0001                ?_SPI_send 0001            _SPIportA_init 1B46  
          _SPIportB_init 1B2E                  ??_fputc 000D                  ??_fputs 0016  
                ??_putch 0008               __pbssBANK0 0060             Write_PortB@d 0002  
          ??_Write_PortA 0002            ??_Write_PortB 0002               ??_Adc_init 009F  
                ?_printf 008C                  ?_tre_ms 009F               ??_SPI_init 009F  
                ?_strlen 0001               ??_SPI_send 0001                  _LCDBusy 1BEA  
         ?_SPIportA_init 0001           ?_SPIportB_init 0001                ?_lcd_DHBK 0001  
     __size_of_vfpfcnvrt 0196                  i1u60_20 17B2                  i1u62_20 17FA  
             _lcd_gotoxy 1AC8                  i1u80_20 15FA                  i1u72_21 148A  
                i1u74_20 14C2                  i1u90_20 11FE                  i1u83_20 107C  
                i1u92_20 1220                  i1u84_20 107E                  i1u92_21 121E  
                i1u69_20 19B6                  i1u93_20 122E                  i1u94_20 1234  
                i1u87_20 10BE                  i1u96_20 1242                  i1u89_20 10E4  
                _SSP1BUF 000FC9                ?_lcd_init 0001                  _Adc_isr 0018  
              ?_lcd_putc 0001                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 1430                  ___aomod 1578                SPI_send@c 0001  
              ?_vfprintf 0058             __psmallconst 1000    __size_of_lcd_download 0046  
                __pcinit 1B16                  __ramtop 1000                  _dhbkstr 1001  
                _d_write 1A6E     __size_of_timer0_init 0014            ?_timer0_reset 0001  
                __ptext0 1BB8                  __ptext1 1B74                  __ptext2 1B88  
                __ptext3 1736                  __ptext4 1A8E                  __ptext5 1868  
                __ptext6 18B0                  __ptext7 1B2E                  __ptext8 1B46  
                __ptext9 1BC6                  _lcd_cls 1B5E          __size_of_printf 0028  
        __size_of_tre_ms 001E    __end_of_timer_process 1BE0                  _i_write 1A4E  
        __size_of_strlen 002A             __size_of_abs 0032             __size_of_pad 009A  
             ??_lcd_DHBK 00A5      __end_of_Write_PortA 1B16      __end_of_Write_PortB 1AFC  
             ??_lcd_init 00A6           __pintcode_body 1AAC               ??_lcd_putc 0005  
   end_of_initialization 1B24                  fputc@fp 000B                  int_func 1AAC  
                fputs@fp 0014             _lcd_download 18B0        __end_of_vfpfcnvrt 1430  
                postdec2 000FDD               _timer0_isr 0008                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE         ??i2_timer0_reset 0001  
             ??_vfprintf 005E                  strlen@a 0003                  strlen@s 0001  
         ??_timer0_reset 009F          ??_SPIportA_init 009F          ??_SPIportB_init 009F  
   __size_of_Adc_process 003C                _TRISAbits 000F92              ?_lcd_gotoxy 0089  
            vfpfcnvrt@ap 004C              vfpfcnvrt@fp 0048              vfpfcnvrt@ll 0050  
            tre_ms@p10ms 009F              _Write_PortA 1AFC              _Write_PortB 1AE2  
         __end_of_printf 1A2C           __end_of_tre_ms 1AAC        __size_of_Adc_init 0022  
         __end_of_strlen 1A04      start_initialization 1B16        __size_of_SPI_init 000E  
      __size_of_SPI_send 0010              __end_of_abs 19DA              __end_of_pad 1736  
            vfprintf@fmt 005A              ?_timer0_isr 0001      __size_of_lcd_gotoxy 001A  
               ??_printf 005E                 ??_tre_ms 00A1                 ??_strlen 0003  
               ?_LCDBusy 0001              __pbssCOMRAM 005E            __pcstackBANK0 0089  
       ___aodiv@dividend 0001        __size_of_lcd_DHBK 0048                 ?_Adc_isr 0001  
      __size_of_lcd_init 006C     __end_of_timer0_reset 1B98        __size_of_lcd_putc 003E  
              __pintcode 0008                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013              __pintcodelo 0018                 ?_d_write 0001  
      __size_of_vfprintf 005A                 ?_lcd_cls 0001                 ?_i_write 0001  
            __smallconst 1000          Write_PortA@mask 0002           __size_of_fputc 006C  
         __size_of_fputs 0038      __size_of_timer0_isr 1AC0           __size_of_putch 000A  
              lcd_DHBK@i 00A5                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               i1u100_20 1318                 i1u114_27 1B6A                 i1u115_27 1BEC  
               _PIR1bits 000F9E                 _RCONbits 000FD0                 _SSP1CON1 000FC6  
          ??_timer0_init 009F                _vfpfcnvrt 129A                 _Adc_init 1A2C  
             _ADCON0bits 000FC2                 _SPI_init 1BC6                 _SPI_send 1B98  
              lcd_putc@c 0007         __size_of_LCDBusy 000A             ??_lcd_gotoxy 0004  
            _INTCON2bits 000FF1         __size_of_Adc_isr 006E   __size_of_timer_process 000C  
               __Hrparam 0000               vfprintf@ap 005C                 __Lrparam 0000  
             vfprintf@fp 0058       __end_of_lcd_gotoxy 1AE2         __size_of___aodiv 0148  
       __size_of___aomod 0124               ?_vfpfcnvrt 0048            ??_Adc_process 005E  
           ?_Write_PortA 0001             ?_Write_PortB 0001          ___aodiv@divisor 0009  
        ___aodiv@counter 0011         __size_of_d_write 0020         __size_of_lcd_cls 0016  
    __end_of_timer0_init 1B88    __end_of_SPIportA_init 1B5E         __size_of_i_write 0020  
  __end_of_SPIportB_init 1B46                 _lcd_DHBK 1868                 _dtoa$685 0036  
               __ptext10 1A2C                 __ptext20 17A2                 __ptext12 1934  
               __ptext21 1BE0                 __ptext13 1A04                 __ptext30 1BEA  
               __ptext22 18F6                 __ptext14 180E                 __ptext31 19A8  
               __ptext23 1AC8                 __ptext15 129A                 __ptext32 1578  
               __ptext24 1B5E                 __ptext16 1054                 __ptext33 1430  
               __ptext25 1A4E                 __ptext17 169C                 __ptext26 1A6E  
               __ptext18 19DA                 __ptext35 1BA8                 __ptext27 1AE2  
               __ptext19 1970                 __ptext36 1BD4                 __ptext28 1AFC  
               __ptext29 1B98    __size_of_timer0_reset 0010                 _lcd_init 1736  
               _lcd_putc 18F6            __size_of_main 000E            __size_of_dtoa 0246  
               d_write@d 0003             ??_timer0_isr 0001                 int$flags 005F  
               _vfprintf 180E                printf@fmt 008C                 i_write@d 0003  
       ___aomod@dividend 0001             _timer0_reset 1B88            _timer_process 1BD4  
             _INTCONbits 000FF2  __size_ofi2_timer0_reset 0010      __end_of_Adc_process 1970  
               intlevel1 0000                 intlevel2 0000       __end_of_timer0_isr 1AC8  
               printf@ap 0092              _timer0_init 1B74         lcd_download@addr 00A3  
       lcd_download@data 009F          ___aomod@divisor 0009              ??_vfpfcnvrt 004E  
        ___aomod@counter 0011           ?_timer_process 0001             ___aodiv@sign 0012  
          ?_lcd_download 009F             ___aomod@sign 0012  
